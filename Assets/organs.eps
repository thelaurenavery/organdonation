%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: L
%%CreationDate: 8/10/2016
%%BoundingBox: 0 0 470 429
%%HiResBoundingBox: 0 0 469.2649 428.1915
%%CropBox: 0 0 469.2649 428.1915
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-08-10T20:18:10+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-08-10T20:18:10+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-08-10T20:18:10+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qkOrefPKWkytDe6lG&#xA;J1qGhj5SuCOzCMNxPzymeohHmXKxaLLMWI7fJLovzY8iyPxN+0dejPDMB+CnIDV4+9tPZmcdPtDI&#xA;NP1/RNQhaayv4LiNBWQpIp4j/KFar9OXRyRlyLizwTgakCFaPU9NlNIruFyOoWRT+o4eId7E45Do&#xA;VWS5to5Y4pJUSWXaKNmAZiP5QdzhsMREndUwodirTOiDkzBR4k0GAmkgWom/swaGZfoNf1ZDxY97&#xA;PwpdypHcQSf3cisfAEE5ISB5FiYkcwvyTF2KuxV2KuxVL/MGvaZoGj3Wr6nL6VlaIXlbqT2VVHdm&#xA;OwHjiryHQW8//mxdSalc38/lzySkhSC1s24T3IU0I9Qbn/KY/DXYKd6KvU/K/kzy35Xt5YdFsxb/&#xA;AFjibmUs8kspQHiZHcsxpyPtvtiqd4qsmmhgieaZ1iijBaSRyFVQOpJOwGAmkgEmgx9PzF8ktci3&#xA;GrQ+oTQE8wlf+MhXh+OU/mcd1blHQZqvhLIwQQCDUHcEZe4jsVSbWPOXljR7gW2pahHBcEA+lRnY&#xA;A9OQQNT6cqnmhE0S5GLSZcguIsIzSta0rVoDPpt1HdRDZjG1Sp8GHVfpycJiQsFryYZwNSFI3JNa&#xA;Seb45G0jmhI9KVXanhuv62GYusB4Pi5WjI4/gmdpeRT2UVzyASRQxJNAD3H0HL4TBiC0TgRIhs31&#xA;mDT1k+/HxY96fCl3KizQspdXUqBUsCCAMkJAsDEhIvLUsl1f6le1JikcLHWvQEkfctMxNMTKUpdH&#xA;L1IEYxj1YT+b3ne8trgeX9OlMPwB7+ZDRjzFViBG4HHdvGvzyvWZyDwh2HZejBHiSF9363kSsWBp&#xA;sOxzWu+cq0NeRPzxV0grGw9v7cKEFgQyb8uNMu9R86aTHBUi2nS5lbsscDCRq+x+z8zl+niTMOJr&#xA;sgjhlfUV8301m7eSQl/frbLxX4pm+yvh7nKsuXh97dixcXuSO9uFige81G4EECCrSSGgHsB7+GV4&#xA;9NkylsyanHiDEpPzM8tCcRRQXcylivqKqLWn8qlq/fTNtHsCVWT+Pk6w9uC9h+PmyTSr+w1WES2U&#xA;pDgcmgkAWRfnQn8M12o7OljLnYO0I5Am1tqVxbsI7irp4n7Q+nvlEcsoGpN8sUZi4pyjo6B0PJW3&#xA;BGZQNuIRTeFDiQBU7AdTiql9btf9/J/wQ/rkeId7LgPc8I/5yC1ubW/M/l/yLZTARXEsMty4NV9W&#xA;4k9GLl/qLVv9lhtFPbNJttI0rTLXTLFo4rSziSGBOS7KgoK+J8Tg4x3p4D3JgCCAQag9CMkxdiry&#xA;D87fMNw17baFC5W3SMXFyo/bdiQit/qha/Tmt12Q2Iu/7HwCjM8+QeW5r3dvoL8q9ah1LyhaRet6&#xA;t3YgwXKH7SAMfSrXt6dKHN3p74ADz/FPKdo46ymQ+mX4PxBZTeXltZWst3dSCK3gQySyN0CqKk5c&#xA;TTh44GchGPMvl/V79tQ1W8vmYubmZ5eTdaMxI/DNHmBEzxbG3ssAiIARIIrpyTPyT5huNC8w2t3H&#xA;IVt3dYrtK7NExo1R/k9R74cGQwkC1azAMuMjr0976TzePHoTVZoks3SRQ4lBTgehqN8qzSAjv1bs&#xA;ESZe5jscaRxiNBRF6DNeNnYldihx3BB6MCCPEHtiqb6A0EdubWNAhSrbftVPXMzTSFU4epib4ngP&#xA;5hSyT+cdYZvtfWGjFfBKIPwXNbqDeQvS6EVhj7kgG22UOW7FWn+w3yP6sVTjy1+XfmnzA6Na2jQW&#xA;jdb24Bjip4rUVf8A2IOX49POfIOFn1uPFzO/cHu3kryNpXlWxaK2JnvJgPrV44ozkfsqP2VHYffm&#xA;1w4BjG3N53VauWY2eXcyNmCqWPQCpy4uIAxqw1CLULy8bg3O3kCEsKCpFfh+WY2CpkyPNzNTE44x&#xA;HQh5x+bmsSyapDpYkH1aCNZXirxJlcmh+haU+Zzq+ycIEDPqfueX7SykyEegeH23nm9GvxsGSKyV&#xA;2UBlBrsVDMT07dMws/amQyIjtFy8PZ8OEcXN7J5Z1yRJLTUkIjNR6i16qDRlA8DTMsVmxcubhm8O&#xA;T3PYnRHXiwqM0EoiQou+jIxNhfprvBcfVyeUclSnsRmPCJhLh6FvyETjxdQmmXuOwXzNq9xc38ts&#xA;OYtoGKBArULKaFjtvv0zV6nKTIjoHbaXCIxB6lK7S3e5mWMVQE/E7AgKO538BlMImRoN+SYiLLwO&#xA;/wDOGjS/mcPMXpTzaPFcoUjJAmMMSCMMAfhDGnML9GbYYwI8LppZSZ8XV75dwrEVeFjPbSqslvMo&#xA;J5xyKHRqDxU5qssDA07jFkE42jNC1i5sbyNQJDbyMFljKtShNOQ26jJYMxjLyYZ8InHzehZt3TPA&#xA;/wA4IpE87XDN9mSGFk+QTj+tTmo1g/ePU9lH9yPeWHWzRrcRNKKxB1LjxUHfMV2EuT2zyLZLB5ou&#xA;Li3ASC7s2Nwq7K0kciem+3fjI2bnS5jOHCeceXu7vh097yerhw8uUjfx/b19wTv8w7V7zy6bP/dM&#xA;88K3NNv3at6hHXuUAy+WTgBl3ff0+R3cfCLlXft8OvzFh4l50W2TV1igRUEcKK6qAADUkbD/ACSM&#xA;0WSRkbO5eq0ceGFDkkcaPI6ogq7kKo8SdhkHKJp9X50LwyXa3CzQpINxGTy+Td/wzG1MbFuTppUa&#xA;SXMNzXYq7FUz0SFzK83RAOIPiTmTpo7242pkKp4h+aFm1r531EEfDMUmQ+IeNSf+GqMwdVGshd/2&#xA;dPiwxYrmO5zP/Kn5RaxqqJdaox06yajKhFZ3B8FP2P8AZfdmZi0cpbnYOq1PakIbR9R+x6poPkby&#xA;xoYU2VkpuAN7qb95Kf8AZN9n/YgZsMeCEOQdJn1mXJ9R27k+y5xXYq7FUjlj+o3LpxpDKeSkD6Pw&#xA;6ZjRl4cqP0lyjHxI3/EHnX5r6DcySQ61bBng4CG5WMVIIJKOT4GtCe1PfOm7J1Ea4D7w872ngIPF&#xA;83hd75BhnvHlguTDG7EtFw5UNORCmo27ZPL2TGUrEqB8mGPtIxjRFl6L+X3lu8vby0062eUada8X&#xA;uHLEp6QNSDXYM/Sn8MyM8oafFQ9w72jDGefJZ+L3aa4SMU6t2XOUyZhH3vTY8Jl7kRpVvIWN1L1Y&#xA;UjHt45ViBJ4i2ZpADhCZZkOOw/W7OW3v5GYH05mLo3Y8tyPozXZoES97ssEwY+5BRSenIr05AdVP&#xA;Qg7EfSMrjKjbbKNinlT/APOPumNqplTXGj0gycvq5gJuhH19MNX0ye3P6adszvzEacD8tK3qjekA&#xA;kcKelBCiRQRA14xxqERa+yjMKc+I25uOHCKROm2cl1dpGoPEEGRuwUYccDIoyzEYs1zZureZ/nP5&#xA;XnvLS31y0jMklmpiu1UVPo1LK/yRia/PMHW4rHEOjueydSIkwPXl73jWat6F7x5CtrqzltYLgFZj&#xA;YxmRX2YFkRqEeI6ZsdLExnXk8zrpCQJH879ae+cGppKj+aVR+DH+GX6s+j4uNox6/g8B83Wd1Z+Z&#xA;NQguQRIszFa90O8Z/wCApmryRMZEF6jTTEsYI7k6/LDyvcaz5jguXjP6P091muJCPhLr8SR+5LUq&#xA;PDLtLiMpX0Djdo6kY8ZH8Un0Bm4eVcQCCCKg7EHFUnvtJZKyW45J1Kdx8vHMPLgrcObi1F7FLMxn&#xA;JR1jpkk9Hk+CH8T8svxYTLc8mjLnEdhzTuONI0CIOKrsAMzQABQcEkk2XmH5xeUdT1C4s9W021ku&#xA;mSM29zHCpeQANyjYItWP2mrQbZg6zCZEEB3PZWqjAGEjXUKX5ZflrdW90NZ1229No/8AeKzlHxB/&#xA;9+uvan7IPz8MGl0xB4pMu0e0ARwQPvP6Hq2bB0bsVdirsVdiqncW8U8ZjkFR2PcHxGRlESFFlCZi&#xA;bCUTaXdxchHSWJqgrtuD2KnMcQnA+kuSckJj1Bjs3kby7JN6kmjASVLUQyxrU/5KMF/DMyPa2pAr&#xA;9DiHszTk3+lONP0qS1t1tbC0W0txuEReA37knqcxsmfNlNlyceHDjFBNLTR0Qh5z6jdeI+z9Pjgh&#xA;grcrk1BOw2THMhxnYqtkijlUpIgdT1VgCPxwEA80gkckP+i9O/5Zo/8AgRkPCj3M/Fl3u/Renf8A&#xA;LNH/AMCMfCj3L4su936L07/lmj/4EY+FHuXxZd6vFDDCvCJFjXwUAD8MmAByYGRPNfhQ7FUrj8q+&#xA;WYroXcelWiXIPISrCgIb+YbbH3ysYoXdBvOpyEVxGveiF0xBqrahzPJo/T9Om3bev0YPD9fEx8X0&#xA;cLWr6WmpWywNIYwrh+QFegIp+OOXFxilw5eA21qWg6JqbK2oWMF0ybI8saswHgCRWmSljjLmFx55&#xA;w+kkIi0s7SzgW3tIUt4E+zFEoRR8gtBkhEDYMJTMjZNlWwsXYq7FUmudMne9Yon7l2B5VHfrmHPC&#xA;TLbk5sMwEd+acgAAAbAbAZmOE7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUn8x+Z7TQkge4iklE5YKI+O3Gla1I8cqy5hD&#xA;m5Om0sst0eSawSrNDHKoIWRQ4B60YVywG3HkKNL8KHYq7FXYqh7zUbCy9L63cRweu4ih9RgvORui&#xA;rXqTgMgObZjwznfCCaFn3IjC1uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqN1dw2&#xA;ycpDufsqOpyE8gjzZwxmR2Sx9dkr8MaqO3Ik/wBMxjqT3OUNKO9Xt9ajZgsycK/tDcZOOpB5sJ6Y&#xA;jkmQIIqNwehzJcVRvLqK0tnuJT8CCtO5PYD54JGhbKETI0GC32p3d5cerI5G/wC7QGgX2GYcpkl2&#xA;kMYiKCB866kbvR9MWU8p0klVmP2iFC7/AE8hleoncQ36DHwzlXLZN9Y1Z7lYI4npbpFGwCnYlkDV&#xA;+itMunO3FxYuG752jvLmuSLKtncvyjfaF23IbstfA5PFk6Fq1GHbiDKcyHBdirsVefee9S07W7u5&#xA;8oOGtdVh9K40u6cgJJcEAqikbjkHK1OYuaQkeDr0ei7KwzwRGp+rGbEh3R7/ALLSTyXqeqa555jT&#xA;zJdTW9/pkVLSwHKINIi0kLjxK/Ew/a/1RTK8UjKfq5hzu0sGPBpCcEQYTO8ue3T9Q7ve9bd1RS7k&#xA;KqglmJoAB1JOZzyAF7BiX5e+bdS8xrqk10sQt7e4Edo8SstUNTvUntxyjBlM7t3Ha/Z8NNwCN2Y7&#xA;2yyWWOGJ5ZWCRRqWdzsAoFSTlxNOnAJNBhNx+Z8XrOLPTnuLePrMz8NuleIR6D5nMQ6vuDtY9lmv&#xA;VKiqx/mlo5hLSWtwsw/3WvBlP+y5L+rCNZHuYnsqd7EUlF7+aWpOxFlaRQp2MpaRvwKDKpaw9A5E&#xA;Oyoj6iShYfzM8xI1XWCUdwyEf8RYZEaubZLszEe9PLH807Blpe2csT+MJWRT/wAEUI/HLo6wdQ4s&#xA;+ypfwkNS/mjEzsLTS5Zo1FSzSBCB4kKsn68B1ncFHZR/ikAyDy15psddhcwqYbiKnq27GpAPRge4&#xA;y/FmE3D1OlliO+4705y5xUBqM8iukKNwDCrN06mmSCCh1u2gYenKZV/aVgR92NKrNq3w/DH8Xuds&#xA;eFbQb3M7vyLmvahpTDSE1sJ2mg5PuyniT45EpCIwJcxCqWOwAqTiVAYnqV5NPcUQ0klJ4k78EHem&#xA;azJMyLtMcBEUorZWwHxIJGPV3+In78hTO2oR6Nw0I/u2XmgPahowH4YhWR6NOXt2jY1MZoPkemZ2&#xA;nlYrucDUxqV96S+bb8vOlmp+GL45P9Yjb7h+vBmlvTdpYUOJiWqc/SjEdPUMi+ma0IbsRsfp9sxp&#xA;uxw1ZvuU5/L+vaqEFvGtzJFX1ApWMKGpT7bCtaYDilLluzhqMeO72U7qC/t4Io5mVoYiiSRn4SCK&#xA;CjMOVVB8MEgQFhKMiSOaagkUPQjw8ctcZnujX313T4piayD4JP8AWXr9/XMyErDqs0OGVI3JtaB1&#xA;21v7rRry30+c219JEwtplNCr0+HftXpXtkZgkGubkaWcIZYmY4og7jyeCaf5ju9M80add69bSTz6&#xA;MjwSRPtMxHqNHzLd0aQb+AGayOQiQMuj6Bl0ccunnHCQBk38ul/MBMNW8y+Zn8xW/nZNL+qQovC0&#xA;9VWMbx8GUkn4C9Vc/EuSlklxcdOPp9FgGE6Uz4j1rnf21y5Jjb6z53/Ma4l0+3mi07T4UDXQjLqh&#xA;DbAORyZ+VDRemTE55duQcaem0vZsROQM5nlf6O7382VeSlXyjcw+VNRu0ub6/d57WO2jqkaAdZXo&#xA;r8n4nqDQL1y7F6PSeZdT2mfzkTqIR4YQoGzz93Tb9Kf+e1uG8rXohBJohfj14BwW+inXJ6m+A06r&#xA;QV4wtiPkHXbqzimtRCj23L1GajByxAFOW60oOmYumyEbdHY9oYBIg3ujPPXl6yl0xNdsYRC9VNzG&#xA;ooCrmnKg7hvvyeoxCuINeg1EhPw5G+5gGYLuHYqmXlzR21fV4LKpWNyWmcdQiirf0GWYocUqaNTm&#xA;8OBk9LvtQg0K2kstKtEQwJVQQxUmldwvxMfetc2EpCAqIdFDGcp4pnmw3yA91N5t9ZF4qyzPcqgI&#xA;UKw6U8OfGmYmms5HadoADDXup6rmzeeS7VIiZY26BvhJ8N/7ckEFAOpRyp6qaH6MKGsVdiqb6ahS&#xA;1BP7ZLfw/hkSkIrAlQvyRZzEfykfftleX6S2YvqDFI/ivJW/kVVH01Y/wzW9XZqqSI5bia8TxJ9x&#xA;hVRiPq3Lyj+7Qemh8TWrH8MCp9oSn983b4R9O+ZemHNw9UeTEb+cz3s8xNebsR8q7fhkZGy5kI1E&#xA;BDFELKxALL9k+Fciztkfk6v1i58OC1+/L8HMuHq+QSG8RXnnVgGVnYEHoRU5TJyoGgFgFBQdMCWS&#xA;+Tpz/pMBO3wuo+8H+GX4DzDh6sciyXMhwnYqw38zLPSr3SU0+a4tLPUr91SzuLoEfYdWZRIquV7D&#xA;6cx9QARW1l3XYmTJDIZgSlCHMR8/K91LVrHyV/gqzj1meG9tdIgjjSSCY/FMkYXinpsKl6dDjIQ4&#xA;BfRnp8uq/NSOIGMshPMdL633PNPIXm+78snULqPT3u7W5QK3EsqJJGSV5NxbajmuYeHKYWaen7V7&#xA;PjquGJkIyj9x/sZd5C8qXfmC8/xnrF5KtzLcLNaJbuoDCF6Msgo3wVUKFqDQZfhxmR4yXT9q6+On&#xA;j+VxRHCI0b8+7z629UZQwKsAVIoQehGZryaXQ+XNDhd3hso42fduA4g/QNsrGKI6N8tTkPMom8sY&#xA;LqwmsnAEM0ZiIA6Aim3yyUogimuGQxkJdQ8NvbSazu5rWccZYXKOPcGmaaUaNF6yExKII5FRwMno&#xA;35X6SY7a41SQfFMfRgJ/kU1c/S230Zn6OGxk6TtTNZEB03ZjdabY3VTcQrJUcTXuPA0zLMAebrI5&#xA;JR5FrT9K03TkZLK3S3V934ChNOlT1OMYCPIJyZZT+o2isk1qN3CJYGXuN1+YwhUomdXCPX4yKP8A&#xA;Md/uyTFTxVfDH6kqp/MafRiqfKoVQo2AFAMgydiqldxmS2lQdSpp86bZCYuJDPGakCxAMUluiPtB&#xA;VYf8CR/DNY7RSkRlsYRGQUNDIKlSwIqdxXqcFbLarazMXMJ4EKoI9OtB2oa4QrK9Ng9K0QftN8Tf&#xA;T/ZmxwxqLrc0rk8+zFdo7FWVeUbSRIJrlhRZSFj9wtan8cyMI6uDqpWQEh1e0ktdQmjcUBYuh8VY&#xA;1GUzFFysUuKIQeRbE98oV/SMvh6Jr8+S5dh5uLq/pHvZbmS4DTMqqWYhVUVZjsAB3OKQLeS/mHZ+&#xA;TBqMuoGebWNZv2VLXTYJlaNWChBy9MFwK/s1qT08Rg5xC75kvX9kZNVwCFDHihzkRv39dvj0Y3o3&#xA;kKvm6z0XXpVtDcwfWXhicc1ry4w8mqOZpXau3vlUMPrAk7PU9q/4NLLhHFRqyPt93yeyXcHlfy55&#xA;alt7iNLXRUQxypxZwwk+E8qBmYtXrmeRGEfJ4vHPPqc4IPFl5/Jhf5JamHg1XS1YtBBKs9typy4y&#xA;VVqj/YL9+Y+klzDu/abBRhk6kUfh+C9PzMeVdirsVYT588nz37jU9Oj53IAW4hHVwNgy+4G1Mw9T&#xA;gMvUObtdBrBD0S5dGJ6P5L1zULxIZbWW0gBrLPMjIAvfiGA5H5ZjY9PKR5U7HNrccI2CCfJ65Z2k&#xA;FnaRWtuvCGFQiL7Dx982kYgCg83OZkSTzKthYuxV2KuJoK4qx9VLMFG5JoPpybFH3GnIlvyQkyIK&#xA;t7+OAFNIewNLuP6f1HCUBOcgydirsVYzrNi9tercRryik+FgPAn/AI1P4Zr8+PhlfR2ODJxRrqk8&#xA;4kgKxv8A3I/un7UP7J+WUjZuO6I0viQ8QFGD1JHfluP6YQN0E7M2AAFB0GbV1LFbvyneG4drd4zE&#xA;zEqGJBAJ6HY5jHCb2c6GqFbomx8pRowe8k9Sn+60qF+knfJRw97CeqJ5MgVVVQqgKqigA2AAy9xC&#xA;UNqGm2t/FwnXcfYcbMvyORlEHmzx5DE7Men8oXisfQmR07cqqfwDDKDhPRzI6sdQmmgaLJp4kkmZ&#xA;WlkAFFrQAb9TTLMePhaM+bj5JvlrjobUtPt9RsLiwueX1e5Qxy8DxPFtjQjBKNim3DmljmJx5x3e&#xA;SRaJp/lz829PtYLV/qDcTbg8pDyliKc6mv2ZTue2YPAIZQOj2EtVPU9nSkZDj69ORuvkyDzB+Vs2&#xA;p3Ws6pLemfU7hlk0oisQi4VpG27AinFa+1ctnp7JN79HXaTt0Yo48YjUBtLrfn+ll2j2N5P5etLT&#xA;zDFHc3YjVbtHCyozIfhY1BBOwb55fEExqTptRljHNKWEmMb26IXy15MsdC1HU76GVpZdSl58WVVE&#xA;aci3BQvu36sjjxCJJ727W9pTzwhAihAfPzZBlrrnYq7FXYq7FXYq7FXYq7FXEVFMVQVvpwim9Qty&#xA;C/ZFP14SUUjSARQ9MCUHBpwin9TnVVrxHf6cNopGYEuxV2KqV1brcQNGep+yfA9shOHEKZ458Jtj&#xA;UsZBaORdxsynNcRWzswb3X6ZaR/WkSJAo5BnoOw3yWKNyDDLKolk+bJ1jsVdirsVdirsVdirsVdi&#xA;rqCte/jirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqHuLC2uDykX4v5hscr&#xA;nijLm2QyyjyXW9pBbgiJaE9WO5OGGMR5InkMuatk2DsVWySRxirsFHSp2xVS+vWn+/Vw0tq6sGAI&#xA;NQdwRgV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KpRd288c5kerRs5IAqcmCikEEc9FP3Y2ik00y2nRvUc/Ay0CmtevhgJSEwyKXYq7FUm82ea9M8&#xA;r6SdS1ASNGXEUUcQ5O8jAkKKkAbKTUnIZMgiLLk6TSSzz4YoXTfP/li70C21qa8js7e5BpHOwWQO&#xA;p4svHq1D4fPIjNEi2zJ2fljkOMDiI7ktH5w+SPVkRriZBHIIzIYW4mtfiFKmm3hXI/mYOR/Iuork&#xA;PmzOKWOaJJY25RyKHRh0KsKg5e6sgg0V2KHYq7FXYq7FXYq7FXYq7FXYq7FUr13WJNOjj9OMO8ta&#xA;M1eIpTrT55Xknwt+DEJ80vsPNqiJ/rykuD+79IdQfGp7ZCObvbZ6Xf0o2180abPII25Qk7AuBx+8&#xA;E5IZQWuWmkPNN8tcd2KuxVDx6lp8l29pHcxPdR/bgDqXHzWtciJi6vdmccgOIg0iMkwdirsVdiqU&#xA;atJb3cawgtyViTQ0G331xMLTGdJT9Qg8W+8f0weEz8csjsJ7dolgiLfu0H2tz9+GqaybRWKuxV2K&#xA;sE/N/XdFtfKt3pd06SX99GPqttTk1Q4pIf5QtKgnMbU5IiNHm7nsXSZcmYTj9MeZ/Q8D06zQlnck&#xA;kUAUdPpOa0G3tZYzFMWMS/CxUV7GgxtRF9Aflzf3V95UtJrq6S6m+JSyMrFVBoivx/aC+O/jm108&#xA;iYC3g+1sUYZyIjhDJsuda7FXYq7FVL65aer6Xrx+rWnp8l5VrTpWvXBaOILNR1Gx02ymvr6Zbe0t&#xA;15zTOaBR0/E7Ad8SQBZRKYiLPJ5X56/MHUL23h1TyPqwubOyVxqlokbLIqtsJWSRVk9MVoWX7Joc&#xA;xcuUneBdZqdUSOLEdhzXfkT5vvNQiv8ARdQuZLm4gpdWskrl39NjxkWrEmitxI/1jjpchNgp7Nzm&#xA;VxJetZlu0dirsVQmq2KXtlJAftU5RnwYdMjONhsxT4ZW89hjMcYVnMjbku3Uk75ggO3kbK/CxZl5&#xA;XvXuLAxyGr254An+Uiq/0zKxSsOu1MKlfenGWuOp3NzBbQPPcSLFDGOTyMaADASALLKMTI0ObxrX&#xA;7q0XXpr/AEm7Z1lladJAHjdHZuR6gd+manIRxXEvTaeMvDEZjpSjP528xzD0jfXJA2JjrH0/ylC1&#xA;xOeZ6rHSYh/CFOz8267bTq0d7coxOwkZnQnwIYsv34I5ZDqynpschRiHqHkzzU+u20qXEYju7bj6&#xA;hX7Lhq0YDt03GbDBm4xvzdHrdJ4RFciyPMhwUm1YW1nwccg0hbYCv66DbEzpMYE8krF9bd+f3D/m&#xA;rHxQz8Esg0yG39BLiKpMi9Tt89sbtrMaRuKuxV2Kvl7zvqNzqHm3Vbi4arC5kiQdeKRMURR8lUZp&#xA;M0iZkvpvZuIY9PAD+aPt3S+zuIEjZWajVqdj3yILdkiSdkNcSiSVn7E0Hy7ZE7tsRwhkv5ba7f6V&#xA;5u05bZyIb2eK1uYq/C6TOEqR4qWqMu08zGYrq67tfTQy6eXFziCR8H0rm5fOHYq8g8+/nf8AU7mX&#xA;TfLKxzSRnjLqT/GnIdRCvRqfzHbwB65h5dTW0XVantGjUPm8o1fzf5o1gn9JancXCN1iLlY/ojWi&#xA;D7sxJZJHmXVzzznzJSfItTJV82ebZfLFxpFy017okoAVpVZvSaNgylJe1Co+EkinYdcs8SXDXRyP&#xA;HyGHCd4oDyvFr8muW40Dn+lV5yW4jIDH0kMjDfY1VT8J69MjC725sMIkZDg+pmnkDWp7n827S4Fi&#xA;unTXayw39nEpRRIsDc2CEApV4w7Dxrl+KV5OVOXpshOcGqvn8n0Jmwd87FXYqhdUu1tLCaYmjBSE&#xA;/wBY7D8cjM0GeOPFIB5/mE7Z2Ksn8mowS7f9ligHzHIn9eZGDq4WrPJkeXuG8c86a7qeo6nd2r3D&#xA;w20EzRxQKSF/dtQFl6MSRU1zVZ8plIjo9Lo9PCEARzI5sZaZkPC5aMBh2Ygn/Y0/jlDl2oxwOeTK&#xA;jSRV/dh3ZSBTw+fjitK6XB9MBInZl+ErUbEeLE4rbJfJXmeXRLyQ3EKPb3RRZSpPNFUncHoftbim&#xA;X4M3Afe4ms0vix57h7GxopPgK5tXmkjnu5LoKkgAUVO3cge+T4QiyheK+Ax4QvEe9MrC+maSKBgC&#xA;lCK03oAaYCFtNMil2KuxV8zfmNpT6X5z1SFhSOWZrmI9ik/7zb5FiPozTaiFTL6T2TqBk00D3Cj8&#xA;NmMpvVvHp8spLnw73SHYfMYQiZ5e9mH5U6UNQ88WAYVjtC10/wDzyFU/4crl2ljcw6ztvP4ell/S&#xA;2+f7H0fm4fO2O/mHdXdr5I1me1qJ1tnUMNiFf4WYH2Uk5XmNRLj6qRGORHc+U81TzLsVTHQNA1PX&#xA;tUh03TojLcTGhO/FF7u5HRV7nJQgZGg2YsUpyoPqry3oNpoOhWmkW3xRWqcS5FC7Elnc/wCsxJza&#xA;wjwinpsWMQiIjoioNM023uGuYLSGK4ccXmSNFcgmtCwFTvhEQyEADYDzfypoeq3n5va/ruo2ksMF&#xA;nzhs5ZEKqxIWKNkJ2IMKk7eOY2OJOQkuvw45HUSkRy/H3PUcynZJJrnmE2Un1e2VWnABdmqQtd6U&#xA;FN8pyZK2Dk4cHELPJK7DzlqCh4722SV0PwSxkxhgR4Hnvlcc56hyMmkjziUJqus3OosocBIl3WJe&#xA;lfEnucjOZkzxYRBL8g2ro43kdY0BZ2ICqOpJxUmmeaRYCxsUg6v9qUjux6/d0zMhGg6rLPilaMyb&#xA;W8W872HHzTftcQrykfmhI2KEDiRX8ffNTqARMvTaIg4o0xy5jt1h4JtJUekFPxA17dxlLlFqX6sj&#xA;cQfUlBApI7UB9yajFVsVuWEruvrP6h+CtFr3NMVpN9AtPrms2VpdlY7eeVY3KElviNABUDqdq9sn&#xA;jiDIAteeZjAkcwHvGbl5NJtc9dHi9CEMtDU+9elBTAZEcmcYxPNK/Uv/APfA+4/1wccu5lwQ70/0&#xA;f1Gs1aWIRuCQO9RX8MkCTzYSAB2R2LF2KuxV5v8AnP5QfU9Kj1q0TneacpE6jq9uTU/8izv8icw9&#xA;Xi4hxDmHovZ7XjHM4pfTPl7/ANv6nhRIAqc1j3BNKZIkYL23Nfww8mokSNPXPyC0pvreqaoQeMca&#xA;WsbHuXbm4+jgv35naKO5LzPtNlqMMfnf6P1vZc2DyCldWsF3azWtwgkt50aOWM9GRxxYH5g4CLRI&#xA;Aii8S1j/AJx81cXjnRtRt3s2JKLdmSORR2UmNJA1PHb5ZhS0hvYumydlyv0kV5q2jf8AOPN0ZFbW&#xA;tVRIwfiis1LMR7SSBeP/AABwx0neWWPss/xH5PVfLflPQfLln9V0m1WENT1ZT8UshHd3O5+XQdsy&#xA;oYxEbOzxYI4xUQm+TbXYq7FXYqwC9Pq6pNzNOczAnwHKmYUty7aG0R7kx1LyvdxSM9oPWhO4Wo5r&#xA;7b9csliI5NOPUg89ilbadqCmjW0oP+o39Mr4T3N3iR7wibbQNVnYAQGNe7SfAB9B3/DCMciwlngO&#xA;rJtI0G3sP3hPq3JG8h6D2UZkQxgOHlzmXuTPLGh2KsM89+YtNs5Y7GbTo764ZOfKYfCisSBxNOVT&#xA;TsRmJqcoG1W7PQaaUhxCRiPJ5pHbJNOwto44nckxox4gk9F5kH8c14Fl3hPCEPPb3vKSOdREyhlM&#xA;BBrypSj1AO3ywEJBsWpvAiBfgkdiAGMbca0FN/iXFaeleSPJBVrXWL51ZaLNaQIa7kAqzn28MztP&#xA;p+Ui6fXa7nCPuLO7tnW2kZK8gNqdczw6dJZHldgZ6k8Dxr4b0yTFRwqr28t0igRFuHIbDx8MBVPs&#xA;gydirsVcQCCCKg7EHFXin5i/lLd2txJqnl2Az2chLT2MYrJETuTGvVk9huPl01uo0pG8eT2fZPbs&#xA;ZAY8xqXSXf7/ADebWWk6he3y2NpbSTXjniIFU8qjxHaneuYYiSaD0U8uPHHjkQI976V8jeWE8t+X&#xA;LfTiQ1xvLduvRpnpyp7KAFHsM3OHHwRp857S1n5jMZ9OQ9yf5a4DsVdirsVdirsVdirsVdiqVt5c&#xA;0xrtrl1Zmdi5jJ+Cp36AV/HK/CF23/mJVSaZY0OxV2KuxV2KuxVA6hoWkajLHLe2qTyRCiM1a0rW&#xA;hp1HzyEscZcw3Y884CommIebvy/eWX67osSKSP3tmtEFR+1H0X5jMXPpr3i7LR9oUOHIfixO50bz&#xA;W5VLixu5jHspaJ5KAbUDUbbMU459QXYRzYRylEfFFaZ5E8w3syrJbm0hJ+Oab4aD2T7RP0ZKGmme&#xA;lNeXX4ojY2fJ6zY2kVnZwWkVfTgRY0r1oopvm0jGhTz05mUjI9VbCwUZrO3mbnItWpStSNsNrSn+&#xA;jLP+Q/ecbRStDbwwgiJeIO53J/XgtKpirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVSvXtcGlRRN6XrNKxAHLiAF670Pjlc58LbixcaYWs63FtFOoosyLIAewYVyYNhrkKNKmFDsVdi&#xA;rsVWyypEnJunTbFVH9IW/ifuw0i1dWDKGHQio+nAlvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FWHeeZS93aW67sqM1P9c0H/ABDMfOdw5ulGxLLbeL0beKIdI0VP+BFM&#xA;vAcMmzaphQ7FXYq7FVG9FbZ/o/XhClKcmxTtfsj5ZWybxV2KoK+1vSbA8bu6SN+vCvJv+BWpyEsk&#xA;Y8y248E58g3p2saZqSsbKcTcPtihVhX/ACWAOMMkZciuTDOH1CkZk2p2KuxV2KuxVi+p+cqSNDpU&#xA;azcTRrqSvpVHXgBQv860zFyamtoubi0l7ySObU9YnPKa/nJ8Im9EfdHx/XmOcsj1cuOGA6IO0luG&#xA;iSb15kdtwVmkqB235ZASPezMB3Jvp/mbVrFgJmN9a/tI9PWUeKv+18m+/LoZ5DnuGjJpYy5bFmVj&#xA;fWt9bJc2ziSF+h6Go6gg9CMzYyEhYdbOBiaKvkmLsVSO78xNDcsqKhhU8eRO7U60NaZScm7lR09j&#xA;fmjINd0+UCrlCf5ht94rkxkDXLBIK/6SsPh/fp8QqN/1+GHiDDw5dyDufMNrGSIgZNtm6LX6d8ic&#xA;gbY6cnmgT5hvTxIWMAbmgO/3nIeIW38vFkMbh41cdGAI79cvDhkUuxQwHXb9P8SvOy+pHbOgCVpX&#xA;06VFf9auYk5ep2GKPorvTK382310HVYkiK9HFW2PbfJ+KSw/LRCvDr1+jgyMJV7qQB+IAxGQqcES&#xA;n9pdRXUKyxnY9R3B8Dl4NuJOJiaKthYuxVB39wgUwDdzQt7Cu2EKUvybFNLS6jmUqNpEA5Kf15WW&#xA;SIxVjnnLzDJplsltbNS7uATz7og25fM9BmNqM3CKHNzdFpxM2eQedKk9xKaBpZWNSdySfEnNZKQG&#xA;5d3sAyXyjHJpl9Jd3SsqmMxrGtCSSQd9+gpkcWux4ze5cPVx8SNDvZd/iOy414Scv5aD+uZX8r4q&#xA;5F135OXk03mS0FOMbmvXoKfjkT2vj6ApGjl3hELremnj+9oW8QdvntmQO0cJrdqOmn3I4EEAg1B3&#xA;BGZoNtDHvOd/JFZRWURKtesyyMNj6SAFx/sqgZRqZ0K73L0mO5WejFFUKAqigGwAzBdk1K3CN3/l&#xA;BP3DFVOJo4bWPmwACipO2/XFVSORZFDrXiehII/XiqN0bVZNKvhJX/Qp2VbqPsCTQSj3HfxGW4sn&#xA;CfJoz4eMeYegZsXUofUJVispnYEjiRQdfi2/jkZHZnjFyDDzEkhCsgc12BFdzmM7G3C2WAsoj9Mk&#xA;/EtKb/LGkXa7FLZ01pqStblwFJDspK8RuTvth4WPGB1WIiooVQFUdANhgZMw06NY7GFVbmOIIb/W&#xA;3/jmTEbOuyG5FEEgAk7AdTkmDyqeVp7iSU7tK5Y/NjXMAm3bAUKTq2gEMKoOvVj4nJgMSq4VTXy9&#xA;cFLpoSfhkWoH+Uu/6ssxndx9RHa2Q5e4bsVY6rXEtzLMF5K7GtTTp0xjbKVKtJ6/3Yp2+LJ2WFBb&#xA;ZNPFqcZkFPUqtAa7U/rlZu2e1J/hYvM/PTu3mGUN0SOML8uNf1nNZqvrd7oB+6C3RF4WTSRIHlZ6&#xA;NvTYDbfNLrCeKm3Kd0ZKl9JEyVjTmCNuRIr77ZiNTTSXyPHHxjPOoDfFQUFd8VckN6HdjJGvMgmi&#xA;lqUFNtxiqKUMaD7TdNu5wgKy/TIpYrCFJdnA3B6ipJA+7Ot0UJRxREubp88gZkhj3neNludPn39M&#xA;iWIk/ZDNxZfpPE4NUORcrRHmGP5iOchWea45pDRIhVWlbcnseIxSvhtIoyGJMkg2DvvT5eGNItfc&#xA;XEVvEZJW4qMVS6z1vTtQ1C2sDJ6SXEqxtKa7An5d+mSjGzTGcqBIewZtHSJfrxkGnni3Echz9x4f&#xA;fkMnJuwfUxy3k9KeOT+Rg3j0NcoBcyQsUzAejPErEB42AZeQqN9wd8yebrtwWlt4FkMixqHOxYAV&#xA;+/GgvEeSH1e49GwkIJDP8C09/wCzIzNBswxuTEoZBLIyIDRW48j0Ld/uzHDnlnCLxRVoBxAFB028&#xA;My3WFZdcvq03H7XBqU8aYDyWPN5faqGuYgenIZgh2xT7LGDsVRmjV/SUNPFv+InJw5tWb6SyrMhw&#xA;HYqx57P072ZXrQHknaoYmmMRuyMtl3ox1Ox39zk6DCy3ptoTqPIf3cXxE+5GwysjdneyfYWLDPP+&#xA;iyyenqcClhGvp3AHUKCSr/jQ5harHfqDs+z84HoPwYfZX89oxMdCrfaQ9Dmsy4RPm7SUQWRaDcya&#xA;tO9uqrHMiFxUmhAIBpt13yiPZ8pGon5uLnIxizyZNb+W14g3Ep5d1TpT5nMzF2QK9Z+TgT1ncEQn&#xA;l6wWvLm9elTSn3AZkR7KxDnZazq5oy1sba1UrClK7ljuT9OZmDTQxCohpyZZS5q+XtahfWNrfWr2&#xA;1ynOJ+o6EEdCD2IyMoiQosoTMTYY4/keYMfS1EiP9kSQh2A92DpX7sxjpfNzBre8JZc+WNWsH9KG&#xA;Jr236pNHxVqnchkLbb5VLBIct2+GqjIb7FLpbe/ErRzD6qUNGTZnr7n7OQ4D1ZnMOm7BNS1C+nle&#xA;Kd68GKlRUCqmnfI02XaN8oaFfavrdtHbofShkSS4mp8KIrAmp8TTYZZjgZFpzTEY7vfM2LqVG9tU&#xA;urdom77qfAjocEhYZQlwm2LDRrxHeQWzcujkb1+Xj9GY/AXO8WPeyXS0uEsY1n2cClD1A7A/Rl8L&#xA;rdw8pHFsh7vXbaCVolRpGQ0YigFR2yJyAM4YCRaV6lq7XkaxiP01U1O9a+HYZXKdt+PFwm1PRLES&#xA;XSAJWCMln8KmpH/DYwjZTmnQ82VZkOA4gEUO4PUYq8xuYGsdTeFxT0JKfNQag/SMwSKLtYy4hab5&#xA;NDeKpr5ety1y8xHwxrQH3b+zLMY3cfUS2pkOXuG7FUPfxq0BanxLSh+nCFKV5NinMMSRxhVAHc+5&#xA;8crZL8VcQCCCKg7EHFWNaj5C0i5kMluz2jNuVSjJ9Cnp9BzGnpYnls52PXziKO6J8v8AlS00eWSZ&#xA;ZWnnccA7AKAtakACvWmSxYBDdhqNWcgqqCeZe4jsVdirsVdirsVdiqQeZ9NnuDDNbxGRxVZOIqad&#xA;V/jlGaBO4b8MwNil2n/l7oVx/pmp2ZN07EshkdVPgSqkb4IYRW4Zz1EhsCyqzsrOygW3tIUghXpH&#xA;GoUfOg75eABycYyJ5q2FDsVdirsVY/a2cVxrNyso5IrO/HxPLb9eUiNyLmSmRAUq3fl9mmBtiqxH&#xA;qrE1H664nH3MYajbdM7Gwgs0Kx1JbdmPU0yyMaaJ5DLmiMkwdiqReYPLI1KVLiGQRTgBXLDZlHTp&#xA;3GVZMfE34s3DsUqmsp7QiKVSCooG7GncHKjEhy4zEuS+1sri6cLEhI7sfsj5nERJRKYjzZRZWkdr&#xA;AsSb03ZvE9zmTEUHAnPiNq+Fi7FVC+als3vQD78IUpVk2KdoQUUjoQDlbJvFXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYqh4fqP1mX0uH1j/dtPtZEVbOXFQvkiMkwdirsVdirsVabjT4qU&#xA;98VbFKbdO1MVdirsVdirTcafFSnviq39x/k/hiq8Upt07Yq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:27610492-4b76-e446-aa73-54d872517849</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:27610492-4b76-e446-aa73-54d872517849</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:37856857-fa32-48d3-88b7-e42f542829dd</stRef:instanceID>
            <stRef:documentID>xmp.did:AFB4EF371FF3E411B16BEA76A3E9632D</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:396CFD55945FE4118283B92CD07916B8</stEvt:instanceID>
                  <stEvt:when>2014-10-30T17:12:51+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27610492-4b76-e446-aa73-54d872517849</stEvt:instanceID>
                  <stEvt:when>2016-08-10T20:18:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>470.333333</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Білий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Чорний</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Червоний RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Жовтий RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Зелений RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Блакитний RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Синій RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Пурпуровий RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=52 G=52 B=52</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=142 B=144</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=114 G=102 B=87</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>114</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>86</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=200 G=202 B=205</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>205</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=188 G=189 B=191</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>191</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=80 Y=0 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>21</xmpG:red>
                           <xmpG:green>65</xmpG:green>
                           <xmpG:blue>148</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=109 G=101 B=92 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>101</xmpG:green>
                           <xmpG:blue>92</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=56 B=47 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=75 G=190 B=207</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>75</xmpG:red>
                           <xmpG:green>189</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=212 B=145</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>212</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=100 G=194 B=200</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>100</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=222 G=238 B=241</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>221</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>240</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>LAB</xmpG:mode>
                           <xmpG:L>15.294100</xmpG:L>
                           <xmpG:A>15</xmpG:A>
                           <xmpG:B>-46</xmpG:B>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 200 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>LAB</xmpG:mode>
                           <xmpG:L>41.568600</xmpG:L>
                           <xmpG:A>66</xmpG:A>
                           <xmpG:B>34</xmpG:B>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=167 B=156</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>144</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=168 B=75</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Холодний</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Відтінки сірого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -428.191 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 428.191 li
469.265 428.191 li
469.265 0 li
cp
clp
52.68 222.054 mo
52.6045 221.282 52.1097 220.626 51.3882 220.342 cv
50.6664 220.058 49.8576 220.2 49.2765 220.713 cv
48.1464 221.711 li
46.6562 221.711 li
46.4175 219.881 li
46.2562 218.647 45.2363 217.733 43.9918 217.706 cv
34.9934 217.517 li
34.9708 217.521 li
34.9428 217.517 li
25.4609 217.789 li
24.3403 217.821 23.4218 218.652 23.2764 219.763 cv
23.0114 221.797 li
21.5211 221.797 li
20.391 220.8 li
19.8095 220.287 19.0005 220.146 18.2794 220.429 cv
17.5583 220.713 17.0631 221.368 16.9871 222.14 cv
16.4849 227.265 li
16.3411 228.734 17.3693 230.076 18.8253 230.318 cv
20.1435 230.539 21.4432 229.792 21.9201 228.546 cv
22.2684 227.635 li
22.9419 227.635 li
22.8015 232.12 li
22.793 232.393 22.8942 232.657 23.0823 232.854 cv
23.2709 233.051 23.5305 233.165 23.8029 233.169 cv
35.0049 233.329 li
35.0181 233.332 li
35.042 233.331 li
45.8735 233.082 li
46.1445 233.076 46.4016 232.962 46.5881 232.765 cv
46.7743 232.568 46.8745 232.305 46.8662 232.034 cv
46.7256 227.548 li
47.3991 227.548 li
47.7475 228.459 li
48.2234 229.706 49.5221 230.451 50.8422 230.232 cv
52.2983 229.989 53.3265 228.648 53.1826 227.178 cv
52.68 222.054 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.886275 .898039 .921569 rgb
f
43.749 234.335 mo
25.59 234.335 li
23.8615 234.335 22.4551 235.742 22.4551 237.47 cv
22.4551 239.199 23.8615 240.605 25.59 240.605 cv
43.749 240.605 li
45.4775 240.605 46.8839 239.199 46.8839 237.47 cv
46.8839 235.742 45.4775 234.335 43.749 234.335 cv
cp
.898039 .803922 .784314 rgb
f
52.3265 246.233 mo
52.2507 245.456 51.7513 244.795 51.0248 244.509 cv
50.2988 244.224 49.4829 244.366 48.8972 244.883 cv
47.746 245.899 li
46.214 245.899 li
45.9703 244.029 li
45.8076 242.784 44.7783 241.861 43.5232 241.834 cv
34.3904 241.642 li
34.369 241.647 li
34.3397 241.643 li
24.7161 241.919 li
23.5866 241.951 22.6601 242.788 22.5136 243.909 cv
22.2427 245.987 li
20.7111 245.987 li
19.5598 244.97 li
18.9747 244.454 18.1588 244.31 17.4317 244.597 cv
16.7053 244.883 16.206 245.544 16.1301 246.321 cv
15.6204 251.522 li
15.475 253.006 16.5127 254.36 17.9832 254.605 cv
19.3136 254.826 20.6257 254.074 21.1076 252.816 cv
21.465 251.881 li
22.1742 251.881 li
22.0317 256.45 li
22.0233 256.722 22.1246 256.987 22.3126 257.184 cv
22.5012 257.381 22.7607 257.494 23.0333 257.498 cv
34.4027 257.661 li
34.4156 257.663 li
34.4395 257.663 li
45.4329 257.409 li
45.7039 257.403 45.9609 257.289 46.1475 257.092 cv
46.3336 256.896 46.4338 256.633 46.4254 256.362 cv
46.2825 251.793 li
46.9923 251.793 li
47.3494 252.728 li
47.8309 253.987 49.147 254.74 50.4736 254.518 cv
51.944 254.273 52.9821 252.918 52.8367 251.434 cv
52.3265 246.233 li
cp
.886275 .898039 .921569 rgb
f
54.7191 270.911 mo
54.6387 270.088 54.1107 269.389 53.3414 269.086 cv
52.5732 268.783 51.7093 268.934 51.0889 269.482 cv
49.7722 270.644 li
47.9173 270.644 li
47.6318 268.457 li
47.4582 267.126 46.3583 266.14 45.0164 266.111 cv
34.8325 265.897 li
34.8092 265.902 li
34.7819 265.898 li
24.0516 266.206 li
22.8496 266.24 21.8635 267.13 21.7077 268.323 cv
21.3925 270.742 li
19.5375 270.742 li
18.2209 269.58 li
17.6011 269.033 16.7379 268.879 15.9693 269.183 cv
15.1995 269.486 14.6711 270.185 14.5902 271.009 cv
14.0214 276.809 li
13.8657 278.403 14.9807 279.857 16.5593 280.12 cv
17.9871 280.356 19.3986 279.549 19.9146 278.198 cv
20.3419 277.08 li
21.334 277.08 li
21.1712 282.295 li
21.1627 282.568 21.264 282.832 21.452 283.029 cv
21.6408 283.226 21.9002 283.34 22.1726 283.344 cv
34.85 283.525 li
34.8633 283.528 li
34.8871 283.528 li
47.1461 283.245 li
47.417 283.239 47.674 283.125 47.8607 282.928 cv
48.0468 282.732 48.1469 282.469 48.1386 282.198 cv
47.9753 276.982 li
48.9673 276.982 li
49.3945 278.1 li
49.9117 279.451 51.3212 280.261 52.7504 280.022 cv
54.3295 279.759 55.4441 278.304 55.2877 276.711 cv
54.7191 270.911 li
cp
f
57.71 297.56 mo
57.6232 296.674 57.0555 295.922 56.2277 295.596 cv
55.4014 295.272 54.4729 295.434 53.8054 296.022 cv
52.2625 297.384 li
49.9654 297.384 li
49.6238 294.765 li
49.4353 293.317 48.2388 292.244 46.7787 292.213 cv
35.1591 291.968 li
35.1362 291.973 li
35.1083 291.969 li
22.864 292.32 li
21.5627 292.357 20.4963 293.321 20.3281 294.611 cv
19.9524 297.496 li
17.6551 297.496 li
16.1122 296.134 li
15.4453 295.546 14.5166 295.383 13.6899 295.708 cv
12.8621 296.034 12.2944 296.786 12.2076 297.671 cv
11.5584 304.29 li
11.3877 306.033 12.6075 307.624 14.3355 307.912 cv
15.8919 308.169 17.4403 307.288 18.0065 305.809 cv
18.529 304.442 li
19.9072 304.442 li
19.7171 310.54 li
19.7086 310.813 19.8099 311.077 19.998 311.274 cv
20.1866 311.471 20.4461 311.584 20.7186 311.588 cv
35.1777 311.795 li
35.1968 311.799 li
35.2206 311.799 li
49.208 311.476 li
49.479 311.47 49.736 311.356 49.9226 311.159 cv
50.1088 310.962 50.209 310.699 50.2005 310.428 cv
50.01 304.33 li
51.3886 304.33 li
51.9113 305.697 li
52.4764 307.175 54.0194 308.057 55.5821 307.8 cv
57.3101 307.512 58.5299 305.921 58.3593 304.177 cv
57.71 297.56 li
cp
f
44.3977 258.82 mo
24.5522 258.82 li
22.8237 258.82 21.4172 260.227 21.4172 261.955 cv
21.4172 263.684 22.8237 265.09 24.5522 265.09 cv
44.3977 265.09 li
46.1261 265.09 47.5326 263.684 47.5326 261.955 cv
47.5326 260.227 46.1261 258.82 44.3977 258.82 cv
cp
.898039 .803922 .784314 rgb
f
46.4426 284.572 mo
23.225 284.572 li
21.4965 284.572 20.09 285.979 20.09 287.707 cv
20.09 289.436 21.4965 290.842 23.225 290.842 cv
46.4426 290.842 li
48.1711 290.842 49.5775 289.436 49.5775 287.707 cv
49.5775 285.979 48.1711 284.572 46.4426 284.572 cv
cp
f
442.611 360.568 mo
442.084 360.309 441.45 360.527 441.19 361.051 cv
440.929 361.576 441.143 362.214 441.667 362.477 cv
441.814 362.551 435.477 363.42 428.57 365.526 cv
424.682 363.49 421.297 362.553 421.445 362.478 cv
421.971 362.217 422.187 361.581 421.928 361.054 cv
421.669 360.525 421.029 360.311 420.502 360.568 cv
420.132 360.75 411.449 366.182 411.449 379.928 cv
411.449 393.75 420.235 398.184 420.609 398.324 cv
420.731 398.368 420.857 398.39 420.981 398.39 cv
421.412 398.39 421.819 398.126 421.979 397.697 cv
422.184 397.146 421.904 396.533 421.353 396.327 cv
421.316 396.314 425.385 395.823 429.694 394.012 cv
436.19 395.677 441.896 396.275 441.76 396.327 cv
441.209 396.533 440.93 397.146 441.134 397.697 cv
441.295 398.126 441.701 398.39 442.133 398.39 cv
442.256 398.39 442.382 398.368 442.505 398.324 cv
442.878 398.184 451.664 393.75 451.664 379.928 cv
451.664 366.182 442.981 360.75 442.611 360.568 cv
cp
.890196 .85098 .839216 rgb
f
281.721 141.417 mo
282.235 141.397 277.672 139.963 277.651 139.449 cv
277.631 138.935 277.217 138.536 276.683 138.555 cv
275.832 138.589 268.343 139.022 267.742 143.707 cv
267.52 145.434 267.925 146.815 268.944 147.81 cv
270.111 148.951 272.036 149.517 274.781 149.517 cv
276.085 149.517 277.575 149.389 279.256 149.134 cv
279.765 149.057 280.115 148.582 280.038 148.073 cv
283.299 144.036 li
283.642 141.363 279.844 141.493 281.721 141.417 cv
cp
.94902 .792157 .756863 rgb
f
127.621 235.546 mo
128.127 234.869 li
128.315 234.617 128.357 234.283 128.237 233.991 cv
128.116 233.699 127.852 233.493 127.539 233.447 cv
126.647 233.319 125.374 233.797 123.531 234.544 cv
122.998 234.76 122.278 235.052 121.773 235.214 cv
121.435 231.697 118.925 229.047 118.811 228.928 cv
118.68 228.792 118.509 228.7 118.322 228.667 cv
118.139 228.634 116.457 228.395 114.144 230.083 cv
111.794 231.798 111.89 233.002 112.041 233.44 cv
112.112 233.648 112.257 233.821 112.446 233.928 cv
112.548 234.012 113.239 234.647 114.611 237.474 cv
116.136 240.618 113.437 245.255 113.409 245.302 cv
113.158 245.727 113.298 246.276 113.723 246.527 cv
113.867 246.612 114.024 246.653 114.179 246.653 cv
114.484 246.653 114.782 246.496 114.949 246.214 cv
114.973 246.174 115.094 245.966 115.262 245.636 cv
117.109 245.289 120.785 244.356 121.095 244.543 cv
121.519 244.8 122.069 244.663 122.324 244.241 cv
122.324 244.241 122.788 243.475 123.321 242.508 cv
123.719 242.042 126.379 241.054 128.613 240.423 cv
128.861 240.353 129.067 240.18 129.178 239.947 cv
129.289 239.715 129.294 239.445 129.193 239.208 cv
127.621 235.546 li
cp
.796078 .235294 .235294 rgb
f
253.536 41.2239 mo
253.75 42.0943 253.88 42.9929 253.88 43.9149 cv
253.88 50.1201 248.832 55.168 242.627 55.168 cv
242.606 55.1721 li
242.586 55.168 li
236.381 55.168 231.333 50.1201 231.333 43.9149 cv
231.333 42.9929 231.463 42.0943 231.676 41.2239 cv
207.571 41.2239 li
207.382 42.1879 207.277 43.1817 207.277 44.2001 cv
207.277 45.3421 li
207.277 53.8627 214.21 60.7945 222.73 60.7945 cv
242.504 60.7945 li
242.708 60.7945 li
262.483 60.7945 li
271.004 60.7945 277.935 53.8627 277.935 45.3421 cv
277.935 44.2001 li
277.935 43.1817 277.83 42.1879 277.641 41.2239 cv
253.536 41.2239 li
cp
.94902 .784314 .682353 rgb
f
262.483 28.7477 mo
248.34 28.7477 li
247.799 28.7477 247.361 29.1858 247.361 29.7262 cv
247.361 33.0966 li
247.361 33.4592 247.561 33.7918 247.882 33.9614 cv
250.766 35.4873 252.78 38.1469 253.536 41.2239 cv
277.641 41.2239 li
276.25 34.1234 269.985 28.7477 262.483 28.7477 cv
cp
.929412 .713726 .584314 rgb
f
236.873 28.7477 mo
222.73 28.7477 li
215.228 28.7477 208.963 34.1234 207.571 41.2239 cv
231.676 41.2239 li
232.432 38.1469 234.447 35.4873 237.331 33.9614 cv
237.651 33.7918 237.852 33.4592 237.852 33.0966 cv
237.852 29.7262 li
237.852 29.1858 237.413 28.7477 236.873 28.7477 cv
cp
f
355.391 22.9118 mo
351.33 25.372 347.775 29.3745 347.807 36.5747 cv
347.838 43.4086 351.514 41.4843 351.514 41.4843 cv
351.514 41.4843 355.302 30.1948 358.204 27.2765 cv
361.106 24.3582 355.391 22.9118 355.391 22.9118 cv
cp
.960784 .262745 .301961 rgb
f
355.391 26.1125 mo
351.33 28.5727 347.775 32.5752 347.807 39.7753 cv
347.838 46.6093 351.514 44.685 351.514 44.685 cv
351.514 44.685 355.302 33.3955 358.204 30.4772 cv
361.106 27.5589 355.391 26.1125 355.391 26.1125 cv
cp
.227451 .505882 .760784 rgb
f
355.43 28.801 mo
355.616 29.0028 355.803 29.2043 356.007 29.3803 cv
354.82 29.7904 353.739 30.4851 352.777 31.4591 cv
346.579 37.7355 346.788 54.2579 346.889 62.1984 cv
346.899 63.0133 346.908 63.7262 346.908 64.3139 cv
346.908 64.8083 347.309 65.2092 347.804 65.2092 cv
350.635 65.2092 li
351.128 65.2092 351.528 64.8109 351.53 64.3178 cv
351.559 57.8297 352.629 48.5353 354.829 46.7725 cv
354.798 46.8631 354.766 46.9583 354.734 47.0589 cv
354.639 47.3618 354.204 48.8509 354.13 50.7561 cv
354.419 50.3031 354.735 49.8745 355.107 49.5018 cv
359.15 45.4597 364.202 39.3964 363.192 34.3436 cv
362.437 29.817 359.429 28.6712 355.43 28.801 cv
cp
.933333 .721569 .592157 rgb
f
363.375 11.446 mo
356.665 11.446 353.663 16.3397 353.131 20.5305 cv
352.671 24.1591 353.847 27.5205 356.007 29.3803 cv
359.555 34.2805 357.378 39.9727 354.736 46.8702 cv
354.829 46.7725 li
354.798 46.8631 354.766 46.9583 354.734 47.0589 cv
354.541 47.6758 352.929 53.2011 355.848 57.1756 cv
357.595 59.5538 360.536 60.76 364.588 60.76 cv
376.085 60.76 381.257 45.2774 381.257 34.2832 cv
381.257 28.926 379.967 11.446 363.375 11.446 cv
cp
.788235 .364706 .262745 rgb
f
323.544 22.9118 mo
323.544 22.9118 317.829 24.3582 320.731 27.2765 cv
323.634 30.1948 327.421 41.4843 327.421 41.4843 cv
327.421 41.4843 331.097 43.4086 331.128 36.5747 cv
331.16 29.3745 327.606 25.372 323.544 22.9118 cv
cp
.960784 .262745 .301961 rgb
f
323.544 26.1125 mo
323.544 26.1125 317.829 27.5589 320.731 30.4772 cv
323.634 33.3955 327.421 44.685 327.421 44.685 cv
327.421 44.685 331.097 46.6093 331.128 39.7753 cv
331.16 32.5752 327.606 28.5727 323.544 26.1125 cv
cp
.227451 .505882 .760784 rgb
f
28.0917 220.5 mo
27.519 220.481 27.0599 220.918 27.0386 221.479 cv
26.7791 228.57 li
26.7587 229.13 27.1969 229.602 27.7576 229.623 cv
27.7954 229.623 li
28.3398 229.623 28.7904 229.192 28.8108 228.644 cv
29.0703 221.553 li
29.0906 220.993 28.6525 220.521 28.0917 220.5 cv
cp
.933333 .945098 .968627 rgb
f
27.385 244.671 mo
26.8064 244.647 26.3527 245.089 26.3319 245.649 cv
26.0689 252.846 li
26.0485 253.407 26.4867 253.878 27.0476 253.899 cv
27.0853 253.899 li
27.6296 253.899 28.0802 253.468 28.1006 252.92 cv
28.3637 245.724 li
28.384 245.162 27.9457 244.691 27.385 244.671 cv
cp
f
27.0192 269.274 mo
26.45 269.258 25.9874 269.692 25.9661 270.253 cv
25.6729 278.278 li
25.6525 278.839 26.0907 279.31 26.6516 279.331 cv
26.6893 279.331 li
27.2336 279.331 27.6842 278.9 27.7046 278.352 cv
27.9979 270.327 li
28.0183 269.766 27.58 269.295 27.0192 269.274 cv
cp
f
26.2415 295.821 mo
25.6704 295.807 25.2098 296.239 25.1885 296.8 cv
24.8535 305.957 li
24.8332 306.517 25.2713 306.989 25.8322 307.01 cv
25.8699 307.01 li
26.4143 307.01 26.8649 306.579 26.8853 306.031 cv
27.2202 296.874 li
27.2406 296.314 26.8024 295.842 26.2415 295.821 cv
cp
f
226.929 40.3678 mo
208.46 40.3678 li
207.919 40.3678 207.481 40.8059 207.481 41.3462 cv
207.481 41.8867 207.919 42.3248 208.46 42.3248 cv
226.929 42.3248 li
227.47 42.3248 227.908 41.8867 227.908 41.3462 cv
227.908 40.8059 227.47 40.3678 226.929 40.3678 cv
cp
.913725 .643137 .478431 rgb
f
276.399 40.2454 mo
258.65 40.2454 li
258.11 40.2454 257.671 40.6835 257.671 41.224 cv
257.671 41.7643 258.11 42.2025 258.65 42.2025 cv
276.399 42.2025 li
276.939 42.2025 277.377 41.7643 277.377 41.224 cv
277.377 40.6835 276.939 40.2454 276.399 40.2454 cv
cp
f
270.202 .207839 mo
241.723 .998611 238.102 33.9285 237.802 37.3869 cv
235.567 38.8853 234.187 41.4101 234.187 44.1189 cv
234.187 48.5925 237.827 52.2324 242.301 52.2324 cv
246.774 52.2324 250.414 48.5925 250.414 44.1189 cv
250.414 41.2742 248.935 38.692 246.537 37.2197 cv
245.198 7.60695 269.386 2.35475 270.423 2.14534 cv
270.92 2.04445 271.259 1.57954 271.201 1.07503 cv
271.144 .570449 270.709 .191604 270.202 .207839 cv
cp
.243137 .243137 .243137 rgb
f
173.287 147.941 mo
170.668 147.685 li
172.844 144.422 li
173.109 144.025 173.015 143.489 172.631 143.206 cv
170.327 141.503 li
170.118 141.348 169.849 141.291 169.595 141.351 cv
169.34 141.409 169.123 141.576 169.002 141.808 cv
168.948 141.912 163.522 152.215 159.299 154.728 cv
159.11 154.793 158.453 154.998 157.68 154.998 cv
155.988 154.998 154.964 154.046 154.529 152.007 cv
154.505 151.927 152.107 143.936 156.495 141.613 cv
156.656 141.504 li
156.675 141.488 158.604 139.875 161.149 139.875 cv
162.264 139.875 163.341 140.191 164.352 140.815 cv
164.715 141.04 165.188 140.976 165.479 140.662 cv
168.016 137.925 li
168.233 137.69 168.309 137.358 168.214 137.052 cv
168.12 136.746 167.869 136.514 167.557 136.443 cv
164.077 135.653 li
166.019 134.136 168.324 130.794 167.717 123.556 cv
167.678 123.092 167.29 122.736 166.825 122.736 cv
163.554 122.736 li
163.307 122.736 163.071 122.838 162.902 123.018 cv
162.733 123.197 162.645 123.439 162.66 123.686 cv
162.665 123.765 163.078 131.692 157.937 133.819 cv
155.842 134.686 154.503 135.761 153.322 136.71 cv
151.906 137.847 150.883 138.668 149.077 138.668 cv
148.095 138.668 146.92 138.43 145.485 137.938 cv
145.399 137.909 145.297 137.893 145.207 137.89 cv
144.937 137.883 142.566 137.698 142.619 133.523 cv
142.669 129.54 140.681 127.731 139.12 127.118 cv
139.397 125.808 140.363 122.989 143.681 121.217 cv
143.92 121.089 144.088 120.86 144.139 120.594 cv
144.189 120.327 144.116 120.053 143.941 119.846 cv
142.405 118.044 li
142.16 117.756 141.76 117.654 141.407 117.787 cv
141.189 117.869 136.615 119.652 135.147 124.326 cv
132.768 121.415 130.191 117.627 130.393 116.214 cv
130.433 115.937 130.341 115.657 130.144 115.458 cv
129.947 115.259 129.667 115.167 129.391 115.2 cv
126.854 115.533 li
126.597 115.567 126.367 115.711 126.224 115.926 cv
126.081 116.142 126.038 116.409 126.107 116.66 cv
126.22 117.068 128.929 126.709 134.165 130.06 cv
138.464 132.811 137.327 136.201 137.279 136.337 cv
137.236 136.5 li
137.229 136.538 136.453 140.021 128.003 140.849 cv
128.538 139.435 129.081 137.248 128.243 135.524 cv
127.493 133.979 129.067 132.917 129.245 132.803 cv
129.567 132.603 129.728 132.222 129.648 131.851 cv
129.18 129.715 li
129.122 129.452 128.949 129.228 128.709 129.107 cv
128.468 128.985 128.186 128.978 127.94 129.089 cv
126.409 129.774 li
125.642 126.245 li
125.591 126.008 125.445 125.803 125.24 125.674 cv
125.034 125.547 124.785 125.507 124.55 125.567 cv
121.613 126.301 li
121.366 126.363 121.156 126.527 121.038 126.753 cv
120.919 126.978 120.902 127.243 120.991 127.483 cv
122.459 131.419 124.036 137.665 122.95 139.231 cv
122.892 139.313 122.828 139.381 122.729 139.427 cv
122.055 138.407 120.448 135.844 119.961 133.895 cv
119.895 133.628 119.708 133.406 119.456 133.294 cv
119.203 133.182 118.914 133.193 118.67 133.323 cv
114.932 135.326 li
114.584 135.512 114.399 135.904 114.477 136.291 cv
114.499 136.406 116.902 147.795 127.615 147.795 cv
127.947 147.795 128.287 147.784 128.63 147.762 cv
128.86 149.411 128.981 152.29 127.866 153.724 cv
127.668 153.978 127.622 154.32 127.746 154.618 cv
127.87 154.916 128.145 155.124 128.466 155.162 cv
131.804 155.563 li
132.231 155.611 132.639 155.351 132.766 154.937 cv
132.977 154.254 134.611 148.719 133.378 145.757 cv
134.546 145.063 137.076 143.779 139.779 143.779 cv
141.749 143.779 143.452 144.475 144.855 145.852 cv
144.542 146.003 144.133 146.133 143.648 146.133 cv
143.034 146.133 142.391 145.923 141.737 145.507 cv
141.468 145.335 141.129 145.319 140.846 145.466 cv
140.563 145.612 140.379 145.897 140.362 146.215 cv
140.229 148.752 li
140.208 149.142 140.443 149.5 140.809 149.637 cv
140.932 149.683 143.848 150.767 146.301 150.767 cv
146.74 150.767 147.143 150.731 147.511 150.661 cv
147.251 153.35 145.935 159.473 139.397 161.698 cv
138.568 161.171 136.536 160.099 133.732 160.099 cv
132.661 160.099 131.579 160.257 130.509 160.57 cv
128.888 158.409 li
128.66 158.104 128.264 157.978 127.902 158.092 cv
125.365 158.893 li
125.122 158.97 124.923 159.147 124.819 159.38 cv
124.714 159.612 124.714 159.878 124.817 160.111 cv
125.433 161.497 li
121.316 162.342 li
120.857 162.436 120.548 162.87 120.608 163.335 cv
121.009 166.405 li
121.043 166.665 121.188 166.896 121.407 167.039 cv
121.626 167.181 121.897 167.222 122.148 167.149 cv
122.209 167.131 128.274 165.374 132.343 165.374 cv
133.146 165.374 133.731 165.443 134.156 165.538 cv
131.732 167.118 126.569 170.751 124.04 174.535 cv
116.306 175.549 li
115.931 175.598 115.628 175.877 115.548 176.247 cv
114.88 179.317 li
114.818 179.602 114.899 179.898 115.095 180.112 cv
115.291 180.327 115.577 180.434 115.868 180.396 cv
121.968 179.62 li
121.512 182.216 120.929 188.066 124.309 190.514 cv
124.464 190.626 124.648 190.684 124.834 190.684 cv
124.929 190.684 125.025 190.668 125.118 190.638 cv
129.523 189.169 li
129.797 189.078 130.01 188.859 130.095 188.584 cv
130.18 188.307 130.127 188.006 129.952 187.776 cv
129.921 187.736 126.866 183.644 128.091 178.9 cv
129.035 175.245 132.217 172.108 137.554 169.566 cv
137.794 171.337 137.757 175.501 133.96 181.428 cv
133.817 181.652 133.78 181.927 133.86 182.181 cv
133.941 182.434 134.129 182.639 134.375 182.74 cv
137.312 183.942 li
137.536 184.033 137.786 184.03 138.006 183.935 cv
138.227 183.839 138.401 183.659 138.487 183.434 cv
140.138 179.143 li
142.112 180.201 145.319 182.443 144.439 184.495 cv
144.328 184.755 144.346 185.052 144.487 185.295 cv
144.627 185.54 144.875 185.704 145.156 185.737 cv
148.493 186.137 li
148.966 186.194 149.396 185.874 149.481 185.409 cv
149.529 185.146 150.536 179.001 141.9 174.365 cv
141.611 173.025 140.85 168.384 143.768 166.837 cv
144.429 166.57 150.707 163.945 152.253 159.888 cv
158.504 160.312 li
160.135 162.595 163.373 168.103 162.069 170.962 cv
161.531 172.142 160.167 172.818 158.015 172.974 cv
157.761 172.992 157.527 173.118 157.371 173.319 cv
157.215 173.521 157.153 173.779 157.199 174.03 cv
157.699 176.733 li
157.781 177.174 158.172 177.483 158.625 177.464 cv
158.776 177.457 161.816 177.285 164.043 175.687 cv
164.291 176.904 164.355 178.745 162.979 180.019 cv
162.765 180.217 162.661 180.506 162.699 180.795 cv
162.738 181.083 162.915 181.335 163.173 181.47 cv
165.476 182.671 li
165.727 182.803 166.026 182.808 166.281 182.683 cv
166.433 182.609 167.79 181.895 168.584 179.579 cv
169.658 176.447 169.703 170.225 163.959 158.309 cv
165.203 157.515 167.59 155.594 169.1 151.858 cv
173.061 152.03 li
173.301 152.045 173.53 151.957 173.705 151.796 cv
173.88 151.635 173.984 151.412 173.994 151.175 cv
174.095 148.871 li
174.115 148.396 173.761 147.987 173.287 147.941 cv
cp
.960784 .262745 .301961 rgb
f
47.0121 134.234 mo
47.0082 134.234 li
46.7874 134.153 43.2347 132.453 44.782 112.46 cv
44.8234 111.923 44.4219 111.454 43.8847 111.412 cv
38.1195 111.412 li
37.5825 111.454 37.181 111.923 37.2225 112.46 cv
38.7697 132.453 35.2171 134.153 34.9961 134.234 cv
34.9923 134.234 li
34.5023 134.234 34.0798 134.603 34.0246 135.102 cv
33.9651 135.637 34.3508 136.119 34.8861 136.179 cv
35.0261 136.186 li
35.1114 136.186 35.2247 136.175 35.3536 136.151 cv
35.6661 141.465 li
35.2394 141.793 35.1595 142.405 35.488 142.832 cv
35.68 143.082 35.9691 143.213 36.2614 143.213 cv
36.421 143.213 36.5814 143.174 36.7276 143.094 cv
36.8611 143.048 37.7387 142.796 40.8741 142.796 cv
41.0022 142.77 li
41.1303 142.796 li
44.7891 142.796 45.9787 143.143 46.0325 143.16 cv
46.1373 143.196 46.2444 143.213 46.3496 143.213 cv
46.7482 143.213 47.1226 142.967 47.2664 142.57 cv
47.4086 142.179 47.6672 137.983 47.5435 136.013 cv
47.8372 135.817 48.0215 135.477 47.9799 135.102 cv
47.9244 134.603 47.5021 134.234 47.0121 134.234 cv
cp
.890196 .533333 .45098 rgb
f
84.2857 13.6779 mo
83.2102 13.1996 81.903 13.3927 81.0134 14.1558 cv
80.5994 14.5102 li
79.9355 15.0789 79.0604 15.3519 78.1874 15.259 cv
77.385 15.1718 li
73.7223 14.772 66.9051 14.028 61.7305 14.028 cv
56.2582 14.028 54.9456 14.8579 54.3829 15.6696 cv
54.0456 16.1562 53.971 16.7435 54.1689 17.3303 cv
54.4109 18.3777 58.1384 34.7895 55.8841 41.5972 cv
55.8522 41.6846 55.7834 41.8134 55.7131 41.9528 cv
55.3709 42.6324 55.0753 43.2193 55.4368 43.806 cv
55.6198 44.103 56.0004 44.3118 56.3496 44.3118 cv
56.6255 44.2779 li
57.8359 43.9848 86.2615 36.8631 86.129 16.501 cv
86.1217 15.2802 85.3979 14.1719 84.2857 13.6779 cv
cp
.737255 .32549 .215686 rgb
f
53.5197 14.8226 mo
50.458 13.5763 42.312 10.6767 32.827 10.6767 cv
24.5269 10.6767 17.3723 12.9124 11.5608 17.3205 cv
-4.05731 29.1694 4.93567 59.3883 8.06409 68.3681 cv
8.58851 69.8736 9.90156 70.9613 11.4911 71.2059 cv
11.938 71.2746 12.3946 71.3095 12.8493 71.3095 cv
15.7053 71.3095 19.9306 69.9508 23.8384 63.4777 cv
29.4078 54.254 50.0779 46.5181 54.1658 45.0611 cv
54.9648 44.7753 55.5791 44.1703 55.8506 43.4004 cv
58.8195 34.9996 56.0952 20.917 55.1898 16.8009 cv
54.9933 15.9077 54.3692 15.1678 53.5197 14.8226 cv
cp
.788235 .364706 .262745 rgb
f
37.8897 17.3165 mo
34.0576 17.3165 30.5614 17.7595 27.4987 18.6331 cv
26.965 18.7854 26.6551 19.3416 26.8077 19.8759 cv
26.9335 20.3178 27.3361 20.6061 27.7741 20.6061 cv
27.8655 20.6061 27.9584 20.5934 28.0507 20.5668 cv
30.9336 19.7448 34.2442 19.3279 37.8897 19.3279 cv
38.4451 19.3279 38.8954 18.8776 38.8954 18.3222 cv
38.8954 17.7669 38.4451 17.3165 37.8897 17.3165 cv
cp
.737255 .32549 .215686 rgb
f
20.6476 21.7335 mo
11.8649 27.5961 11.7636 37.0384 11.7636 37.4376 cv
11.7636 37.993 12.2139 38.4433 12.7693 38.4433 cv
13.3247 38.4433 13.775 37.993 13.775 37.4376 cv
13.775 37.3508 13.8663 28.6784 21.7642 23.4061 cv
22.2264 23.0977 22.3506 22.4736 22.0422 22.0115 cv
21.7344 21.5488 21.1082 21.4237 20.6476 21.7335 cv
cp
f
361.626 118.48 mo
359.299 118.48 356.939 119.373 354.609 121.133 cv
346.755 127.066 338.812 127.091 331.018 121.201 cv
328.689 119.441 326.328 118.549 324.002 118.549 cv
319.352 118.549 316.461 122.071 316.045 122.611 cv
315.246 123.44 309.036 130.905 320.022 152.782 cv
322.023 156.766 322.994 161.193 322.831 165.584 cv
322.361 178.268 li
322.249 181.297 324.622 183.872 327.65 184.006 cv
327.898 184.012 li
330.321 184.012 332.443 182.452 333.181 180.131 cv
333.27 179.85 li
334.545 175.828 337.932 165.144 342.882 165.144 cv
347.737 165.144 350.923 175.236 352.283 179.547 cv
352.447 180.062 li
353.209 182.463 355.456 184.046 357.977 183.938 cv
361.005 183.804 363.378 181.23 363.266 178.2 cv
362.796 165.516 li
362.633 161.124 363.605 156.697 365.605 152.713 cv
376.593 130.837 370.381 123.372 369.582 122.543 cv
369.166 122.002 366.274 118.48 361.626 118.48 cv
cp
.898039 .909804 .929412 rgb
f
323.474 141.495 mo
323.474 140.966 323.045 140.538 322.517 140.538 cv
321.989 140.538 321.56 140.966 321.56 141.495 cv
321.56 144.682 323.068 147.403 324.527 150.034 cv
325.807 152.343 327.016 154.524 327.303 157.005 cv
327.359 157.493 327.773 157.852 328.252 157.852 cv
328.363 157.845 li
328.888 157.785 329.265 157.31 329.204 156.785 cv
328.874 153.928 327.515 151.477 326.201 149.107 cv
324.798 146.577 323.474 144.187 323.474 141.495 cv
cp
1 1 1 rgb
f
324.371 124.75 mo
323.223 125.042 321.696 125.893 320.943 128.296 cv
320.786 128.8 321.067 129.337 321.571 129.495 cv
321.666 129.525 321.762 129.539 321.857 129.539 cv
322.264 129.539 322.642 129.277 322.77 128.868 cv
323.162 127.616 323.858 126.855 324.841 126.605 cv
326.093 126.287 327.533 126.853 328.247 127.547 cv
328.626 127.915 329.233 127.906 329.6 127.527 cv
329.968 127.148 329.959 126.542 329.581 126.174 cv
328.501 125.126 326.41 124.234 324.371 124.75 cv
cp
f
144.565 230.703 mo
142.657 230.131 141.026 230.692 140.958 230.717 cv
140.656 230.823 140.434 231.083 140.376 231.398 cv
139.55 235.871 li
139.46 236.357 139.781 236.824 140.267 236.914 cv
140.609 236.976 140.93 236.831 141.128 236.578 cv
142.49 237.24 145 238.107 145.343 238.193 cv
145.562 238.22 li
145.962 238.22 146.328 237.95 146.429 237.543 cv
147.567 233.016 li
147.644 232.711 147.555 232.387 147.332 232.165 cv
147.24 232.073 146.378 231.247 144.565 230.703 cv
cp
.839216 .282353 .282353 rgb
f
139.548 230.536 mo
139.433 230.475 138.36 229.948 136.475 229.946 cv
134.484 229.955 133.088 230.968 133.029 231.011 cv
132.764 231.207 132.628 231.532 132.674 231.859 cv
133.442 237.21 li
133.506 237.657 133.889 237.978 134.327 237.978 cv
134.455 237.969 li
134.48 238.464 138.917 236.914 139.404 236.883 cv
139.898 236.858 140.279 236.438 140.254 235.944 cv
140.021 231.282 li
140.006 230.967 139.826 230.685 139.548 230.536 cv
cp
f
132.207 232.424 mo
132.116 232.16 131.907 231.953 131.642 231.865 cv
131.433 231.796 130.301 231.496 128.521 232.384 cv
126.723 233.28 125.838 234.937 125.801 235.007 cv
125.676 235.247 125.665 235.529 125.771 235.777 cv
128.274 241.608 li
128.42 241.947 128.75 242.151 129.097 242.151 cv
129.119 242.214 129.208 242.186 129.34 242.1 cv
129.45 242.077 li
129.659 241.988 129.808 241.824 129.898 241.634 cv
131.018 240.59 132.947 238.414 133.284 238.299 cv
133.751 238.138 134 237.628 133.839 237.161 cv
132.207 232.424 li
cp
f
184.207 389.974 mo
184.206 389.974 li
183.712 389.971 li
181.674 389.954 180.201 389.943 177.334 390.962 cv
175.431 391.639 173.701 393.179 171.869 394.809 cv
170.709 395.842 169.509 396.91 168.276 397.708 cv
166.259 399.146 162.454 399.728 160.18 400.076 cv
158.171 400.383 157.493 400.487 157.473 401.385 cv
157.452 402.265 158.387 402.453 159.069 402.59 cv
160.15 402.807 160.363 403.962 160.566 406.365 cv
160.696 407.916 160.844 409.675 161.66 411.069 cv
162.144 411.918 164.034 414.696 168.041 414.793 cv
168.241 414.798 168.447 414.796 168.659 414.787 cv
174.693 414.527 183.343 410.27 186.481 406.919 cv
190.111 403.043 190.192 397.625 188.662 393.975 cv
187.63 391.513 185.986 390.018 184.207 389.974 cv
cp
.709804 .513726 .435294 rgb
f
162.384 409.851 mo
161.937 408.781 161.885 407.598 161.834 406.454 cv
161.736 404.239 161.625 401.728 158.188 400.934 cv
156.955 400.721 154.883 401.709 152.064 403.189 cv
150.93 403.784 149.758 404.4 149.207 404.547 cv
148.527 404.729 148.078 405.202 147.975 405.845 cv
147.675 407.72 150.576 410.367 152.606 411.693 cv
153 412.024 153.727 413.787 154.962 420.297 cv
155.265 421.897 156.774 422.847 159.1 422.904 cv
159.101 422.904 li
161.895 422.971 165.893 421.633 166.055 419.298 cv
166.192 417.331 165.099 415.248 163.942 413.044 cv
163.4 412.011 162.839 410.944 162.384 409.851 cv
cp
.890196 .768627 .698039 rgb
f
183.85 370.663 mo
175.473 359.613 165.475 353.781 154.218 353.337 cv
154.087 353.319 153.921 353.31 153.693 353.316 cv
130.831 354.064 120.1 362.339 115.123 369.149 cv
110.32 375.722 108.723 384.134 110.852 391.653 cv
113.641 401.505 123.257 403.877 130.64 402.917 cv
132.801 402.635 133.868 402.204 134.395 401.798 cv
135.115 403.242 136.257 404.509 137.768 405.497 cv
139.724 406.774 141.613 407.308 143.451 407.352 cv
147.063 407.44 150.48 405.637 153.82 403.873 cv
154.438 403.547 155.055 403.222 155.673 402.909 cv
158.337 401.559 159.677 401.412 161.227 401.241 cv
162.713 401.078 164.397 400.893 167.325 399.565 cv
170.458 398.146 171.506 396.931 172.519 395.757 cv
173.43 394.701 174.291 393.704 176.834 392.402 cv
178.687 391.454 180.528 391.264 182.308 391.079 cv
185.467 390.752 188.735 390.413 189.75 385.07 cv
191.013 378.418 187.132 374.235 184.812 371.737 cv
184.429 371.323 184.091 370.961 183.85 370.663 cv
cp
.941176 .737255 .65098 rgb
f
187.99 384.735 mo
187.224 388.77 185.304 388.968 182.123 389.298 cv
180.27 389.49 178.169 389.707 176.018 390.808 cv
173.164 392.269 172.101 393.5 171.163 394.587 cv
170.196 395.709 169.36 396.677 166.586 397.935 cv
163.918 399.144 162.45 399.306 161.032 399.461 cv
159.452 399.635 157.818 399.814 154.863 401.312 cv
154.237 401.629 153.611 401.959 152.984 402.29 cv
148.191 404.82 143.662 407.21 138.747 403.997 cv
136.364 402.441 135.115 400.046 135.322 397.427 cv
135.571 394.256 137.847 391.41 141.41 389.813 cv
143.469 388.89 145.12 388.21 146.57 387.631 cv
146.638 387.604 li
147.083 387.426 147.509 387.258 147.923 387.094 cv
151.1 385.838 153.2 385.008 156.345 382.905 cv
157.133 382.378 157.902 381.965 158.634 381.636 cv
158.867 381.537 159.095 381.441 159.32 381.346 cv
160.676 380.811 161.878 380.547 162.801 380.345 cv
164.255 380.026 165.51 379.752 165.599 378.446 cv
165.6 378.118 165.411 377.801 165.123 377.643 cv
164.607 377.366 161.994 378.275 158.809 379.621 cv
158.406 379.775 157.989 379.952 157.562 380.156 cv
153.907 381.753 149.794 383.76 147.292 385.149 cv
147.721 383.948 147.55 382.598 147.373 381.204 cv
147.247 380.204 147.103 379.071 147.129 377.818 cv
147.18 375.414 147.592 374.538 148.028 373.611 cv
148.388 372.846 148.795 371.98 148.976 370.382 cv
149.301 367.519 148.88 365.788 148.508 364.26 cv
148.428 363.928 148.348 363.601 148.278 363.268 cv
148.158 361.742 148.842 360.248 150.369 358.706 cv
150.717 358.354 150.714 357.787 150.363 357.439 cv
150.013 357.092 149.445 357.095 149.097 357.446 cv
147.186 359.376 146.312 361.406 146.498 363.479 cv
146.514 363.579 li
146.59 363.95 146.678 364.314 146.768 364.683 cv
147.121 366.133 147.486 367.633 147.197 370.179 cv
147.049 371.485 146.752 372.117 146.407 372.849 cv
145.934 373.855 145.398 374.996 145.339 377.78 cv
145.31 379.166 145.462 380.368 145.597 381.429 cv
145.916 383.947 146.062 385.096 143.9 386.134 cv
135.679 389.891 132.11 392.427 133.076 400.515 cv
131.812 401.105 126.652 401.981 121.703 400.441 cv
116.972 398.971 113.901 395.849 112.575 391.165 cv
110.595 384.172 112.088 376.337 116.569 370.206 cv
121.31 363.717 131.61 355.83 153.751 355.105 cv
153.849 355.103 153.92 355.104 154.062 355.119 cv
164.843 355.548 174.385 361.142 182.44 371.766 cv
182.719 372.112 183.085 372.507 183.5 372.955 cv
185.724 375.351 189.086 378.973 187.99 384.735 cv
cp
183.85 370.663 mo
175.473 359.613 165.475 353.781 154.218 353.337 cv
154.087 353.319 153.921 353.31 153.693 353.316 cv
130.831 354.064 120.1 362.339 115.123 369.149 cv
110.32 375.722 108.723 384.134 110.852 391.653 cv
113.641 401.505 123.257 403.877 130.64 402.917 cv
132.801 402.635 133.868 402.204 134.395 401.798 cv
135.115 403.242 136.257 404.509 137.768 405.497 cv
139.724 406.774 141.613 407.308 143.451 407.352 cv
147.063 407.44 150.48 405.637 153.82 403.873 cv
154.438 403.547 155.055 403.222 155.673 402.909 cv
158.337 401.559 159.677 401.412 161.227 401.241 cv
162.713 401.078 164.397 400.893 167.325 399.565 cv
170.458 398.146 171.506 396.931 172.519 395.757 cv
173.43 394.701 174.291 393.704 176.834 392.402 cv
178.687 391.454 180.528 391.264 182.308 391.079 cv
185.467 390.752 188.735 390.413 189.75 385.07 cv
191.013 378.418 187.132 374.235 184.812 371.737 cv
184.429 371.323 184.091 370.961 183.85 370.663 cv
cp
.839216 .611765 .513726 rgb
f
322.928 29.3803 mo
323.132 29.2043 323.319 29.0028 323.505 28.801 cv
319.506 28.6712 316.498 29.817 315.744 34.3436 cv
314.733 39.3964 319.786 45.4597 323.828 49.5018 cv
324.201 49.8745 324.516 50.3031 324.806 50.7561 cv
324.731 48.8509 324.296 47.3618 324.201 47.0589 cv
324.169 46.9583 324.137 46.8631 324.106 46.7725 cv
326.306 48.5353 327.376 57.8297 327.405 64.3178 cv
327.408 64.8109 327.807 65.2092 328.301 65.2092 cv
331.132 65.2092 li
331.626 65.2092 332.027 64.8083 332.027 64.3139 cv
332.027 63.7262 332.036 63.0133 332.046 62.1984 cv
332.147 54.2579 332.356 37.7355 326.158 31.4591 cv
325.196 30.4851 324.116 29.7904 322.928 29.3803 cv
cp
.933333 .721569 .592157 rgb
f
325.804 20.5305 mo
325.272 16.3397 322.271 11.446 315.56 11.446 cv
298.968 11.446 297.678 28.926 297.678 34.2832 cv
297.678 45.2774 302.85 60.76 314.347 60.76 cv
318.399 60.76 321.34 59.5538 323.087 57.1756 cv
326.006 53.2011 324.395 47.6758 324.201 47.0589 cv
324.169 46.9583 324.137 46.8631 324.106 46.7725 cv
324.2 46.8702 li
321.557 39.9727 319.38 34.2805 322.928 29.3803 cv
325.089 27.5205 326.265 24.1591 325.804 20.5305 cv
cp
.788235 .364706 .262745 rgb
f
353.967 228.92 mo
350.92 228.92 347.962 229.677 345.521 231.067 cv
344.776 229.717 343.381 227.179 342.705 225.861 cv
342.362 225.192 341.614 224.854 340.481 224.854 cv
337.693 224.854 331.622 227.045 330.084 229.378 cv
329.528 230.222 329.634 230.92 329.822 231.357 cv
330.44 232.798 331.971 235.335 333.452 237.788 cv
334.54 239.591 335.568 241.294 335.929 242.079 cv
336 242.232 336.086 242.4 336.181 242.588 cv
337.161 244.513 339.456 249.023 333.826 261.524 cv
330.792 268.26 326.114 271.675 319.92 271.675 cv
316.497 271.675 313.587 270.586 312.495 270.118 cv
311.287 269.601 309.853 269.049 308.101 269.049 cv
305.017 269.049 302.106 270.747 299.202 274.239 cv
293.732 280.822 294.389 292.495 295.585 296.254 cv
295.851 297.092 296.681 298.496 299.243 298.496 cv
302.224 298.496 306.26 296.57 307.351 295.052 cv
307.802 294.424 307.764 293.899 307.654 293.569 cv
305.952 288.503 306.727 285.431 307.678 283.746 cv
308.154 282.902 308.693 282.39 309.039 282.136 cv
311.748 287.517 318.679 290.672 329.648 291.516 cv
330.724 291.599 331.812 291.641 332.883 291.641 cv
332.887 291.641 li
345.735 291.639 358.107 285.527 365.98 275.29 cv
372.875 266.326 375.338 255.568 372.739 245.774 cv
369.938 235.22 362.921 228.92 353.967 228.92 cv
cp
.921569 .741176 .698039 rgb
f
339.997 236.72 mo
338.994 237.585 338.113 238.519 337.379 239.497 cv
337.056 239.928 337.143 240.539 337.573 240.862 cv
337.748 240.993 337.954 241.057 338.157 241.057 cv
338.453 241.057 338.746 240.923 338.937 240.668 cv
339.587 239.801 340.372 238.969 341.269 238.196 cv
341.677 237.844 341.723 237.229 341.371 236.822 cv
341.019 236.413 340.403 236.368 339.997 236.72 cv
cp
.890196 .533333 .45098 rgb
f
56.799 117.742 mo
56.4341 117.742 56.0732 117.776 55.725 117.845 cv
42.2132 120.492 45.2476 164.485 45.2944 164.926 cv
46.6382 177.583 61.7516 185.355 71.9951 185.355 cv
74.4966 185.355 76.6049 184.899 78.2617 184 cv
83.6339 181.083 83.7791 157.997 76.7868 141.905 cv
70.2131 126.775 62.7407 117.742 56.799 117.742 cv
cp
.921569 .741176 .698039 rgb
f
26.4494 117.845 mo
26.1012 117.776 25.7404 117.742 25.3754 117.742 cv
19.4332 117.742 11.9608 126.775 5.38758 141.905 cv
-1.60479 157.997 -1.45947 181.083 3.91272 184 cv
5.5691 184.899 7.67774 185.355 10.1793 185.355 cv
10.1798 185.355 li
20.4233 185.355 35.5361 177.583 36.8799 164.926 cv
36.9268 164.485 39.9612 120.492 26.4494 117.845 cv
cp
f
199.122 138.555 mo
198.59 138.537 198.174 138.935 198.154 139.449 cv
198.133 139.963 193.842 140.693 194.356 140.713 cv
196.072 143.424 li
193.83 145.624 li
193.754 146.132 196.04 149.057 196.549 149.134 cv
198.23 149.389 199.719 149.517 201.024 149.517 cv
203.769 149.517 205.694 148.951 206.861 147.81 cv
207.88 146.815 208.285 145.434 208.063 143.707 cv
207.462 139.022 199.973 138.589 199.122 138.555 cv
cp
.94902 .792157 .756863 rgb
f
267.01 126.079 mo
265.037 126.589 263.153 127.078 261.859 127.047 cv
259.261 127.001 256.711 126.17 253.757 125.208 cv
249.518 123.827 244.713 122.261 237.903 122.261 cv
231.093 122.261 226.287 123.827 222.048 125.208 cv
219.094 126.17 216.544 127.001 213.946 127.047 cv
212.63 127.078 210.768 126.589 208.795 126.079 cv
203.585 124.733 196.45 122.889 191.36 128.268 cv
187.696 132.14 186.026 136.86 186.779 141.218 cv
187.33 144.41 189.187 147.026 191.857 148.385 cv
194.472 149.791 197.102 149.371 198.056 148.644 cv
198.647 148.194 198.601 147.661 198.554 147.452 cv
198.507 147.244 198.319 146.745 197.596 146.594 cv
197.31 146.537 li
196.556 146.388 194.26 145.936 194.405 145.077 cv
194.602 144.942 195.455 145.038 195.914 145.088 cv
196.978 145.207 198.186 145.341 198.897 144.509 cv
199.314 144.022 199.259 143.552 199.189 143.314 cv
198.955 142.518 198.09 142.258 196.994 141.929 cv
196.558 141.798 195.736 141.551 195.367 141.342 cv
195.734 141.238 196.35 141.163 196.758 141.113 cv
197.903 140.972 199.087 140.827 199.756 140.132 cv
200.255 139.613 200.173 139.125 200.08 138.881 cv
199.805 138.156 199.059 138.097 198.113 138.023 cv
196.764 137.916 195.426 137.741 195.165 136.889 cv
194.826 135.781 195.153 134.257 195.979 133.095 cv
196.627 132.185 197.853 131.082 200.014 131.002 cv
206.138 130.751 212.878 135.269 215.339 141.236 cv
215.732 142.19 216.242 143.619 216.832 145.273 cv
220.226 154.782 226.542 172.481 236.284 174.089 cv
237.425 174.234 238.565 174.101 239.516 174.101 cv
239.685 174.086 li
249.333 172.312 255.601 154.731 258.969 145.286 cv
259.56 143.626 260.072 142.193 260.466 141.236 cv
262.927 135.269 269.665 130.75 275.791 131.002 cv
277.952 131.082 279.178 132.185 279.826 133.095 cv
280.652 134.257 280.979 135.781 280.64 136.889 cv
280.379 137.741 279.041 137.916 277.692 138.023 cv
276.746 138.097 276 138.156 275.725 138.881 cv
275.632 139.125 275.551 139.613 276.049 140.132 cv
276.718 140.827 277.902 140.972 279.047 141.113 cv
279.447 141.162 280.045 141.235 280.415 141.336 cv
280.025 141.564 279.236 141.802 278.811 141.929 cv
277.715 142.258 276.85 142.518 276.616 143.314 cv
276.546 143.552 276.492 144.022 276.907 144.509 cv
277.619 145.34 278.825 145.207 279.891 145.088 cv
280.35 145.037 281.204 144.943 281.397 145.114 cv
281.545 145.936 279.249 146.388 278.495 146.537 cv
278.209 146.594 li
277.486 146.745 277.298 147.244 277.251 147.452 cv
277.204 147.661 277.158 148.194 277.75 148.644 cv
278.703 149.371 281.334 149.79 283.93 148.395 cv
286.618 147.026 288.475 144.41 289.026 141.218 cv
289.779 136.86 288.109 132.14 284.445 128.268 cv
279.355 122.89 272.22 124.733 267.01 126.079 cv
cp
.890196 .533333 .45098 rgb
f
296.562 370.141 mo
296.645 367.884 295.371 365.819 293.413 364.84 cv
293.816 364.09 294.041 363.268 294.073 362.413 cv
294.189 359.279 291.735 356.635 288.601 356.518 cv
288.389 356.514 li
286.739 356.514 285.171 357.257 284.1 358.501 cv
283.232 357.921 282.226 357.589 281.186 357.55 cv
280.972 357.546 li
278.643 357.546 276.621 358.946 275.755 361.02 cv
274.998 360.605 274.165 360.375 273.293 360.343 cv
273.079 360.339 li
270.859 360.339 268.875 361.634 267.949 363.59 cv
267.417 363.399 266.869 363.292 266.311 363.272 cv
266.102 363.268 li
264.491 363.268 262.998 363.941 261.933 365.111 cv
260.959 364.251 259.725 363.749 258.419 363.701 cv
258.207 363.696 li
256.611 363.696 255.105 364.38 254.041 365.539 cv
253.028 364.426 251.618 363.757 250.077 363.701 cv
249.867 363.696 li
248.883 363.696 247.936 363.951 247.084 364.439 cv
246.06 363.172 244.553 362.404 242.897 362.342 cv
242.687 362.338 li
241.918 362.338 241.16 362.494 240.457 362.795 cv
239.432 361.579 237.938 360.839 236.322 360.779 cv
236.117 360.774 li
235.676 360.774 235.238 360.827 234.808 360.93 cv
233.688 358.872 231.558 357.53 229.178 357.441 cv
225.445 357.3 222.378 360.184 222.24 363.883 cv
222.229 364.18 222.239 364.481 222.27 364.784 cv
220.099 365.545 218.542 367.591 218.455 369.939 cv
218.401 371.374 218.905 372.758 219.823 373.827 cv
217.93 374.703 216.633 376.57 216.551 378.755 cv
216.499 380.158 216.962 381.497 217.83 382.553 cv
216.018 383.464 214.804 385.29 214.725 387.41 cv
214.656 389.262 215.518 391.017 216.955 392.122 cv
215.937 393.125 215.328 394.479 215.274 395.941 cv
215.181 398.449 216.752 400.675 219.055 401.489 cv
218.962 401.864 218.908 402.247 218.893 402.635 cv
218.837 404.153 219.375 405.602 220.408 406.715 cv
221.442 407.829 222.847 408.473 224.365 408.529 cv
224.578 408.533 li
226.243 408.533 227.784 407.813 228.848 406.59 cv
229.865 407.755 231.322 408.471 232.892 408.529 cv
233.107 408.533 li
236.177 408.533 238.672 406.128 238.786 403.057 cv
238.869 400.836 237.652 398.816 235.733 397.819 cv
236.05 397.137 236.229 396.398 236.257 395.636 cv
236.344 393.292 234.946 391.162 232.863 390.239 cv
233.259 389.496 233.479 388.681 233.511 387.833 cv
233.573 386.168 232.912 384.609 231.732 383.503 cv
233.079 382.489 233.93 380.909 233.994 379.178 cv
234.036 378.047 233.745 376.959 233.17 376.023 cv
233.374 375.972 233.576 375.908 233.774 375.834 cv
233.889 377.075 234.407 378.236 235.268 379.165 cv
236.302 380.278 237.707 380.922 239.225 380.978 cv
239.434 380.982 li
240.375 380.982 241.283 380.748 242.107 380.299 cv
243.112 381.786 244.749 382.713 246.579 382.78 cv
246.791 382.784 li
248.299 382.784 249.71 382.189 250.759 381.148 cv
251.777 382.435 253.302 383.229 254.98 383.291 cv
255.194 383.296 li
257.359 383.296 259.271 382.094 260.229 380.246 cv
261.124 380.882 262.186 381.252 263.287 381.292 cv
263.501 381.296 li
265.384 381.296 267.109 380.366 268.156 378.851 cv
269.04 379.466 270.082 379.817 271.18 379.858 cv
271.395 379.862 li
273.604 379.862 275.584 378.574 276.513 376.628 cv
276.879 376.757 277.252 376.846 277.629 376.895 cv
277.239 377.635 277.014 378.457 276.982 379.302 cv
276.938 380.502 277.267 381.654 277.922 382.636 cv
276.538 383.652 275.677 385.236 275.612 386.98 cv
275.58 387.85 275.749 388.705 276.106 389.495 cv
274.576 390.493 273.589 392.188 273.52 394.036 cv
273.485 394.999 273.697 395.94 274.138 396.799 cv
272.963 397.823 272.25 399.293 272.191 400.874 cv
272.172 401.371 272.222 401.866 272.338 402.354 cv
271.401 402.721 270.581 403.333 269.957 404.128 cv
269.152 403.652 268.256 403.386 267.321 403.351 cv
267.111 403.347 li
266.137 403.347 265.181 403.597 264.333 404.072 cv
264.12 404.085 263.868 404.095 263.586 404.107 cv
260.339 404.244 253.582 404.53 251.834 408.503 cv
250.743 410.983 251.161 415.011 251.566 418.907 cv
251.828 421.441 252.077 423.835 251.783 425.069 cv
251.521 426.168 251.84 426.872 252.153 427.269 cv
252.623 427.863 253.41 428.191 254.37 428.191 cv
255.661 428.191 256.973 427.632 257.636 426.799 cv
258.047 426.283 258.197 425.671 258.06 425.075 cv
257.748 423.723 257.892 417.139 260.144 414.309 cv
260.99 413.244 261.992 412.898 263.271 413.214 cv
264.27 414.135 265.548 414.667 266.899 414.717 cv
267.1 414.721 li
267.49 414.721 267.876 414.679 268.258 414.596 cv
268.366 417.541 270.739 419.955 273.73 420.067 cv
273.944 420.071 li
276.525 420.071 278.723 418.343 279.396 415.922 cv
279.507 415.934 279.617 415.942 279.725 415.945 cv
279.939 415.95 li
283.011 415.95 285.506 413.544 285.62 410.473 cv
285.647 409.755 285.536 409.047 285.297 408.376 cv
287.745 407.81 289.581 405.676 289.678 403.057 cv
289.713 402.124 289.509 401.197 289.091 400.357 cv
291.072 399.506 292.462 397.561 292.544 395.344 cv
292.581 394.358 292.359 393.401 291.899 392.529 cv
293.214 391.506 294.01 389.976 294.073 388.285 cv
294.129 386.777 293.595 385.355 292.604 384.272 cv
294.135 383.281 295.134 381.593 295.204 379.724 cv
295.271 377.898 294.465 376.236 293.16 375.146 cv
295.104 374.301 296.478 372.401 296.562 370.141 cv
cp
.952941 .811765 .780392 rgb
f
308.911 269.095 mo
308.378 269.037 307.895 269.422 307.836 269.957 cv
307.778 270.492 308.164 270.973 308.698 271.032 cv
308.845 271.048 312.285 271.469 312.584 275.25 cv
312.624 275.76 313.051 276.148 313.554 276.148 cv
313.632 276.145 li
314.168 276.102 314.569 275.633 314.526 275.097 cv
314.187 270.8 310.705 269.292 308.911 269.095 cv
cp
.890196 .533333 .45098 rgb
f
228.239 397.084 mo
228.128 397.024 225.502 395.655 223.292 397.128 cv
222.881 397.403 222.77 397.959 223.044 398.37 cv
223.319 398.781 223.873 398.891 224.286 398.618 cv
225.598 397.743 227.383 398.657 227.397 398.663 cv
227.531 398.735 227.675 398.769 227.817 398.769 cv
228.137 398.769 228.447 398.596 228.608 398.295 cv
228.841 397.859 228.676 397.316 228.239 397.084 cv
cp
.847059 .67451 .623529 rgb
f
269.677 368.195 mo
269.275 368.482 269.182 369.042 269.469 369.444 cv
269.644 369.689 269.919 369.819 270.198 369.819 cv
270.378 369.819 270.56 369.765 270.718 369.652 cv
272.571 368.329 278.85 367.425 280.219 368.568 cv
280.6 368.883 281.164 368.833 281.48 368.453 cv
281.797 368.073 281.746 367.508 281.366 367.191 cv
279.184 365.372 272.032 366.514 269.677 368.195 cv
cp
f
285.502 389.947 mo
284.875 389.877 284.161 390.213 283.389 390.915 cv
281.654 392.494 279.897 395.699 279.897 398.769 cv
279.897 399.264 280.298 399.664 280.793 399.664 cv
281.287 399.664 281.688 399.264 281.688 398.769 cv
281.688 395.082 284.598 391.85 285.357 391.731 cv
285.846 391.749 286.264 391.407 286.31 390.921 cv
286.356 390.429 285.995 389.993 285.502 389.947 cv
cp
f
228.791 366.287 mo
228.312 366.409 228.023 366.896 228.145 367.374 cv
228.266 367.853 228.754 368.144 229.232 368.023 cv
229.296 368.006 235.678 366.446 239.522 369.614 cv
239.689 369.751 239.891 369.819 240.091 369.819 cv
240.349 369.819 240.605 369.708 240.783 369.493 cv
241.097 369.111 241.043 368.548 240.661 368.233 cv
236.11 364.482 229.088 366.212 228.791 366.287 cv
cp
f
437.688 296.067 mo
436.282 296.067 434.965 296.004 433.802 295.948 cv
432.934 295.908 li
427.529 295.674 425.718 294.721 422.17 290.238 cv
421.081 288.862 419.827 287.731 418.452 286.867 cv
419.964 287.504 421.378 287.892 422.614 287.988 cv
425.719 291.548 430.441 295.497 439.351 295.497 cv
441.099 295.497 442.964 295.34 444.918 295.03 cv
443.254 295.726 440.862 296.067 437.688 296.067 cv
cp
469.265 264.217 mo
469.265 259.518 465.837 255.529 461.295 254.732 cv
461.373 254.471 li
462.149 251.872 463.968 245.786 458.975 242.064 cv
452.586 237.3 446.68 235.574 439.871 236.458 cv
438.658 236.614 437.387 236.86 436.042 237.119 cv
433.638 237.582 431.151 238.061 428.828 238.061 cv
425.366 238.062 423.017 236.97 421.436 234.625 cv
420.471 233.192 419.019 232.403 417.348 232.403 cv
415.402 232.403 413.509 233.502 412.639 235.137 cv
411.867 236.59 411.992 238.208 412.994 239.693 cv
415.527 243.45 418.694 245.816 422.749 246.922 cv
422.104 247.038 421.533 247.127 421.063 247.173 cv
419.385 245.882 417.315 245.176 415.191 245.176 cv
411.422 245.176 407.967 247.43 406.417 250.842 cv
401.451 251.277 397.643 255.384 397.643 260.434 cv
397.643 262.589 398.367 264.671 399.695 266.366 cv
398.936 267.77 398.538 269.336 398.538 270.932 cv
398.538 276.247 402.862 280.571 408.178 280.571 cv
408.44 280.571 408.708 280.558 409.002 280.53 cv
411.272 282.614 413.676 284.363 415.968 285.644 cv
412.094 284.224 407.506 284.772 403.561 287.233 cv
401.633 288.436 400.823 290.539 401.448 292.72 cv
402.082 294.934 403.97 296.48 406.04 296.48 cv
406.905 296.48 407.757 296.221 408.576 295.71 cv
409.665 295.031 410.593 294.7 411.411 294.7 cv
413.099 294.7 414.385 296.175 416.154 298.424 cv
418.8 301.788 421.696 303.848 425.008 304.722 cv
428.106 305.539 431.507 305.954 435.116 305.954 cv
435.117 305.954 li
438.959 305.954 442.899 305.469 446.511 304.551 cv
450.727 303.479 454.176 300.963 455.737 297.82 cv
456.969 295.338 457.001 292.56 455.828 289.784 cv
455.757 289.617 455.678 289.452 455.588 289.285 cv
455.767 289.194 455.948 289.106 456.136 289.032 cv
457.986 288.303 467.21 284.352 467.21 278.132 cv
467.21 275.953 466.467 273.841 465.107 272.135 cv
467.722 270.33 469.265 267.41 469.265 264.217 cv
cp
.890196 .533333 .45098 rgb
f
269.211 238.695 mo
268.776 237.623 li
268.313 236.477 267.317 235.792 266.114 235.792 cv
265.056 235.792 264.041 236.323 263.464 237.178 cv
262.926 237.976 262.84 238.934 263.222 239.876 cv
263.553 240.695 263.886 241.518 264.217 242.345 cv
263.22 241.497 262.307 240.471 261.591 239.138 cv
261.038 238.111 260.01 237.497 258.842 237.497 cv
257.715 237.497 256.646 238.068 256.119 238.949 cv
255.647 239.738 255.65 240.699 256.126 241.584 cv
257.589 244.305 259.293 246.328 261.491 247.951 cv
262.759 248.888 264.149 249.608 265.493 250.305 cv
266.154 250.648 266.835 251 267.471 251.364 cv
268.093 253.437 268.544 255.318 268.849 257.105 cv
268.885 257.321 268.916 257.538 268.942 257.758 cv
266.679 256.628 264.579 254.646 262.69 252.863 cv
262.161 252.364 261.648 251.879 261.151 251.431 cv
260.412 250.757 li
258.091 248.622 254.911 245.699 251.378 245.699 cv
251.013 245.699 250.646 245.731 250.289 245.793 cv
248.283 246.141 246.437 247.701 245.696 249.672 cv
244.949 251.66 245.66 253.709 247.698 255.441 cv
248.425 256.059 249.394 256.588 250.419 257.148 cv
250.911 257.417 251.425 257.697 251.914 257.992 cv
248.135 256.643 243.53 254.309 239.918 252.479 cv
238.878 251.952 237.912 251.463 237.062 251.045 cv
234.957 249.577 231.874 248.833 227.896 248.833 cv
220.91 248.833 212.455 251.074 206.593 252.953 cv
200.346 254.955 192.52 259.586 189.294 266.576 cv
187.343 270.802 187.34 275.306 189.284 279.964 cv
191.4 285.03 196.164 287.708 203.06 287.708 cv
212.605 287.708 225.155 282.273 231.632 275.335 cv
234.75 271.995 237.516 267.35 238.977 263.042 cv
239.215 263.031 239.452 262.99 239.684 262.92 cv
241.688 262.314 244.891 262.956 248.311 263.742 cv
250.967 264.352 253.976 265.043 257.022 265.164 cv
257.193 265.167 li
258.745 265.167 259.875 264.28 260.292 262.732 cv
260.681 261.289 260.638 259.904 260.166 258.583 cv
262.661 260.778 265.343 262.947 268.414 263.999 cv
268.169 265.043 267.874 266.094 267.588 267.117 cv
266.961 269.353 266.313 271.666 266.107 274.092 cv
266.033 274.96 266.302 275.774 266.862 276.385 cv
267.452 277.027 268.344 277.41 269.247 277.41 cv
270.794 277.41 271.922 276.375 272.053 274.835 cv
272.258 272.417 272.922 270.168 273.624 267.787 cv
273.813 267.149 274.001 266.509 274.181 265.862 cv
275.069 262.687 275.269 259.568 274.792 256.329 cv
273.897 250.241 271.515 244.371 269.211 238.695 cv
cp
.113725 .537255 .231373 rgb
f
34.5661 136.676 mo
34.5051 136.705 28.4565 139.623 23.7806 138.866 cv
23.2487 138.779 22.7477 139.142 22.6624 139.674 cv
22.5768 140.206 22.9382 140.706 23.4701 140.792 cv
24.1096 140.894 24.7659 140.94 25.4254 140.94 cv
30.213 140.94 35.1842 138.545 35.4214 138.43 cv
35.9056 138.193 36.1066 137.609 35.8704 137.125 cv
35.6342 136.641 35.0508 136.439 34.5661 136.676 cv
cp
.890196 .533333 .45098 rgb
f
27.3995 138.881 mo
26.8737 138.795 26.3708 139.168 26.2908 139.701 cv
26.2842 139.744 25.5988 144.142 22.9005 147.141 cv
22.54 147.542 22.5724 148.158 22.973 148.518 cv
23.1592 148.686 23.3925 148.769 23.6249 148.769 cv
23.892 148.769 24.1578 148.66 24.3502 148.446 cv
27.437 145.016 28.189 140.193 28.2195 139.989 cv
28.2995 139.457 27.9324 138.96 27.3995 138.881 cv
cp
f
31.4092 137.903 mo
31.3634 137.879 26.837 135.363 25.6798 132.181 cv
25.495 131.674 24.934 131.412 24.4298 131.597 cv
23.9235 131.782 23.6625 132.341 23.8463 132.847 cv
25.2565 136.724 30.2596 139.498 30.472 139.614 cv
30.6206 139.695 30.7811 139.734 30.9392 139.734 cv
31.2835 139.734 31.6178 139.551 31.7949 139.227 cv
32.0541 138.755 31.8807 138.162 31.4092 137.903 cv
cp
f
58.128 138.866 mo
53.4601 139.617 47.4021 136.706 47.3417 136.676 cv
46.8563 136.439 46.2734 136.641 46.0378 137.126 cv
45.802 137.61 46.003 138.193 46.4868 138.43 cv
46.724 138.545 51.6952 140.94 56.4831 140.94 cv
57.1423 140.94 57.7989 140.894 58.4385 140.792 cv
58.9705 140.706 59.332 140.206 59.2462 139.674 cv
59.1605 139.142 58.6538 138.78 58.128 138.866 cv
cp
f
55.6179 139.699 mo
55.5374 139.167 55.0478 138.795 54.5078 138.881 cv
53.9758 138.962 53.6091 139.457 53.6892 139.989 cv
53.7197 140.193 54.4716 145.016 57.5585 148.446 cv
57.7509 148.66 58.0166 148.769 58.2838 148.769 cv
58.5162 148.769 58.7495 148.686 58.9357 148.518 cv
59.3361 148.158 59.3685 147.542 59.0081 147.141 cv
56.3217 144.156 55.6245 139.744 55.6179 139.699 cv
cp
f
57.4789 131.597 mo
56.9742 131.414 56.4136 131.674 56.2288 132.181 cv
55.0717 135.363 50.5452 137.879 50.4994 137.903 cv
50.028 138.162 49.8547 138.755 50.1137 139.227 cv
50.2909 139.551 50.6251 139.734 50.9694 139.734 cv
51.1275 139.734 51.2882 139.695 51.4366 139.614 cv
51.649 139.498 56.6522 136.724 58.0623 132.847 cv
58.2462 132.341 57.9851 131.782 57.4789 131.597 cv
cp
f
82.0767 377.449 mo
80.1204 377.449 78.226 378.062 76.6417 379.194 cv
74.9057 376.636 72.0225 375.086 68.8871 375.086 cv
66.9481 375.086 65.0508 375.693 63.4752 376.805 cv
62.0042 375.905 60.3324 375.433 58.6016 375.433 cv
56.7029 375.433 54.8934 375.994 53.334 377.061 cv
51.6622 376.306 49.7911 376.081 47.913 376.491 cv
45.0451 375.054 41.4896 375.182 38.7398 376.829 cv
37.9554 375.97 37.0159 375.252 35.9859 374.729 cv
35.544 374.506 35.0057 374.683 34.7824 375.122 cv
34.7619 375.162 34.1846 376.493 33.0071 376.791 cv
28.6996 377.878 18.5161 380.012 17.7225 389.486 cv
16.712 401.549 34.6657 405.599 34.9187 405.727 cv
35.0631 406.07 35.3948 406.275 35.7447 406.275 cv
35.8604 406.275 35.9782 406.252 36.0913 406.205 cv
37.0635 405.796 37.9511 405.236 38.7371 404.538 cv
40.0154 405.144 41.4179 405.462 42.8317 405.462 cv
45.6388 405.462 48.2444 404.259 50.0675 402.14 cv
52.7592 402.694 55.4295 402.034 57.5353 400.454 cv
58.8923 401.18 60.4014 401.561 61.9376 401.561 cv
64.2415 401.561 66.4126 400.736 68.1259 399.224 cv
69.5625 400.07 71.1862 400.513 72.8641 400.513 cv
76.1088 400.513 79.0951 398.847 80.8063 396.123 cv
81.2277 396.181 81.6527 396.21 82.0767 396.21 cv
87.249 396.21 91.4572 392.001 91.4572 386.829 cv
91.4572 381.657 87.249 377.449 82.0767 377.449 cv
cp
1 .823529 .501961 rgb
f
31.3627 377.886 mo
35.4088 377.886 38.7003 374.594 38.7003 370.548 cv
38.7003 366.502 35.4088 363.211 31.3627 363.211 cv
16.4126 363.211 4.24946 375.374 4.24946 390.324 cv
4.24946 405.274 16.4126 417.437 31.3627 417.437 cv
35.4088 417.437 38.7003 414.146 38.7003 410.1 cv
38.7003 406.055 35.4088 402.763 31.3627 402.763 cv
24.5043 402.763 18.9246 397.183 18.9246 390.324 cv
18.9246 383.466 24.5043 377.886 31.3627 377.886 cv
cp
.905882 .611765 .521569 rgb
f
73.748 386.122 mo
73.5836 386.15 57.1554 388.981 47.3088 387.668 cv
38.0682 386.435 27.178 388.864 24.5979 389.992 cv
24.145 390.191 23.9381 390.718 24.1366 391.172 cv
24.2835 391.508 24.6123 391.708 24.9573 391.708 cv
25.077 391.708 25.199 391.684 25.3157 391.633 cv
27.4635 390.693 38.0913 388.25 47.0728 389.443 cv
57.1878 390.789 73.8879 387.915 74.0558 387.886 cv
74.5427 387.801 74.869 387.337 74.7841 386.85 cv
74.6993 386.363 74.2394 386.043 73.748 386.122 cv
cp
.870588 .686275 .341176 rgb
f
64.5118 381.765 mo
64.0479 381.593 63.533 381.831 63.3619 382.295 cv
62.2795 385.234 62.1798 388.255 62.1763 388.382 cv
62.1619 388.876 62.551 389.289 63.0451 389.303 cv
63.0717 389.303 li
63.5543 389.303 63.9522 388.92 63.9662 388.434 cv
63.967 388.406 64.0598 385.582 65.0425 382.915 cv
65.2134 382.45 64.9756 381.936 64.5118 381.765 cv
cp
f
54.5314 393.353 mo
53.6912 392.879 53.6724 390.513 53.9242 389.062 cv
54.009 388.575 53.6833 388.112 53.1963 388.027 cv
52.7097 387.938 52.2455 388.266 52.1607 388.753 cv
52.0736 389.249 51.3759 393.631 53.6536 394.912 cv
53.7922 394.991 53.943 395.028 54.0916 395.028 cv
54.4046 395.028 54.7084 394.863 54.8729 394.571 cv
55.1155 394.14 54.9625 393.595 54.5314 393.353 cv
cp
f
43.3493 381.717 mo
42.8588 381.778 42.5107 382.225 42.572 382.716 cv
42.7363 384.031 41.9998 386.963 41.7015 387.98 cv
41.563 388.455 41.8353 388.953 42.3096 389.092 cv
42.5615 389.128 li
42.9489 389.128 43.306 388.874 43.4205 388.484 cv
43.5407 388.073 44.5886 384.413 44.3486 382.494 cv
44.2875 382.003 43.8346 381.658 43.3493 381.717 cv
cp
f
435.921 384.136 mo
434.192 384.136 432.515 384.679 431.113 385.68 cv
429.711 384.679 428.034 384.136 426.304 384.136 cv
421.728 384.136 418.004 387.86 418.004 392.437 cv
418.004 394.466 418.747 396.413 420.099 397.938 cv
420.144 397.997 li
422.732 401.202 422.975 419.03 420.491 424.319 cv
420.336 424.649 420.361 425.034 420.557 425.342 cv
420.751 425.65 421.091 425.836 421.455 425.836 cv
440.77 425.836 li
441.134 425.836 441.474 425.65 441.669 425.342 cv
441.864 425.034 441.889 424.649 441.734 424.319 cv
439.25 419.03 439.493 401.202 442.082 397.997 cv
442.125 397.939 li
443.478 396.414 444.222 394.466 444.222 392.437 cv
444.222 387.86 440.498 384.136 435.921 384.136 cv
cp
.913725 .92549 .94902 rgb
f
442.082 360.855 mo
439.526 357.689 439.27 339.885 441.717 334.567 cv
441.869 334.237 441.842 333.853 441.646 333.547 cv
441.45 333.242 441.113 333.057 440.75 333.057 cv
421.477 333.057 li
421.114 333.057 420.776 333.242 420.58 333.547 cv
420.385 333.853 420.358 334.237 420.51 334.567 cv
422.957 339.885 422.7 357.689 420.144 360.855 cv
420.103 360.909 li
418.748 362.434 418.004 364.384 418.004 366.414 cv
418.004 370.991 421.728 374.715 426.304 374.715 cv
428.035 374.715 429.711 374.172 431.113 373.172 cv
432.515 374.172 434.191 374.715 435.921 374.715 cv
440.498 374.715 444.222 370.991 444.222 366.414 cv
444.222 364.384 443.477 362.434 442.122 360.909 cv
442.082 360.855 li
cp
f
431.113 376.856 mo
415.432 376.856 415.432 378.775 415.432 379.405 cv
415.432 380.035 415.432 381.954 431.113 381.954 cv
446.794 381.954 446.794 380.035 446.794 379.405 cv
446.794 378.775 446.794 376.856 431.113 376.856 cv
cp
.933333 .945098 .968627 rgb
f
438.132 108.863 mo
430.349 108.207 423.31 110.828 417.916 116.378 cv
411.432 123.049 407.595 133.846 407.9 144.557 cv
408.326 159.484 413.121 166.37 418.198 173.661 cv
420.463 176.913 422.805 180.276 424.823 184.488 cv
428.026 191.171 433.557 195.323 439.258 195.323 cv
445.353 195.323 450.191 190.762 452.197 183.123 cv
453.125 179.595 453.443 175.991 453.78 172.177 cv
454.219 167.206 454.673 162.067 456.523 156.509 cv
457.323 154.105 458.143 152.111 458.937 150.184 cv
461.155 144.796 462.907 140.542 461.785 132.546 cv
460.943 126.544 458.704 110.598 438.132 108.863 cv
cp
1 .847059 .752941 rgb
f
442.93 163.691 mo
444.867 158.638 437.529 155.859 435.009 159.986 cv
432.488 164.112 428.362 169.839 434.172 173.207 cv
439.983 176.576 447.309 180.449 445.709 173.207 cv
444.109 165.965 440.993 168.744 442.93 163.691 cv
cp
.929412 .788235 .698039 rgb
f
437.365 151.053 mo
446.115 145.256 448.173 137.419 448.592 135.214 cv
448.593 135.214 li
449.667 131.648 448.047 120.885 442.018 118.273 cv
437.906 116.491 432.512 116.801 427.938 119.08 cv
422.437 121.822 418.492 127.12 416.83 133.999 cv
412.859 150.424 414.785 163.646 422.552 173.294 cv
422.73 173.513 422.989 173.628 423.251 173.628 cv
423.448 173.628 423.646 173.563 423.811 173.43 cv
424.197 173.12 424.257 172.556 423.948 172.171 cv
416.442 162.849 414.684 150.5 418.57 134.419 cv
420.539 126.272 425.186 122.452 428.738 120.682 cv
432.85 118.632 437.666 118.338 441.306 119.916 cv
446.096 121.991 447.54 130.939 446.842 134.821 cv
446.494 136.633 444.602 144.11 436.375 149.561 cv
433.775 151.283 433.528 153.562 434.398 154.951 cv
435.31 156.406 437.521 157.116 439.986 155.658 cv
442.361 154.254 444.388 153.969 445.694 154.857 cv
446.806 155.613 447.148 157 446.994 157.969 cv
446.946 158.274 446.768 159.004 446.157 159.181 cv
444.124 159.772 442.351 161.728 441.641 164.165 cv
441.111 165.982 441.329 167.618 442.239 168.654 cv
444.311 171.012 445.542 174.957 444.59 176.192 cv
443.969 176.998 442.022 176.693 439.38 175.372 cv
434.625 172.994 423.093 164.123 426.79 151.793 cv
427.742 148.621 429.153 145.944 430.985 143.837 cv
431.31 143.465 431.271 142.899 430.897 142.574 cv
430.525 142.25 429.96 142.289 429.634 142.662 cv
427.634 144.962 426.101 147.861 425.075 151.279 cv
421.451 163.364 431.165 173.266 438.579 176.974 cv
440.526 177.947 442.142 178.434 443.42 178.434 cv
444.552 178.434 445.418 178.051 446.008 177.285 cv
447.803 174.957 445.806 170.001 443.584 167.472 cv
443.101 166.922 443.016 165.847 443.36 164.666 cv
443.805 163.139 444.997 161.383 446.657 160.9 cv
447.764 160.579 448.551 159.588 448.763 158.249 cv
449.01 156.689 448.468 154.578 446.7 153.376 cv
445.594 152.623 443.13 151.719 439.075 154.117 cv
437.596 154.991 436.366 154.72 435.916 154.001 cv
435.478 153.302 435.756 152.119 437.365 151.053 cv
cp
.898039 .713726 .584314 rgb
f
415.642 16.7161 mo
415.593 16.6637 410.761 11.338 410.514 2.61146 cv
410.494 1.8791 410.195 1.20552 409.672 .714492 cv
409.156 .229629 408.491 -.0251928 407.753 .00196788 cv
407.036 .0221095 406.369 .320693 405.877 .842239 cv
405.385 1.36336 405.124 2.04579 405.144 2.76265 cv
405.427 12.7176 410.5 19.0012 411.513 20.1597 cv
411.69 20.3618 411.938 20.4653 412.187 20.4653 cv
412.397 20.4653 412.607 20.3923 412.776 20.2437 cv
413.146 19.9209 413.183 19.3634 412.867 18.9911 cv
413.567 18.5828 414.434 18.0666 414.455 18.1029 cv
414.705 18.5295 415.254 18.6751 415.68 18.425 cv
416.107 18.1759 416.251 17.6276 416.003 17.2005 cv
415.899 17.0235 415.776 16.8586 415.642 16.7161 cv
cp
.929412 .713726 .564706 rgb
f
459.915 .00141857 mo
459.872 .00105236 li
458.416 .00105236 457.206 1.1631 457.165 2.61055 cv
456.919 11.3043 452.234 16.5028 452.045 16.7082 cv
451.904 16.8568 451.78 17.0226 451.676 17.2 cv
451.427 17.6272 451.571 18.1754 451.998 18.4245 cv
452.325 18.6154 452.72 18.5723 453.001 18.3516 cv
453.629 19.0957 454.666 20.0326 454.905 20.2415 cv
455.074 20.3901 455.284 20.4632 455.494 20.4632 cv
455.743 20.4632 455.991 20.3595 456.168 20.1575 cv
457.181 18.999 462.254 12.715 462.535 2.76265 cv
462.555 2.04579 462.295 1.36336 461.802 .842239 cv
461.31 .320693 460.643 .0221095 459.915 .00141857 cv
cp
f
356.472 355.706 mo
355.914 355.652 355.349 355.625 354.789 355.625 cv
350.964 355.625 347.267 356.898 343.908 359.155 cv
344.359 359.402 335.744 379.677 332.643 387.493 cv
332.227 386.648 331.859 386.001 331.55 385.606 cv
331.516 385.73 331.702 387.062 332.016 389.102 cv
331.701 389.934 331.528 390.445 331.552 390.513 cv
331.711 390.409 331.916 390.207 332.147 389.95 cv
333.505 398.655 336.662 417.415 336.273 417.69 cv
339.867 422.116 344.496 424.974 349.744 425.48 cv
350.301 425.534 350.867 425.561 351.428 425.561 cv
351.43 425.561 li
364.3 425.561 375.765 411.235 377.528 392.948 cv
379.384 373.712 369.938 357.004 356.472 355.706 cv
cp
.952941 .811765 .780392 rgb
f
341.758 358.16 mo
338.882 358.451 336.304 359.351 334.064 360.842 cv
334.227 360.153 334.389 359.465 334.553 358.778 cv
336.518 350.474 338.551 341.887 338.979 333.823 cv
339.038 332.693 338.701 331.707 338.001 330.97 cv
337.276 330.206 336.193 329.768 335.029 329.768 cv
333 329.768 330.874 331.128 330.736 333.728 cv
330.297 342.039 328.336 350.719 326.441 359.112 cv
322.275 377.553 317.969 396.622 328.799 414.211 cv
331.332 418.324 333.556 419.188 334.976 419.188 cv
334.977 419.188 li
336.223 419.188 337.363 418.517 338.103 417.346 cv
339.078 415.806 339.218 413.686 338.452 412.072 cv
331.382 397.167 334.059 376.211 344.422 365.355 cv
344.591 365.176 344.736 364.992 344.827 364.856 cv
345.89 363.538 346.136 361.584 345.428 360.104 cv
344.766 358.723 343.456 357.988 341.758 358.16 cv
cp
.870588 .701961 .65098 rgb
f
464.452 271.291 mo
464.107 271.212 455.916 269.38 450.581 272.989 cv
450.172 273.266 450.064 273.823 450.341 274.233 cv
450.514 274.488 450.796 274.626 451.084 274.626 cv
451.256 274.626 451.431 274.576 451.585 274.472 cv
456.27 271.303 463.974 273.018 464.051 273.036 cv
464.536 273.145 465.013 272.845 465.124 272.364 cv
465.234 271.883 464.934 271.402 464.452 271.291 cv
cp
.74902 .423529 .329412 rgb
f
400.225 265.908 mo
399.879 266.261 399.884 266.828 400.236 267.174 cv
400.589 267.52 401.156 267.516 401.503 267.163 cv
403.334 265.299 410.865 265.051 414.007 267.267 cv
414.164 267.378 414.344 267.431 414.522 267.431 cv
414.803 267.431 415.08 267.299 415.255 267.051 cv
415.54 266.647 415.443 266.089 415.039 265.804 cv
411.385 263.227 402.801 263.287 400.225 265.908 cv
cp
f
420.067 256.72 mo
413.723 256.557 409.187 254.651 407.932 251.622 cv
407.744 251.165 407.219 250.949 406.763 251.137 cv
406.306 251.326 406.089 251.85 406.278 252.307 cv
407.834 256.065 412.843 258.326 420.021 258.509 cv
420.044 258.51 li
420.528 258.51 420.927 258.124 420.939 257.637 cv
420.951 257.143 420.561 256.732 420.067 256.72 cv
cp
f
417.626 262.538 mo
417.132 262.552 416.742 262.964 416.756 263.458 cv
416.77 263.952 417.188 264.366 417.676 264.328 cv
418.925 264.278 420.537 265.583 421.686 267.539 cv
422.885 269.579 423.672 272.587 422.29 274.914 cv
420.914 277.229 417.617 278.374 412.762 278.208 cv
412.283 278.201 411.854 278.579 411.837 279.073 cv
411.821 279.567 412.208 279.981 412.702 279.998 cv
413.023 280.008 413.335 280.013 413.638 280.013 cv
419.975 280.013 422.677 277.766 423.829 275.829 cv
425.611 272.832 424.688 269.113 423.23 266.631 cv
421.716 264.053 419.587 262.504 417.626 262.538 cv
cp
f
424.813 250.162 mo
424.326 250.095 423.87 250.433 423.801 250.923 cv
423.732 251.412 424.072 251.866 424.562 251.935 cv
425.446 252.06 427.626 252.519 428.776 254.064 cv
429.436 254.95 429.665 256.1 429.455 257.48 cv
428.934 260.92 420.498 262.321 417.584 262.541 cv
417.091 262.578 416.721 263.008 416.758 263.5 cv
416.794 263.971 417.186 264.329 417.65 264.329 cv
417.718 264.326 li
419.013 264.229 430.397 263.221 431.226 257.749 cv
431.509 255.879 431.168 254.279 430.212 252.995 cv
428.66 250.909 425.919 250.319 424.813 250.162 cv
cp
f
441.618 251.101 mo
435.402 249.414 429.153 252.338 428.889 252.463 cv
428.443 252.676 428.254 253.21 428.467 253.657 cv
428.621 253.979 428.941 254.167 429.275 254.167 cv
429.405 254.167 429.536 254.139 429.661 254.08 cv
429.718 254.051 435.563 251.312 441.148 252.828 cv
441.63 252.959 442.117 252.676 442.247 252.199 cv
442.377 251.722 442.095 251.23 441.618 251.101 cv
cp
f
439.752 244.494 mo
439.264 244.57 438.93 245.029 439.007 245.517 cv
439.083 246.006 439.547 246.342 440.029 246.263 cv
440.101 246.252 447.194 245.186 450.413 248.808 cv
450.59 249.007 450.836 249.109 451.083 249.109 cv
451.295 249.109 451.507 249.034 451.678 248.883 cv
452.047 248.554 452.08 247.988 451.752 247.619 cv
447.89 243.274 440.083 244.442 439.752 244.494 cv
cp
f
454.569 265.693 mo
455.062 265.663 455.438 265.239 455.408 264.745 cv
455.378 264.252 454.95 263.877 454.46 263.906 cv
450.19 264.165 442.849 266.736 442.429 274.728 cv
442.287 277.42 442.898 279.435 444.245 280.72 cv
445.672 282.081 447.661 282.432 449.675 282.432 cv
450.84 282.432 452.014 282.314 453.09 282.206 cv
453.616 282.153 454.116 282.103 454.575 282.072 cv
455.069 282.038 455.441 281.611 455.408 281.118 cv
455.374 280.625 454.937 280.254 454.454 280.285 cv
453.976 280.318 453.457 280.37 452.911 280.424 cv
450.339 280.682 447.138 281.004 445.481 279.424 cv
444.529 278.517 444.104 276.968 444.217 274.822 cv
444.653 266.533 453.555 265.755 454.569 265.693 cv
cp
f
459.887 254.984 mo
459.826 255.018 453.693 258.403 447.233 259.264 cv
446.743 259.329 446.399 259.78 446.464 260.27 cv
446.524 260.72 446.909 261.047 447.351 261.047 cv
447.47 261.039 li
454.276 260.131 460.499 256.694 460.76 256.548 cv
461.192 256.307 461.347 255.762 461.105 255.33 cv
460.865 254.898 460.319 254.744 459.887 254.984 cv
cp
f
454.474 288.298 mo
454.335 288.283 451.043 287.931 447.847 288.299 cv
447.355 288.356 447.003 288.799 447.059 289.291 cv
447.112 289.747 447.499 290.084 447.948 290.084 cv
448.051 290.078 li
451.041 289.733 454.247 290.075 454.279 290.079 cv
454.768 290.132 455.213 289.777 455.266 289.286 cv
455.32 288.794 454.965 288.352 454.474 288.298 cv
cp
f
437.951 264.398 mo
433.112 265.548 424.654 266.934 422.551 265.755 cv
422.12 265.513 421.574 265.667 421.332 266.098 cv
421.09 266.529 421.243 267.074 421.675 267.316 cv
422.534 267.799 423.94 267.982 425.583 267.982 cv
430.436 267.982 437.356 266.38 438.365 266.14 cv
438.846 266.026 439.143 265.543 439.029 265.062 cv
438.915 264.581 438.43 264.282 437.951 264.398 cv
cp
f
434.619 281.99 mo
431.266 286.356 423.194 286.479 423.113 286.48 cv
422.618 286.485 422.221 286.889 422.225 287.383 cv
422.229 287.875 422.629 288.271 423.12 288.271 cv
423.127 288.271 li
423.494 288.268 432.152 288.144 436.039 283.08 cv
436.34 282.688 436.266 282.126 435.874 281.825 cv
435.482 281.523 434.92 281.597 434.619 281.99 cv
cp
f
438.812 277.675 mo
435.972 275.184 431.518 274.981 428.672 277.214 cv
428.283 277.519 428.215 278.082 428.52 278.471 cv
428.826 278.86 429.388 278.927 429.777 278.622 cv
431.931 276.933 435.454 277.111 437.631 279.021 cv
439.673 280.813 439.856 283.508 438.133 286.415 cv
437.881 286.84 438.022 287.389 438.447 287.642 cv
438.591 287.727 438.748 287.767 438.903 287.767 cv
439.209 287.767 439.507 287.61 439.674 287.328 cv
441.846 283.663 441.524 280.055 438.812 277.675 cv
cp
f
433.375 257.077 mo
432.888 257.163 432.563 257.628 432.649 258.115 cv
432.736 258.601 433.196 258.924 433.687 258.841 cv
433.759 258.828 440.812 257.635 442.826 262.166 cv
443.623 263.959 443.56 265.81 442.642 267.515 cv
441.357 269.904 438.499 271.731 435.182 272.285 cv
434.694 272.366 434.365 272.827 434.446 273.315 cv
434.519 273.753 434.898 274.063 435.328 274.063 cv
435.476 274.051 li
439.386 273.399 442.654 271.273 444.219 268.364 cv
445.392 266.183 445.479 263.724 444.462 261.438 cv
441.886 255.642 433.721 257.016 433.375 257.077 cv
cp
f
437.427 244.584 mo
433.925 244.796 427.83 246.199 427.572 246.259 cv
427.09 246.371 426.79 246.852 426.901 247.334 cv
426.997 247.747 427.365 248.027 427.773 248.027 cv
427.976 248.004 li
428.037 247.99 434.181 246.574 437.534 246.371 cv
438.028 246.342 438.404 245.917 438.374 245.424 cv
438.344 244.929 437.893 244.54 437.427 244.584 cv
cp
f
433.838 12.3418 mo
417.192 12.3418 403.65 21.4368 403.65 32.6162 cv
403.65 41.8638 413.23 48.7332 420.226 53.749 cv
423.485 56.0853 426.298 58.1028 427.001 59.5503 cv
429.088 63.8457 429.299 68.0067 429.301 68.0482 cv
429.306 68.1571 429.33 68.2646 429.373 68.3643 cv
429.572 68.8207 430.402 69.8826 433.838 69.8826 cv
437.274 69.8826 438.104 68.8203 438.301 68.3638 cv
438.344 68.2642 438.369 68.1566 438.374 68.0482 cv
438.376 68.0067 438.586 63.8457 440.673 59.5503 cv
441.403 58.0504 444.474 55.718 447.724 53.2485 cv
454.604 48.0232 464.026 40.8671 464.026 32.6162 cv
464.026 21.4368 450.484 12.3418 433.838 12.3418 cv
cp
1 .847059 .752941 rgb
f
142.159 245.276 mo
141.889 245.212 133.435 244.308 128.293 243.763 cv
128.333 243.594 li
128.353 243.1 127.969 242.683 127.475 242.664 cv
120.855 242.396 105.339 243.5 104.148 259.39 cv
103.206 271.957 111.68 288.196 120.537 297.742 cv
126.612 304.29 132.849 307.895 138.1 307.895 cv
149.353 307.895 154.378 289.223 156.613 273.515 cv
158.305 268.938 159.351 264.375 159.414 261.292 cv
159.629 250.675 149.67 247.067 142.159 245.276 cv
cp
.913725 .235294 .235294 rgb
f
132.633 236.971 mo
124.171 242.134 122.936 251.448 122.367 256.374 cv
121.799 261.3 132.665 262.5 133.994 256.917 cv
133.999 256.898 134.084 254.86 136.674 249.797 cv
139.057 245.14 146.566 247.796 146.641 247.824 cv
146.936 247.93 147.264 247.876 147.508 247.68 cv
150.532 245.247 151.189 240.376 151.216 240.169 cv
151.255 239.861 151.133 239.555 150.891 239.36 cv
150.502 239.044 141.269 231.7 132.633 236.971 cv
cp
.92549 .34902 .34902 rgb
f
143.497 260.933 mo
143.005 260.971 142.635 261.4 142.672 261.893 cv
142.685 262.066 143.891 279.367 137.131 295.624 cv
136.941 296.081 137.157 296.605 137.614 296.795 cv
137.727 296.841 137.843 296.864 137.957 296.864 cv
138.308 296.864 138.641 296.656 138.784 296.312 cv
145.714 279.648 144.471 261.936 144.457 261.759 cv
144.42 261.266 144.002 260.901 143.497 260.933 cv
cp
.796078 .235294 .235294 rgb
f
140.266 286.81 mo
140.23 286.837 136.635 289.54 129.635 290.798 cv
129.148 290.886 128.824 291.351 128.912 291.838 cv
128.99 292.271 129.367 292.575 129.792 292.575 cv
129.952 292.561 li
137.42 291.218 141.201 288.351 141.358 288.229 cv
141.749 287.927 141.821 287.367 141.52 286.976 cv
141.22 286.584 140.658 286.51 140.266 286.81 cv
cp
f
135.531 289.371 mo
135.052 289.244 134.563 289.529 134.437 290.008 cv
134.102 291.274 133.401 293.316 132.892 293.888 cv
132.563 294.257 132.596 294.823 132.965 295.152 cv
133.136 295.304 133.349 295.379 133.56 295.379 cv
133.807 295.379 134.052 295.277 134.229 295.079 cv
135.203 293.985 136.015 291.044 136.168 290.465 cv
136.294 289.987 136.009 289.497 135.531 289.371 cv
cp
f
144.227 272.87 mo
144.193 272.377 143.765 272.011 143.273 272.038 cv
142.78 272.071 142.408 272.498 142.441 272.991 cv
142.46 273.278 142.955 280.053 146.634 284.193 cv
146.812 284.391 147.057 284.493 147.304 284.493 cv
147.516 284.493 147.728 284.418 147.899 284.267 cv
148.268 283.938 148.301 283.372 147.973 283.003 cv
144.705 279.326 144.232 272.934 144.227 272.87 cv
cp
f
151.212 280.908 mo
150.339 281.096 146.935 280.532 145.858 280.02 cv
145.411 279.807 144.877 279.998 144.665 280.445 cv
144.453 280.892 144.643 281.426 145.09 281.638 cv
146.117 282.125 148.965 282.732 150.716 282.732 cv
151.054 282.732 151.352 282.709 151.587 282.659 cv
152.071 282.555 152.379 282.079 152.275 281.596 cv
152.172 281.112 151.695 280.805 151.212 280.908 cv
cp
f
123.237 259.941 mo
123.234 259.941 li
122.74 259.943 122.34 260.345 122.342 260.84 cv
122.342 260.959 122.301 272.84 115.356 277.522 cv
114.946 277.798 114.838 278.355 115.114 278.765 cv
115.287 279.022 115.569 279.16 115.857 279.16 cv
116.029 279.16 116.203 279.11 116.357 279.007 cv
124.086 273.796 124.134 261.361 124.132 260.834 cv
124.131 260.34 123.73 259.941 123.237 259.941 cv
cp
f
185.898 41.5237 mo
185.891 41.4508 li
182.139 28.7257 161.459 8.47163 133.612 13.4034 cv
108.543 17.8439 102.825 41.233 102.77 41.4689 cv
102.769 41.5036 li
102.764 41.689 li
102.765 41.7062 li
102.763 41.7184 li
102.649 41.9079 102.605 42.1392 102.66 42.3716 cv
102.715 42.6052 108.468 65.7948 133.494 70.4326 cv
136.476 70.9852 139.486 71.2567 142.486 71.2567 cv
153.172 71.2567 163.734 67.809 172.439 61.3194 cv
180.035 55.6559 185.159 48.3418 185.81 42.2309 cv
185.8 42.125 li
185.835 42.0721 li
185.886 41.9121 li
185.897 41.8547 li
185.901 41.8346 li
185.918 41.75 li
185.906 41.6237 li
185.898 41.5237 li
.937255 .945098 .960784 rgb
f
107.041 36.337 mo
106.679 36.0013 106.113 36.0219 105.775 36.383 cv
105.439 36.7454 105.459 37.312 105.821 37.6486 cv
105.837 37.6635 103.247 40.4719 103.283 42.4628 cv
103.305 43.6769 105.603 44.076 104.481 45.1986 cv
104.131 45.5484 105.448 45.6188 105.798 45.9685 cv
105.973 46.1434 106.202 46.2309 106.431 46.2309 cv
106.66 46.2309 106.889 46.1434 107.064 45.9685 cv
108.543 44.4891 109.278 42.8672 109.247 41.1483 cv
109.196 38.3731 107.129 36.4188 107.041 36.337 cv
cp
.890196 .533333 .45098 rgb
f
141.52 50.3864 mo
137.341 50.3864 133.941 46.9863 133.941 42.8073 cv
133.941 38.6282 137.341 35.2282 141.52 35.2282 cv
145.699 35.2282 149.099 38.6282 149.099 42.8073 cv
149.099 46.9863 145.699 50.3864 141.52 50.3864 cv
141.52 23.5082 mo
130.878 23.5082 122.221 32.1655 122.221 42.8073 cv
122.221 53.4491 130.878 62.1065 141.52 62.1065 cv
152.162 62.1065 160.819 53.4491 160.819 42.8073 cv
160.819 32.1655 152.162 23.5082 141.52 23.5082 cv
.219608 .603922 .858824 rgb
f
186.619 41.442 mo
182.801 28.4946 161.759 7.88643 133.426 12.9044 cv
107.918 17.4225 102.101 41.2204 102.045 41.4604 cv
102.044 41.4958 li
102.038 41.6845 li
102.045 41.844 li
102.105 42.0001 li
102.177 42.1579 li
102.281 42.2703 li
102.424 42.4033 li
102.449 42.4265 li
102.582 42.4749 li
102.714 42.5353 li
102.749 42.5363 li
102.954 42.5415 li
103.092 42.5356 li
103.283 42.4628 li
103.406 42.4063 li
103.537 42.2859 li
103.656 42.1577 li
103.68 42.131 li
103.801 41.9351 115.942 22.4991 136.948 20.0151 cv
152.298 18.1994 168.506 25.7075 185.127 42.3281 cv
185.172 42.358 li
185.366 42.4871 li
185.449 42.5299 li
185.548 42.5669 185.652 42.5909 185.76 42.5909 cv
186.013 42.5537 li
186.051 42.5339 li
186.21 42.4497 li
186.357 42.3521 li
186.393 42.3281 li
186.459 42.2282 li
186.562 42.0742 li
186.613 41.9114 li
186.645 41.7464 li
186.629 41.5592 li
186.619 41.442 li
cp
1 .847059 .752941 rgb
f
186.358 41.0289 mo
185.991 40.6988 185.425 40.7294 185.094 41.0971 cv
169.941 57.9704 154.899 66.1223 140.422 65.3433 cv
131.236 64.8458 117.505 60.3858 104.256 41.9639 cv
103.923 41.5018 103.697 41.1936 103.586 41.0686 cv
103.258 40.6992 102.693 40.6656 102.322 40.9939 cv
102.109 41.1831 102.022 41.4503 102.037 41.7142 cv
101.922 41.9071 101.876 42.1425 101.932 42.3789 cv
101.988 42.6166 107.842 66.2116 133.305 70.9306 cv
136.339 71.4928 139.402 71.769 142.455 71.769 cv
153.328 71.769 164.074 68.2611 172.931 61.658 cv
180.66 55.8955 185.873 48.4534 186.536 42.2359 cv
186.526 42.1246 li
186.725 41.7674 186.676 41.3139 186.358 41.0289 cv
cp
f
148.715 24.8994 mo
148.257 24.7126 147.735 24.9323 147.548 25.3902 cv
143.729 34.7531 li
143.542 35.2109 143.762 35.7337 144.22 35.9204 cv
144.678 36.1072 145.2 35.8874 145.387 35.4296 cv
149.206 26.0667 li
149.393 25.6086 149.173 25.0861 148.715 24.8994 cv
.0901961 .537255 .835294 rgb
f
134.142 38.9404 mo
124.779 35.1213 li
124.321 34.9346 123.798 35.1544 123.612 35.6122 cv
123.425 36.0701 123.645 36.5927 124.103 36.7794 cv
133.465 40.5985 li
133.923 40.7852 134.446 40.5654 134.633 40.1076 cv
134.819 39.6497 134.6 39.1272 134.142 38.9404 cv
cp
f
133.569 45.2898 mo
124.247 49.21 li
123.791 49.4017 123.577 49.9264 123.769 50.3823 cv
123.865 50.6102 124.044 50.7777 124.256 50.8643 cv
124.468 50.9508 124.713 50.9563 124.941 50.8605 cv
134.263 46.9402 li
134.719 46.7484 134.933 46.2239 134.741 45.768 cv
134.549 45.312 134.024 45.098 133.569 45.2898 cv
cp
f
138.82 49.6942 mo
138.362 49.5075 137.839 49.7272 137.653 50.185 cv
133.833 59.548 li
133.647 60.0059 133.867 60.5285 134.324 60.7152 cv
134.782 60.9019 135.305 60.6821 135.492 60.2243 cv
139.311 50.8613 li
139.497 50.4036 139.278 49.8809 138.82 49.6942 cv
cp
f
145.653 50.0644 mo
145.461 49.6085 144.936 49.3945 144.48 49.5863 cv
144.024 49.778 143.811 50.3026 144.002 50.7586 cv
147.923 60.08 li
148.018 60.3081 148.198 60.4755 148.41 60.562 cv
148.622 60.6486 148.867 60.6541 149.095 60.5582 cv
149.551 60.3665 149.765 59.8418 149.573 59.3859 cv
145.653 50.0644 li
cp
f
158.937 48.8355 mo
149.574 45.0165 li
149.116 44.8297 148.593 45.0495 148.407 45.5073 cv
148.22 45.9651 148.44 46.4878 148.898 46.6746 cv
158.261 50.4937 li
158.718 50.6804 159.241 50.4606 159.428 50.0028 cv
159.615 49.545 159.395 49.0223 158.937 48.8355 cv
f
135.303 25.4566 mo
135.112 25.0006 134.587 24.7866 134.131 24.9785 cv
133.675 25.1701 133.461 25.6947 133.653 26.1507 cv
137.573 35.4718 li
137.669 35.6997 137.848 35.8673 138.06 35.9537 cv
138.272 36.0402 138.518 36.0457 138.745 35.9499 cv
139.201 35.7582 139.415 35.2337 139.224 34.7775 cv
135.303 25.4566 li
cp
f
158.098 34.7546 mo
148.777 38.6744 li
148.321 38.8661 148.107 39.3907 148.299 39.8466 cv
148.395 40.0746 148.574 40.2422 148.786 40.3287 cv
148.998 40.4151 149.243 40.4206 149.471 40.3249 cv
158.792 36.405 li
159.248 36.2132 159.462 35.6886 159.271 35.2327 cv
159.079 34.7768 158.554 34.5627 158.098 34.7546 cv
f
141.419 23.5081 mo
140.924 23.5081 140.523 23.9089 140.523 24.4035 cv
140.523 34.5153 li
140.523 35.0098 140.924 35.4108 141.419 35.4108 cv
141.913 35.4108 142.314 35.0098 142.314 34.5153 cv
142.314 24.4035 li
142.314 23.9089 141.913 23.5081 141.419 23.5081 cv
cp
f
133.228 42.0134 mo
123.116 42.0134 li
122.621 42.0134 122.221 42.4143 122.221 42.9087 cv
122.221 43.4031 122.621 43.804 123.116 43.804 cv
133.228 43.804 li
133.722 43.804 134.123 43.4031 134.123 42.9087 cv
134.123 42.4143 133.722 42.0134 133.228 42.0134 cv
cp
f
135.095 48.109 mo
127.945 55.2594 li
127.595 55.6091 127.595 56.1758 127.945 56.5255 cv
128.119 56.7003 128.349 56.7877 128.578 56.7877 cv
128.807 56.7877 129.036 56.7003 129.211 56.5255 cv
136.361 49.375 li
136.711 49.0252 136.711 48.4588 136.361 48.109 cv
136.011 47.7592 135.445 47.7592 135.095 48.109 cv
cp
f
141.621 50.2039 mo
141.126 50.2039 140.725 50.6048 140.725 51.0992 cv
140.725 61.2111 li
140.725 61.7056 141.126 62.1065 141.621 62.1065 cv
142.115 62.1065 142.516 61.7056 142.516 61.2111 cv
142.516 51.0992 li
142.516 50.6048 142.115 50.2039 141.621 50.2039 cv
cp
f
148.087 47.966 mo
147.738 47.6162 147.171 47.6162 146.821 47.966 cv
146.472 48.3157 146.472 48.8823 146.821 49.2321 cv
153.972 56.3825 li
154.147 56.5574 154.376 56.6448 154.605 56.6448 cv
154.834 56.6448 155.063 56.5574 155.238 56.3825 cv
155.588 56.0328 155.588 55.4661 155.238 55.1165 cv
148.087 47.966 li
cp
f
159.924 41.811 mo
149.812 41.811 li
149.317 41.811 148.916 42.2119 148.916 42.7064 cv
148.916 43.2008 149.317 43.6016 149.812 43.6016 cv
159.924 43.6016 li
160.418 43.6016 160.819 43.2008 160.819 42.7064 cv
160.819 42.2119 160.418 41.811 159.924 41.811 cv
f
129.211 29.0896 mo
128.861 28.7398 128.294 28.7398 127.945 29.0896 cv
127.595 29.4392 127.595 30.0059 127.945 30.3556 cv
135.095 37.5056 li
135.27 37.6804 135.499 37.768 135.728 37.768 cv
135.957 37.768 136.186 37.6804 136.361 37.5056 cv
136.711 37.1559 136.711 36.5894 136.361 36.2395 cv
129.211 29.0896 li
cp
f
153.829 29.0896 mo
146.679 36.2396 li
146.329 36.5894 146.329 37.1559 146.679 37.5056 cv
146.853 37.6804 147.082 37.7679 147.312 37.7679 cv
147.54 37.7679 147.77 37.6804 147.945 37.5056 cv
155.095 30.3556 li
155.445 30.0058 155.445 29.4393 155.095 29.0896 cv
154.745 28.7398 154.179 28.7398 153.829 29.0896 cv
f
141.419 33.62 mo
136.52 33.62 132.535 37.6052 132.535 42.5038 cv
132.535 47.4024 136.52 51.3878 141.419 51.3878 cv
146.317 51.3878 150.303 47.4024 150.303 42.5038 cv
150.303 37.6052 146.317 33.62 141.419 33.62 cv
.192157 .192157 .192157 rgb
f
160.814 43.2601 mo
160.817 43.1095 160.819 42.9586 160.819 42.8073 cv
160.819 42.7793 160.819 42.7523 160.819 42.7244 cv
160.819 42.7184 160.819 42.7124 160.819 42.7064 cv
160.819 42.6971 160.819 42.6879 160.819 42.6787 cv
160.801 40.041 160.253 37.5282 159.274 35.2406 cv
159.273 35.2379 159.272 35.2353 159.271 35.2327 cv
159.268 35.2263 159.265 35.2199 159.262 35.2136 cv
158.289 32.9491 156.894 30.9054 155.178 29.1845 cv
155.153 29.1515 155.125 29.1198 155.095 29.0896 cv
155.063 29.0571 155.028 29.0277 154.992 29.0012 cv
153.417 27.4635 151.581 26.1928 149.556 25.2619 cv
154.356 27.0626 161.302 33.7992 160.814 43.2599 cv
160.814 43.26 160.814 43.26 160.814 43.2601 cv
.956863 .960784 .972549 rgb
f
153.917 45.7733 mo
152.513 45.7733 151.171 45.5031 149.942 45.012 cv
150.077 44.556 150.175 44.0847 150.235 43.6016 cv
159.924 43.6016 li
160.412 43.6016 160.809 43.2105 160.819 42.7244 cv
160.819 42.7523 160.819 42.7793 160.819 42.8073 cv
160.819 42.9586 160.817 43.1095 160.814 43.2601 cv
158.95 44.8284 156.544 45.7733 153.917 45.7733 cv
160.819 42.6787 mo
160.804 42.197 160.409 41.811 159.924 41.811 cv
150.276 41.811 li
150.231 41.2274 150.129 40.6594 149.976 40.1126 cv
158.792 36.405 li
159.246 36.2143 159.46 35.6946 159.274 35.2406 cv
160.253 37.5282 160.801 40.041 160.819 42.6787 cv
149.321 38.4458 mo
149.063 37.9462 148.759 37.474 148.415 37.0349 cv
155.095 30.3556 li
155.415 30.036 155.442 29.5352 155.178 29.1845 cv
156.894 30.9054 158.289 32.9491 159.262 35.2136 cv
159.114 34.8826 158.788 34.6842 158.445 34.6842 cv
158.329 34.6842 158.212 34.7068 158.098 34.7546 cv
149.321 38.4458 li
147.176 35.7426 mo
146.715 35.3499 146.215 35.0037 145.68 34.7104 cv
149.206 26.0667 li
149.294 25.8512 149.292 25.6214 149.217 25.4191 cv
149.329 25.3646 149.441 25.312 149.555 25.2614 cv
149.556 25.2616 149.556 25.2617 149.556 25.2619 cv
151.581 26.1928 153.417 27.4635 154.992 29.0012 cv
154.835 28.8852 154.649 28.8273 154.462 28.8273 cv
154.233 28.8273 154.004 28.9147 153.829 29.0896 cv
147.176 35.7426 li
144.031 34.0119 mo
143.782 33.9349 143.528 33.8689 143.27 33.8139 cv
143.586 31.0746 144.935 28.6493 146.917 26.9382 cv
144.031 34.0119 li
.454902 .721569 .901961 rgb
f
145.68 34.7104 mo
145.16 34.4249 144.608 34.1896 144.031 34.0119 cv
146.917 26.9382 li
147.611 26.3383 148.384 25.8263 149.217 25.4191 cv
149.292 25.6214 149.294 25.8512 149.206 26.0667 cv
145.68 34.7104 li
.364706 .678431 .886274 rgb
f
149.976 40.1126 mo
149.813 39.5309 149.592 38.973 149.321 38.4458 cv
158.098 34.7546 li
158.212 34.7068 158.329 34.6842 158.445 34.6842 cv
158.788 34.6842 159.114 34.8826 159.262 35.2136 cv
159.265 35.2199 159.268 35.2263 159.271 35.2327 cv
159.272 35.2353 159.273 35.2379 159.274 35.2406 cv
159.46 35.6946 159.246 36.2143 158.792 36.405 cv
149.976 40.1126 li
f
159.924 43.6016 mo
150.235 43.6016 li
150.28 43.2419 150.303 42.8755 150.303 42.5038 cv
150.303 42.2706 150.294 42.0397 150.276 41.811 cv
159.924 41.811 li
160.409 41.811 160.804 42.197 160.819 42.6787 cv
160.819 42.6879 160.819 42.6971 160.819 42.7064 cv
160.819 42.7124 160.819 42.7184 160.819 42.7244 cv
160.809 43.2105 160.412 43.6016 159.924 43.6016 cv
f
148.415 37.0349 mo
148.046 36.5639 147.631 36.1306 147.176 35.7426 cv
153.829 29.0896 li
154.004 28.9147 154.233 28.8273 154.462 28.8273 cv
154.649 28.8273 154.835 28.8852 154.992 29.0012 cv
155.028 29.0277 155.063 29.0571 155.095 29.0896 cv
155.125 29.1198 155.153 29.1515 155.178 29.1845 cv
155.442 29.5352 155.415 30.036 155.095 30.3556 cv
148.415 37.0349 li
f
149.942 45.012 mo
145.991 43.4331 143.199 39.57 143.199 35.0548 cv
143.199 34.6351 143.223 34.2211 143.27 33.8139 cv
143.528 33.8689 143.782 33.9349 144.031 34.0119 cv
144.608 34.1896 145.16 34.4249 145.68 34.7104 cv
146.215 35.0037 146.715 35.3499 147.176 35.7426 cv
147.631 36.1306 148.046 36.5639 148.415 37.0349 cv
148.759 37.474 149.063 37.9462 149.321 38.4458 cv
149.592 38.973 149.813 39.5309 149.976 40.1126 cv
150.129 40.6594 150.231 41.2274 150.276 41.811 cv
150.294 42.0397 150.303 42.2706 150.303 42.5038 cv
150.303 42.8755 150.28 43.2419 150.235 43.6016 cv
150.175 44.0847 150.077 44.556 149.942 45.012 cv
.435294 .435294 .435294 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (L) ()
%%Title: (1.eps)
%%CreationDate: 8/10/2016 8:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBOWPpZ93JH!HE!=[&Uj-kpRKQk'oeQZ#pch[k#4k#&75[[NtS'r'#:fMeT^OFN#S9#l!h^V5D-1>;eaV;_:;]1^[EB/$A
%:]09$2m9rDq;q47J%9jtJ,K3YlKMqAf2M,)oWun.rT#=jq9RCenEcX&LT^K0I'R"RQF]1bY<lq,AZe@\)$Oqc4oP)TB.r0?rq3=i
%cbB5;r9D8%fAHN(FT1$YQ`&_'q2>15am$Q)Hh$+G?V`U6SilsQ.<GHgo#:S!(XMMV^&I<=Ro@#S85*Bpn3;:FV5+1j9R?Tq='l9u
%O3c[qOg[j;Gl/q=puTcrgMbr]qMGdjnZ(-(C--;'A*DA)G5CS"f>%:5ms]V-MVE;8rtNHO(]!I,e_2Jo9A:56r/a:uH=!33rk,mU
%rA)#ul_PtScW)MRFqcTX.m9If49$MGMgk7*.K/.RZ(:mg?Yo^:4B,P-#sX[.e*42'a:l>d7?A;Br$%@d>F.gD:?M:e9c><BoUJ6;
%#uiQh7[>h#9s[O=D(>]QTE=p-q)gblV<%.ub2^1[Vb8'tdY:`0W(M=eOnjTf&g?F@Unni"_%0^0IR#2-dQ<?YJKc?*7C:V9K7?_T
%jP*c`niJ$7(:Q'BFSQ?EDS$enJ+,fXgZU157AYse6Re5npC-;aN2G-f_PeH@9dV<HjM<H<Og`#9bQamd':U#hCMYP"'&F8."84KI
%g]$[I.9"TtJeBBt"buYKB1MJ"jDF*@[S'eZ;;Cs>D4`%nIJ-I/[hq;q\bp_'q=BJnS)!0Np\))(s1pJB^T+kUrqPjG-a0/TH2d**
%/.u*rEd]:L4P`3uo94*"][=-/g7ONMhu*,BYPm;/TR=XTdWmA`X>,0Zn$olV(@^5\fYa?NF$-9tf(]+ApU>B;e-G8^Othl8Ka5Tj
%MEYMp_&<7Em&R<s4F-OWS4U`p8siFK7K-G.r*eP9Hr0U&N4,spP2]K&ZIGleC:q\E`U*DkKg#=BkKj/(o@&2<p>jD0YDlId^OGdp
%kPqH!U`u"'f#\Y=VZ#onhnF@/qB'$-Ij=nn8K0]7^NoM6ZPW2GHQDi6Sre.JT?I8h'7Y?!qCg1O#S2CWi`ci4cVJu\hu39'YC?H2
%DpQ4"K>$>i?U&o5VcWn`Xo2DhOc;E0FB+%&SV$K)-ukc3%&jXV?6oFtKX)#df8ck-OhZM&_=**:rpKIN^H@#AEuF:U9kdu4o(DT-
%G=LBIWU'TZ.9Crn48c:i=MFg[RqFDQ'12WVr0rD:Dca^L,@5clo#pX*Y:pmPi:c<$1dMuJMcYD5hsNH$SQ,.HfCgL9I.>rm;W.@D
%<;bu.^X_6707Nr\>P[A6?bcI2lX.@'o;bYOq<[t$=9&3boO"4RIIla3N:3+2hu30HPae;:55RI]pj&mok:+U3)Y@t$PZFg2jnC(\
%pF#o.DYB!m(X0BB68/1/CJsnShpmqR?iTbF)CKt,qUnGi.qNuVs8Eo9^.W`Ss0BW3'muU]W9lm_g:"Jm"FNbKO-"jFn"_.W><Zb,
%G;'!`fo&p=j8Ju;l,h+%:]Kh(l`]3B/\cf*jQ2TW-iW*12W`gf@Hls@CiG]VC@.gLJK#<_i69UFGOjm'5Q<ZVbnHKgn'l/V'48qM
%Yn3OqTCBN)/AHM/=$:j#0-VW(Hhlb^5J2V8dt6p'r*0*pfa%ARGA5_Ps7Xu-^O#GJS$1JI?u9'DSk[<'I':p5cSjOZ<QU;,.]6jK
%"Do(#'`9/Fp*Ia_UHX6ibXO+P1hJZ4*W,TUZe$j[pJO*Los`iVbNVg+?G6-mSK62)!SA>L!PK:/.kq.L[Wbs98BB)L%Jp+F(X.Ya
%eCFlb]IhhGN7pNtpp'MCqX]me0:r4*oolTZjn[@IpB0ElDk6'gAI$K2G3;H5q=/ZXgfrM0:(6G;=3BW+#+si^kMgp=0?0$H?gJ1K
%428'RZ+[n4F,JZZ?ptT4q>[FK)XBE>IJI./Qa^dbhtbJ<s8(g$dsjCVqY<@jIe*@2ZgZRl0WG*Mr2#5.Va#Y-r67#4bJLMgZ>]0^
%-+\HaAHpj>'ID'i*u3Zd(%9Bq?\is;MN:"!flmgi:_I-<O8SSAP:rPdkkao"B>8lgf9>*`m*c(/l*pTq9$uncb>1@uVb]MhC&:,C
%qT8Etp%eIHqYGMCpZm!.YOcnJ%bKIF)n4iiY/_ArLseBEf_U$2laQhi?h_rPYJ'S`;\+:lp[,,S5Q0YmA"E;,hUQ\\WRmm7MDeXZ
%NA]4fgm?c9/iVn'N7(?NV;rh!XDI\rhrWU?c8YP[O5+g"24'hS@\(rs^m\IB]sP8rY1lZ4[p+.DIG^h(;;.//4]U4dV0t<$/1nR$
%pL>..g7CbT7D>OV/mi]`DT6M[O'ZH_rT&m+fA=?QiH@<?TC:(7kO\N3I!m&KWTW'^oj#f<SBgZeroWY2p?$aDF)uacDYd)>WAioc
%ho)"'ZX)Hqhg/4<=Dm22?!])9V)/=mE[t.!:cb[IddTspi`88+>!B"/#F:Z[CndlZqdYE(!#-<,-GqQK=DhYoDTc=rYF>r&X>8+q
%lcCgj)9a$;e6<gEqmK(%YmCf'R]Epc8#tt.JbP:.i3hBZGPAc>k>n`AYFE.>\YOH;qON$2?+hc$nm/hbEeV-mp0Oo6>NsAdo<%ZZ
%mIfkVmC2I`g2U>7o52'u\%t:@5(>M`me.otM__4J;Ah>%B]W'fF#\(XbSqKp$t[.E2c;:6o8`,GX0'KiX4Kd@>J/gQK+`5VEn)T:
%,&6k.f2:Zs4NhO/idKNYO=Q2@Sn0:NYaVGOY*6LfRW+badXBtma>(kM.]Z*$<Rt*8F`f;%lR_Ag0&N!iem4NjQi2j<T)DC_Y0Gh2
%^MSJXq=),[NHh).p#;MQhWb1pD\"_HYG;fakX,V[fJ(gEFRpj8-C;sJ9j#K&V+G[e"5icA\o[kHhfo+7IrqE))ViLC^;%4n^)qCg
%HXV-md]<+24t5=.%t;F62kHlF.eQ8V[;ZeIcW+THr!%Vb?HK@k.m.jc_k2^t,\o`DW6G#-mB+T\q=M9n<_nr\A?Mj\X/en*Y%>kK
%\H;6fmU]Z.=ec9j/F=5X.bBd]\rg;ZUQYNOq$g%fZHIJ&):]\:c8*PO1=gYI#oXjq#%3=$cA3Bl5D1)2dtR*1M^Y+5D3-*d$h<Je
%A7CKQ7H9o[ni;97P,+_-baQQG?1V?7^?^6^-eg_oeZZBUm_F-[/]o$4Y/JLdS+/uaL<TS:'qdo=*?hHbf.F24>rTF!Ab?I76_/"l
%b,Qqi6<9Jt,l*P;@D)p#P#Zaml\6og[N'!KQ^1VALFfQcd`P9$j.3RRbhfmrn*'=*b"BQ^oX`*.%]fJBB"OnaD!0JTVCc7mX;,Ed
%2;bNSc?QD^anjlif!ha>I2-64$dY/:_.r,oj7`HKX)*6/19EHs:nhpS/Gui;P7HQN2o8^9Ku;cjU^GPt1*:$GXho_&E8kZlaCjJU
%G;o9ES06XVKP)+[geIS<OH''*2X"B(lM!%SK.t(dHU8=)hh:T^3Ob#a/AC4<DnY`3OrF),ns6>jokNgS]806Z#^LC@LiB-7KGno5
%oD<]2ePS#MLo2H3fJ\tJOn=PB.!kKE^9Mjc,a9)gH-95^UqfGAMZ(>"]us&h5J6XkMYilS'rsttSuLO<-FcY,rW>g%H6kA\*a\dD
%V>\(p#)O?HZ=6C31q4VXW0^59VQ6;(30eXj60[n4&$:J$\CruSBf3J/D*as]<b60B%:'28\J1*+>ELP]%51nRnDRA\$Y&M?0Whi=
%esaM9#MdP"V>V4Z'ir6Cndd1/pYO]nHBi8.n"VMC\*H]X.qq^uL$:hh]B+Z0O6s^NYQGt^I(YL.](WgeEZV4MD*7%bY90mdaTJBZ
%\+@WN\n6qgSG2UA+8XN7l-%d&]PHpLpYU+ApV>K=LHi).l_"-dG]E,#')1=>='@6o(EWU9?$Wu(WljSHX6:ieQ?h$BHAn_&HZ8ZN
%Or?V*b6@b8`AK(@XOm:-](J^2e=Z/h(Zh(H>.RE5f)I-Mm?bm\PWo[[\[WQS-bm6!5$)@ZHBm0d_Q0*UeZ!g'P9V5J6H4\cGu"Gb
%;?KQp`dq;1oWTZ'(pl!\@5jp9M'b]c!lKT31]LK*mZ!,$[4(IC\r6,3i]NHLRFP9p<J@WN`-3^$:uh"<NSdEhca9XdVK,D3$>_3$
%[&LQ8-,HT*nfIc=g/T9k610Bd#J&/,^KpOhkmp+V%(OH/OT&5QU\%&lQH4Qf"=Wiu.KR*h-rM0UdL.M.4cfg855g/_i$o8'.2-mi
%9$ig"Y&p?hWNNUD9;4(r:8`U0Vq)Q)!:SUoe=PCDTE_g&CXo4])Z_h"[pS<B\8KkjC:q*eY2=Pb[p4?pUrNA94`](CYO]c"oo^6b
%][A$+HuN@Dno2(?([O7rkuk3F*I@PEHu\!;,oZE8fo(mB\@DCSeIG[:0<%h9:@"/uY&q1J?Huj%pNHAZHaECk%BjPR_p"=8X.ds4
%=_Oa5q\I[YR=MM_M+Vtfe)_T7pe1de>.n=^KGbHS0/[<QZE-UJ][<['7pD?aT;C.Q'2oi,XO+21A_NlPq?Es[pG@?9.XaYt./n<l
%VlOcp9QOn.(:!OZi@]>]<hIbR1QHXb>-$Ht%+oFK0UJAF0Eoef1n(Gt1kBYaFD>u9%#3KE#Itte+Y;DF#MdIMa$JE2h2V>4Xke!N
%]7mjZ@e241?@ICNbQf^(]6552rVT,BFP2N)eC#FB#9MFD<Cag2Cb1aq/nH*b9X>Y;I?M$1g'V79<1Dr+CkU7qG!l-EVp,+0OSb2^
%m^AS3mLGRJ3XnY7f03YJ=3Gnm$r49TSIa>3?M<0S1LD;5'4F=6)6G$m;#7;;=%%foK\b29.S;,k^LFe^Z=C!deISb'FLuCs%B=>3
%0IS.]H^'@peb#4?LP<3&<K!b[YI<.?6FGkjq9Y]T<mtk\$k._]Qsu"t$o)OFf%<>_)=Ju7B7rOMl8BQ&\mpYI?sQ!K()XsDPX,&h
%l82F4okl@/e6Zgsqp)V.<qWfPmoQPND>5=RWLR%fPW,I&s(9spQ*oM[`+LDA[CWEg-\%.7^OuK`R2'hj%X5:5^7-]RC7eikf0$f[
%ogQB'5h`eo+m9Ll?N@bMMnN8A0[g-qeg4%')*KP.i@pIpTY&CD?aJC&'';r0[Tu;qO>?P@pN)oBMtMD0bng%3lWs<]S);tBg:-CF
%#?C<Bk4`.NMMEO:h*g+dM/b7%A3-,-IPUNFeDEqr]f*lJE\O\@r3Q"mh>J\l]S]7*Q:`@Y1o0P`Y4;DHn;b3SG14[_W3HkJ=kl;e
%F<.@@W7,`ch.[")-Jb%=Y2<'WmaH<XNm#CYH$cE%8PsMG^7!\a<#(Z;rQu4MgO3:rCIckOSaD?"aYp,bk4rnlA9A7Q%hg@gd9d@^
%k.3@b,+-:4JZF1-\sqNH)V.8oeF&Aq/PCLiKA+G,M7L+FP"aK%[^EY\O)&s>e!H`=A>;%S56>sueKU\QWX%M&FN6YDS:rU^@ta>%
%qP*U.V/H)5rIR4;J*3q`i-o#Z_FGgn*lrp_%:72/PQk^7>TUPG4ra)0m8O&Sf$!eo^3P/$H$T/`p2o9$\m8KYI3DqATG(>Q,?=BV
%>VntFbTdUd4kR[s#T,cKK"D5-grbT.BP](R10dTgK,PT,Y^MlRBMs'dAE&2*,:4i2mijt!rd5mU+%?.644Shf\rIdZ\r'"WlnKuB
%0e2TWKDu>q'Ne/dEh[`@$]g]7FnOQT&hB%p]OME=nBd1Hl:j'm&F;\!5pkL(do&R!92*a9RCQX9>+)kn8$DNW!5+@KU5phhk7@2q
%=Q0!si?5Vk$D%2_hOD4NqmrtO6`sBN7ApAor?1jbAKC7(]$!VT9]HhMVPANhs6d1M%rbaMX89VYp]8A4c0sV(rEoltp:cF45J2C>
%jJup#T)R_!&XB.^W16iuS7K6R\VFRO?,AG_o)6HZ<nT&u)(a*1O$2,_hrN`B%tdO;H\G=b.ec)EGl2>0Ppid3n6LDD^[5^u3!tJ&
%Mh`c%\nJS\L(k$i82aWYWCOX%"T>J^X9.TihBHklD=)],n@!O'nqQ0dG)bu7=%4+pK.)EU'f4W_pI?Rh#LEGDp]>+nAJX97,$:]%
%\')fN90c0.757qiS%4<^P96nS/2I,UC%iKKP:p]Ul<E@nYOSo8HcqGW?.NYoqs+!uO2QmW*fi0R9`5nhQVh3EnNZ#/3Rmkj)B[OS
%o+!XlCOLt@.B>We;gX/)MDdX8rOO=+lE5KaI2@Dn)RJ,#AF>=3[ER_S?C1%-9+'fkJN](mqM256pup^nQb.mL<KW0(9)gC@Y:dCL
%:eR@$dF>;("Dk&,+IpuQFjj@RC1Md_ZYkZ5pJ?I?$:QF5KbASc0mCtZHF(1M+fEe-*@\JHY$W]MU*@pA2W@J/6oU%2:Yd9mreGr#
%W1S1C)/dqUl>())PsigFV2sZbb;&r8-LK[<B`j39pN2e+j3pdPrD%j_ipfi*==%B4C\g1XB`E=)pNXjkp$S-[8+qL;LE\2V&bBVg
%pf5o<0XK^[cM[DiWfjn,g1WB?+XDlM<_W:dW'.kPeec#8M''CqqW#c%?g^JrCjqF;AX$_+.;"pic3LmrOikn\]a(II3S4GQ*sSRF
%8g[Q^8$$af<gUODA%&glQ1C6lcd6!G7?kL2A\C.dZ!fpCa&$7D/q2PDnGNcQImc=+MhJU`L^ss_B^+n@]&+Q53a7HUc._Dj/iU-:
%.2c?'9!n;<COIb0]cS_4I]rD<@I*Yb979]BrIN/)buD9_F`$O"hLi@<>.M-=HLW[?/O-UjD>i1;I_h_ChODQ/?F9@!XkpPC@NMn+
%77KM_^YWG_Q,h+5A#h9;/M2If,p.$qh^JRcVb<N',,ik_3,X.@EK?kqAR7IRL`/&fd8h;uZp1X`+3G>IUJ*CJas%(gh6MVBr+tJ.
%FZS`h+%s%N6GR>&]/66bo#o7AC'Tb3N2&B$oD_>Xru,dH(='G%N9:)T`M>W<s*knehWXoPM];e<q>(=Wjt7F]V*DYK@r<p2a4%b?
%QOp#W,\[cHW_3\dLC;N,.a)^a!A2,OHVi$0]OPA2mSl?j+=Tgt->cV5VW"#V_tJ2+8pX2+Id`H2/jh09d^$?!3ArD=h5Y,o7ZRg!
%mof.8Y.VeTjRtktU@1_&=m\UkED8Z^7ZM2'a&Ta?]T6i.k/fH*2`#`;%^>"LQ:H!6&(uo^`6qFG=].mM\TCV#*G3$p'UY9kj(U3=
%#d]7QSuF8KinlO@7aki)bXr;8dK%D3OK)'>s-UWc2`1N+3RK^aO("7%caF][9>O-Y&?)^F5c*a^PlY3k\TJ+)l#f-BrfJ*N_JI65
%H%_k["20=eDbo?'?4t7!Zaq`^)7!rM=n3E-J",5>9WD@[Msu8l*HT4&C6)N%a#r"&p+R:`1e,]^l_u\s0`puf(AU)H;j;\WGsJLW
%,ah:6X7b/Ao4agoO3OX^kLJJnZ+7hM43fFGANm`C1;e3omB]LLREi0^Y$E\:cE9r-\NXA*(X\E72(*8Og5F/R4s(8>K=3f')s`H-
%D!-;GIK.0([Y207h7c"7(O_\hm5*c!k(M%fk:Y%eB'T5$?7:S[$)#]hd*3AQ1HE]@1W#Y&qu#*!Yh.QJ9?qToEPKeI[Q-PncB,?U
%PC9Sb1IgNF5&ZI&kLsRn#=NIB_k6s5CO@[YE(peS%+d7pa!erO#hJQC/LDHZS'RJH3gVRbFVg8SZiI5H\Vlj`:3LQY?<G"Gc,go<
%l%4WT#$*>0Zdb.\VO&;ep=9H^3:CB)-(-c44J1k[Nc[8l)*rNG&Pu=A:>ql\O^Sr@p$gFfQYpA9Q\Ej'gRT:&Vtp$V1fPKc.IuUC
%.k"-0Sn1[p=CGnbc7Jqm%aOJ1NB\h<"G4]WDi$dTJ1q]BMT@@GSri(.N@n[Le^<P7UPkGZU5sBTj.,m(-U,h4n!asqV7r4SWcF@G
%AT3$68Ge%.]S2g!CA*HYs.0DOihUo+"5S=&k+B+7.(!p/hbF*)s)@g>7Tt8@o'^0u^\ePjp@g-.;5O;kdXP6\5H=>t<Vhb+rC<.P
%UItP`V>hsDIoP;hcA@U'io?R(W7(^:<-hK^WLuU)O04M$SmIlA,h(o5nR6-&5"<N$-liS<PU=&j*c'>=K);"t^;nAVKWJEV,9j-H
%Ml,12OL>IAjQZ.@261]&qL8`:ap+(Zs-K^].NSL`J\_=7>UWJUMAq-mh(R]n*h.4WK_e?J^_rlZ#jiR"H&_7*VPnT\O`/l"`6mCo
%2d4]#c:^3i[+eQ/Afc8'abRsPhi.p)k[hg6?83df#a14glE][!`!<epW#Wc41Keij8M2gq/hM<0CM:tQQZFtCn]$0+;eKWIVKD%s
%2*p9YaF3M)C<_c@Z_H!W"'U[oeI\j;=>^boAg66I#PWZ`hJH-E2t+Vqhi2],qT6ml+3F)_861d_]f%j-9CT7oHhJ!Wa^Rh%;e@q)
%kI/0#JK"[!!sNJlNBjt()f>Yure:03on2cZ2&NALOknpnO;\%gJ$_GCUcZ%B1i!$GE+,N8Jpe.Zm*n\c%?oa4JG^IqqYbs`0)t9(
%gq&s;$>0,u<j8`4?a"3+E@g4.3G3N'ZQ_)#-Qg8Qf2DYhHc]i_)liCph1`1>ju.eRE?5*l2=TB.:BLkXUB*Q^d.77/h^Ej@4Fk3$
%P^$9+rrT;!Lb<d-TPk;/]f#l!mZ?<^[EX>PiuXa>b]!`^?fMdr*g&GR_A1NQ:W&6_"BVAV@qNQd(mkVR[@79U!hK7Lk*G`B++4PK
%o?mn"5rp*`=U/ZD,t4&uM9E<ID%-s"M82J*C5jBi*nP5o&$BCH<[Ql7?V(dkl=\>'Z(Qge!AWZgg@_K(TZ9EAja3?&AFCZS#91./
%*7hLUi#$=5TnZG?.GL$->Ddh$+nb^;f/6L"<SFj*;%]]_LKTh^;.<cFOWH-\OPdb$HOIJGVR!/XWO@%L#8GI_bkOV,6216t>!5kF
%LGMor)Oh5OW$'3",*#*ogf\kk."5'QY)A.;<H,1M!rf.;:[8=^$Y8m,^%fqmFRjfMko]cqmiB(84P5Cd@d;@!HDD(U\\<LcDbj,8
%IJ`B#2m8jD^3k,#lIDBes7T(Fq;;0E<NJ+XeN%oWs8:nanaEr5j2ZZKj59M.^W=b$;lG22@]/+RronoKV_:8GWB[o0p(d1S2uNGd
%rt0a1D)L`Gg(,hoiV<7bV>ech3b8\0>%\E'`+>*"V6I&HG<_(QlJk,.le\SD%PM0-FD0n/!IqQEZkRje=GT'Do1[mU`%6/:6Y2Sg
%Tk$7WE;6"?*e%GMQY+&nIhA$fe+)V/BUM<\r'ap50?9^:U2:[Jo+uOp]H)K.MiLrIcX6>+nT"L&3#8?IL7*-77!Z`O6qp-5^#(ip
%LVXh6lealR`Z18K2X*G4^OC8$r$`,3IId5QVk8V8g!>7,F;$k<e'igEiu;.BIlVp($IdJ%hgY6R=)W?AmnZaZ!K[5`pn(UAAg@0C
%g@aVeS'_-u9dm=SFa<BNF.#`NJ"J'`fn@#NG5XGG-D\CP'>eQP>[A?['4YCCItoBKK8@Rfno;=F1Apn$"3PiT!Tb?r!,'OUO6m*Q
%hQe"u59tM7_Hc^0s7+2ABC?e0coai^D1j!*,,'-B[=1(X:Y&3M@)t`5g$Qa#g%YfXnL^W?n\G%U3t\)qK8`s,)^`pIn_Q38*q/`^
%m.qs=rdQ<-rk*)N'Wij7kus0uUU_HfdK0=n\jql`%hV-`B[!3$%\RCP0Wnjig?=UA]D\#o!b:;Xn$TlPnnd6ff/atN*ijP][Xe^^
%s*4/#eVhmhf>"WZqa(fJrSlt]dsmWkq;P2r?Te5F%m1s53$.F;J,cY%EkCZc$JITt7/&3o+);"#fm8IDWYa'6/[A"A[_8I\.S,Do
%QD&2@T7C*[4Z3&EB),[TKXsS`huP*S?V5nUX%ukNpT)Y02/)c%'CEPP<dg<OAdfhR%fohEf;gBid$_jf&5bBp;\)sXYu5qO=".r`
%cN$.OP1R+B(/$g`FL>]-P4Wl`Q#;YY%Y/7!TqL4.Ld<(,6)<TPJ2bl^Q=:f4\]@Ohg0p'T6:jlX4ggu:'_ed]@+qPB$YL9,*#`+Y
%5t>*adhMo`7[-[9p2-X4NKO@!K0<&l@q@S9:"4"38oRRYeJ=PcCbK#7\HXXQnk_s;W!F\NBf@Jh/4Bq](+Qp$KXT"2_rjX08h!qf
%Y!..XMWbWRlscaJTuug@?&#A"/>8EQDl&AuQ)Rp_7#"H]On:rY#WFp_[Nr%A#'6'':'n&(,):hSZ2t=tH?&8F?rfseHkf,7U-[;U
%,^k?&+_l$DV$%[pV`nJ[1I1)QeR4pn'EgN9"a's8htHbqgm'F:DW69PaQ=WK@$',IA^$A_C6o`rU3re,EelX1kXF>eI&SY5Fp8;.
%i<>^`@>ijL]E&VMab5L.ZV*('H;Ff1?jg$[2>HO#'d7GC&PcUW\'PKmrBc:_MFD<moQT.QqiSdu0*Smr'[aTK<BaMClYeE$Nce0n
%;X/)$O?#u[(Hr$c7=@Hf^OQrP<`P=\?j4/u3Z(Br]tQeHZ\??Nd5Kr*TgtbUAPE+Rhr13\_6Y?J<o_=@q'p70P="K#o:jgY;T%jb
%-'tYi'i_>WTl-V_4r0V]Ti$ART9Xq0."i(oi*J%XYD(\\5`+3Y/A2(ee9SgNo[j!,h`$5?M#\!"DWoIk"$<<$db:sKI%>XTQQG'<
%Hk<,M[$U8?0X2I+-"EXj=Ji>0+]N"WFmVt&@7(bZ-OC%tWYIi%aJ6u(X!'Pc#rNt]=1$FAQ+k%^"3`(V_;$C=h2Kr[[Lklm;6Ap0
%B`k`VN:&#godjSX2CZ<jHUpZ5_%>tnKGe7e#ZIg/.4iH9Umg!B#V`U.%h5'Lr,&*!07q>H#=?95aUTJ2as;L7ikE]%&RpQEOIE9'
%#,$X_=;UBOc1QsdqA=0!C#D&C;&J:rAB\SBM)^Uu;m)*B5TglPcO9T`-L<c`9U14))tKt:ce?`=2uui&O`1CTmeK'ABL!<`ORt8D
%BgU`QaqgZp&Ct<[a@@@jr0X551*0'$OT<]^lco%],.*Ah:[TZ>UgsL8I`p>\)=pb[Q>muI[6",HXMp!]2sE&5%l,62%>s@J)jlfd
%Jo;D"Amo>F8mS_mZbpe/[tCo9.gp!fkTg;@^it7bR`obJ4.&Og`J.i(%(]6UZk^FX#0,`8gc+>%d9WUB[]-JRo1L?sb`@ZinDK8B
%6^4?RS@]2*:WBCo@4I&A2"4mu?,U^*(>+;bfl#V^o#N_?]h>fP#\CXeD[fi]l&ZnlrJq\/P(?GnNboDS$hnU1E>Vmj,])+3nH@Ls
%'IZG[3<?!H!]D@S?<UDs^e,=B7XAp$h)9ouaaPJO:h'+2aPrDECn!>0i"tr%<TH=?31SsDBd-LbCWP$$3@tTH6:cB(Z6B]XCs>bR
%0Skd'hufNGEL1I\0-82r:NpYXAQ28.OTP(gU;]gK'WN^`!G]`frrX_V\+l<afM><nO17h&#S@0(r.9SRJ/aqF"Tk#m:k!9C$IOQ<
%^;sDrS&ZS&&!DF!dp/gGWJ%1P#jBS"O%JN?qdNE?*/[:D3/]'(pBTU(\;7AU$uHEM('ULiSHsROh=QJY%gq1JFjh3V<#8=gnEAt?
%Ape0h0Xk@Zd+J)eMbl`2=H!iomOBC!gfSJi`RhDOGhdi_5,"nj7Nk^-7U`@r^?Z&"TiO".ElsJ3,:$.^[>`K^ak+\pV/2BcC_G/D
%1<l]SQLoHrD?YWT&1X7V+`WpmHJPAq;,0+0?>aSbCd;i3b>Hk'!kBf(@?a[@^!])?RO($O:TqS?JM;c/S`F-f3`3En(-$uXS`t*%
%6<(h-#=2<O&Gj17XcSf0pXE'<638W?0C-tK-gE#a6D4rB4Z8HeZ0`0NdlAa;8_K,O<g#Hq;m_+REIgJ,P]g-PQ*Ukpm-S9YPGi*!
%<+V(W+XN>qi3C-^ZRd9I!50@kL88mi;']^/75Pl9PSCAl;E)l$6+6UY,o%gnD"p'%(Oi)S's%N]"E(6/.Qt,j-JcQ+M9+a'J/=,C
%LguQL%QdG?o^e$d"^MJj.&?=;#pMh1P7F]kVB<DV.rqH-k%#s+O`_0<H]hjhb.^/7PU0.`bR,`]gLP_R(S$PC+H`pgOY(\jYW5e-
%.SIVkOCaTFA;Ia)^aHAXk@4<u^tp5u=.5bY+9QA:_@!UY2$fH#5iC-#i;M)\6HB`/B"<JH,ubmo&?9\Hp'u7c<7HX8+GF#[PLF(/
%g"[,_gIofmDB#9^8j2+_i)A?t,'$^mmc\`3:pAab]=mIQ+s!Wd!;lQ:2203)J]\-7]C'&LFR2j:-@p?FgOk;*QeDOJX%u.s@`0NW
%4gO+0ct@8(;^K&n7##`>0s4=rAVsFGfa0DqlJ-q<[@8?heT7ENf``HlRu)!.D\LjCX8*=V**G1;&(h1c(2._@k#>GAW5tm0Q"MM$
%fTLVoAqV0`k70e2&dWi0e,:6N-1Y!NIRc(,\mm6XVdN>;Ap.28KIV#O.Wj0A5_-A[.Gc$>"hS]=920c#kkMYXUb`2YZ7lU35p7'4
%9Ip;]KLHkO)i%&(M&^(;0^X`e,HO:8AIs`>p+ba):Cu0$L;bPs1n$gn'h0,ENB-TQ=EdW0#HTpnE?NWl"9QPDkR-fjUDuIEQJ93+
%6&c^E&9.3.&CSX7gZ'ubVA7D&CL)U-))QA_ZnjQF,/pW;&On6aVbG*9'>UQI#1-VP$YhkghT2p<AB:.D\&c=#QuOis-2?]bX;p"o
%p<I>00$M1kPp9b`aQqUqAW*9`kM/`l.WXE%\ei=.:e+'-gXqE]18F>m3JR:&e"RdT0^1=$,-;a.U/amC8U3hI7GB"l0HrF?%+@P:
%*3eg8`MjFf--R=\VpKM$L5p\8f#l%1C"!VC-^7GKV48Q*S.<f2-jUZIVTRRCVV<>]-R>l8FT)V5G@bTOLk>_:T4&W.*)%ubP6IBB
%A/51qKLtj%P%R`7Epg*A.]"^VQ6"Bd1qX6t*!OXoHdTKul4J-Cr?8*RZ5['m<ccK3iS%h(<lg(N[o,n^roAetCp%%NhRdGBAUC4a
%.3tI-lC\fVL0W:C(dH5;Ys8THfq,J57WK0H=E^"p>G.uO!3mO/J';MV!?:5:9oI[:@UC[B+BRnOj9+U!:dfP)8kUoW5sZ-n;E"Q&
%O<YI`6db,0;Si0dUgPZk-^i/2n">eA\uJ(oN0qbl+^nmAQ5=,/[q<X/mLK)m#qt=kVQXM1R:<9eljFb)aoi0@^1\AKd[,R'5`4%:
%O=:6'%,!%fYY**a7k:AM[;D(;=Pud0'#UVV(6AS\8N4o*]Td^Mp.0.N4JuX1gD`tUHqAoXKa$,LCi<Ed'A3t.&]rs?iIFFn5Qp\2
%?n!Rn9Y"kT+[b137@flE[Pi/K1kTrbS8?;Q62:@qAW76K"rYdbVLHo(&cGU!Tem`&->DQ?8HmLF]:%=fA2$tZe7+=HJOi<=R[&J>
%rNdaq7$%cjCXtoh3MAgE)<%-jJWM&hgRF[,j\J_o)t3kc'3npKO'!a]m*OK-_Y(:El+4`D6Q7;pA?[P<U6>hZ2+hJSWmg(/)r-ZJ
%Jm9fJ.hlu:*\:#7Cb+k)=G*qjm[KAR;WEBA`\1KuUV='TNu&/T`O&;&0FP@O>p6G_Kst<<1"^)k7DT>TI+E+JaQ(.WUdG`9$R5[G
%hjnh&"ChGqJSk5g?pi1.KfB-cg<*hQj@2:aRQ\4SO#H]p-EmlG,4R?QMgIT<^818c&F.<kcet(>&WiRrHnarGXfCiC^Od1Y&":&N
%S=KbV#J`<q#AI5sJ9$4PFW#?`)K_edBNNrjG9X8T)IY''jLbRUA?bq`ZZC5W(S83DE\nWSKl<&KUD=c9_)B(NKFm&J)9+@Hg21S`
%*C[r)#^JV7P6[!N$^qDP`s73KIU.oDe_t"OF2GSe`]RWNg!DCAD?1u^RQ"U+?jZunE$p6m7[EX"V2YVFA;*jacd$PGFq-L\TLuL6
%87OtW2('#MFXJ=`l`-;eEY7FTHm!(F0V9J4'9u:+pdf;+_6ScX3B"58`_De0hiu6X?f\?6<hHMnU8f5/`U/cu+kqtME1MR,ZReZZ
%YV]uI<Aft`7>tiNB^hEuNo:;l2*k?'hnj3@Lfj/1;U#FW7H:s^?,3\Th2J0+]T&IU7(a!6;CI9^Cp'`D2&4rNMS<l;83k$R5_V$:
%?-YnY#B/k`_s_)=8l5Qh[FEF@B[IO2HkhTP/`S+^\[r=$+_djo/;.QQad&e<7-J:ABHsKUXMnQVaZ?dL3["c>@mZjAP_9,<ba*S-
%92W5<=WNU*#1A,8.)tdo0Mf4qb0&\p11=bN7#2"[,Ro"j*$e-=oIXIJ27Jj-i[,Zkds>EZK4,9_+U>!9Uf:mUd#0d2^ML*+3P1A)
%PQH%;,8*&.A9:`.!D`!T#5,YHQ6Vp0gdP%d2]j"u,#Ba`P&td4h\XMG^Ysu*Be_dWRCcuu)dWi);])W_^ta8Afh];4anD?io\EoX
%F;tQjO:A_!/k=*R^9U3e7\FU#S?S(=B""[eP8&67dRcEVWkUQ1C'S?^FCTjAZ%qgL)F$O@h[1#&Rn&_RM`mOp+WOdcKUX&R=+d>@
%I`5RGS*<!_LqG(`OXY3,1MoJVmuq+r\$":)=["NM@$1s[K0r]6ENH$i;$%cP&V=7KV6HmNX%99?*T^.0&IS,k^-HCR/pKV_W:\2o
%'!)smRlsRM((C9Q4hIRBo3!pR#R6YC19\0hWAcQJ?rft*P7Qi2?"*0"PFi)FiaBu/[NBUV^b8Zh*&js6ZYl)`+JOB)Cn!]t/ZVqV
%FYb+B?$%'NUQPY)%sB2m"Z`8s<\]OS5^6QWce%E^2$7bTL(i)E/=]c&%5)3>W6EU5&gl'+=NfDAFe_P658t&]"]"Q$'a7SO&l:U_
%i/!Of6N\@k(n<A>OIWFq0>nm+Ch=q,!mP`Y'Rb;c)Q7ch?"e1HLqnQe+52p`X(A\kdt6,D8I9=>HP;-s$8DJ+!(Wd6G\hN;LI*s^
%_eDC=J\nWc>'(6H1Pd(0Cj1L(@8a(9Ik7UV=9aPPX\$Sf/W[U2Q&&-Vlp\WulPr't-fC&`?D#:+@g*J'0q]8&g=Ig&$)_'=B4+r+
%XZqlsNWUcdT#8cAW!4CofW$X/5`f]QK\_I?Z\AU58fqD1)F[L*.Kb&:N$5D1Qr?DT#`+idM.]efRR_sK/_Eh^k%\S$#Tnla_7!oB
%c(qcLC8]W."PTW)"4<>TRXHOh;r.S@^>EW#9H39Hj),U=R0,np'\haU^mDQBH@i/#@LB^gasPBGI8`oNj=@>"ZVSZ$Bb?OIU#=It
%h$Ig1G:U0)ACFtjbQnUi",YfI=U]a0+iMNagXQ-)_H;\8@u"chV@/&$+;t5U'to<0#h:O;_[>(,^]LE'._*M\\hpIkM-Z$'`XnL$
%q*T*3p+griBOrqN$R-/T(:4=Kbp(("C#*6nA@fUjR]:\F.3lrE(=P+ifnA$BGr;SRc9r":XUbPjY*fqZY8%diI.fbq+Mtr#jVXUW
%-e#NqK?XL?2H>^ZPqL$Pk]sS,)2Hh\c0PRC"^+jEq3WR3<8]f(Eo:AWTELN0Ob`%hmEgTO<!;9qljqO$C7-"&al"4&IGt>PId#gf
%b2feb^'*a,p1)1^fFS\'Kur@_atA[ENZ"P%Z\Zob%[<9L!5D9u3h$e<`ALPCU'PWp,M=Sh^G7-NgWQJ.D92Gg+t/:BPXmoK53o;D
%6SMP-.%ONN?!qDf__!)`BY]:f(X=Oj/6go,fU4Ukc,H.0nXN>J!>6%>.%/2*QA]LOL+Pl3'+)4V>b,US@t9bb>Ct&2Pl9ooUCUBG
%gK5k,TAn3@n4D`XUp2hTec^,kK8TU>"BEuGfj_`2<(f=cVn`Y7-5<tgo7rBh7DdKi\>j3CP&R"&0Wj--Eba<mF%:FpM1!>mnj)b+
%:SI"0rr`:NLqlI3An.Rj[`M^/Vo&gZb;kQW<Ogu]"H.Y`@&>dmZ6:3H&0S]U<4Y5n"]Wl;)#0JeT4.MIGjC$^/X!jnN"`WZ%P+U3
%V8?*KoZ5fEh.-V=/#fmBj_AP2-0gjb32S\m+,mHkjT_&[Dh*;.b[$^9I57k^1`sr*=fjnTUsXq),Er02qA\4d:I8D>N/V14m>N+p
%n2=]&JdE:"3Lj:b'[tD?^pC3N$>0o$cmVX\%Gp#<K%Zh5Y&Uj*bE[s5L%d:l,J6B<URP"m`d>Y.(Ltrm1lDkMe8IU&#YtL]$*9ZD
%Z_+fd6K9hQeHuC!9UR?/YmA68<D8]hR"5XL\&lt'MaGr^N$oa)9o\sQ;<&W_=*BcXK$Gc9-^3bf[Xh/g)QX<W;\as/2L2PR2%&bd
%_rdtmjia"m+/!aq;kN_hN"L%Fg)8+PM]O.q_:uI.2`7L;.gMi3dA-UBBO'1r8V!HDs-f7A/O\6*iT(RC'10nkWa!DNRN\b6D"H$D
%eEq/3HTMIrc8,U/_H@n[7T)RQ)[p"EM^8m5*p&'8A-<Q4-YoT3B[B3#Yt-i[e>>1JPn]u'5ibjoe)EOD/I3eHK\4h]fHqLP8!h5=
%"D/.+;,].hZpR54N12!j50n8rCJsflTi%[^_*XlcR1?J[\$CYpijW0s&HA6Q-*bb+jY`51_>jBHUHh7\+A-HK4bmA)A6]?BRd3P4
%rijs%8&Ah2,C#!/:c8R;Fkfog1&uq0$3:s5IN,#oYX>'=MWn^$]`:fOq#002UDFq*G2O&13`$u`+OH-$%liramUB:2eoFmgGQ9MV
%/B7/^:atfJ#_,S/53\44!Fe"J5,TN-RRU_NUnMXaFb>n\o)[)S:a.JtJd^F!YH&TJ$4aHM%h(#ATq_c<60C`Lq[umEeT+cE"^$C2
%Pb9`kLmA&`"JO-j`e_Xe6)?k!0JX7![S&XO/_7R)D,t3KU2UmT?M+H>OgrB.2;O^ZnZfF$'7=0/-=7q+'P9o2-0a]r729nI2j^K[
%KA%.IXVR.9HPRfq.8<*qB0C\9HD?m9SlJJb\>Op4_`^;!)OEVK#E%u/ej_hFI']rU<(B:sPoeTU6ini*N?'?]RO=l!&JON!2A_&2
%_P,33@[KHf`g7MU/';A;?0K&XMS:0+#a5Jr>/3Fk7ck/rTs?dHUoeAfb<G3b_4J8i^'u:MA@(o*,!_+t!d?32K&oVt@*hHlcSq.m
%.@OkeW[.7-d")8s&S<`b172H\/C&9lLcTt>beC'B3WktK-)FuTYWk?pG6G>5C9\up#<"uqJ=n)rU3@%?1]@qRC6tT6LCs[UP*e55
%\!)o]ib?o0F]D/X_:pas+;GkNX3Zj(iOZ"&fBhpJc4^qfktiFk(/]4,VO^uC\-'ltE.*8Zl4^Y8@[;NL@cD:2HT^[+dD\D+rd?O4
%Dl5S20T9Cb'jit(K+pRO=f\N68d]'92@H=TI<NUGd0do*%ZnM>8?):mL=)0i=k4*(CqC4@!<qu"dCRZ5dYS=UEgR;ulCV!KjJWt*
%ZTgB.p#4u3WcjdLXD6bHfo)iPM7b9P-r@S?YEu(Yo*VUjRO?aDVQlLM)$GXGgf.V/5Rn?W;)C91U?&3+.``%j+bc=Hc1=2PVPer2
%IPoY=c/7eIn'HLj2/n@,"N^!C0b=7=-"?:.n01`E#SuY,LKq*hUn%QY4&^8+Pq)69)L)MhNTD8c)d:8GTH$Ak=cUf&dF@&D!qYR8
%q[d++6K:6'@f&27K@5>,Hu+oWNP[06)n3Yp@+iM"[`=_NQBR.:?=prg->?rt`7cR>'d1>.RU[aaU@FoA*4O,m`:QrLhp`6j#Nj<%
%SJO@WYup^s:.F;4nEo-S6/?50l-<327b>K%6Dna\RN9fgnVe>Y^T:,FZ)K38b>HsXk0fo+7,'\lQOuMfi&Gj`D<f5pV<_a;17:'2
%O)ZT4s%!QFUe!^m2=bd(Hq]r>4EdEC!$`NM_001&)n0:GFa,Xs`C&8riYWiS6Ma/)_<;.RbW`21rKY"d:d1g)nY$`uQu+E8_0dh/
%^&@OWCq/+>7@6nY15$Fe'VmEV@4-*n7E0jD+3qeoR0$\nDS%3o"d>?soAb_iN-8Qu&F$^GReaprDF;h99depO7fa4qE:/c05QU:I
%G;>Io\lDbl@<sRU!VW0j:+SbTS@2Q'?PW\mWf;0Xm7[6P(muu5<g3CDkf8H6!"2VVnIsRdO;H>EcZ?DDAW;*B6'K*i1)giKO@+uZ
%"+[\fNM5hq>`"LN&ibWIR;=7OH,@]=niG`+U<OC40Pod2rol;GH]]?ueQX1ARc+gM6N+@s'ojL`aYgMR:SU2u(WEiY==WT[CDIYt
%'8C8h<mIYWkkpD38P&L_*l'i+GmWr[aO<#):i?J_":GmDRZ2`I\B&2=-l_))<!Xj!Jcd^+Gc.S\r]d>D6D2kh:-?Ts<#iqVNd;OW
%j"jpL(m1bT!oYCA[[hbR]gKAcK@a1l)MpD^"[H\9!"R`.cT^'IZLAR8gO`!#BcYm.>Wc+m7:#>f5JVg>fl5:/.tg9"#32<70[lpD
%?aV8L7qtreXf!BYpY:P0b&Sa]/0M!N0gCYd#?"/Ks54`iK1'5M%8fJ`4gR$h:RBm(AO0;Jo,7<*3K?G+oMU:I%31BI1(<+Q-]ENa
%HLaP7'onqCFc.J;#JHTXnJ6$4^'dN:9ej$^A=]-[G7kUt:FV5KKVNoEHE<7.[h-J7(:!19+begA/6Ram-.YjTaBLS2(N^gT6X-,u
%KDP*9h!erq8b-OC$QieR9X;lX*QM]9e;Tcbn`_1^g^<>J+b>Z6?m\+(A2FqCib8oZ0cMF6bqSZA!eV\,2IdA/qA9>Nemp[.0[b>6
%EIo-F-M)bK4K.BR4ZpS:46BSE;>[TMnZrdW`um[$10-8_C#6E5G4V.lpY02I78X0l&*B,Y7:Pm8YLCSC13YGVK=^l$.R&s@IsbgX
%B`lSNlImt]]bc8ibs3Od:^#dRBlu2A%%g%MK+Vcq;=juJ`bf)lUR??D\AJ06WoATt!H*@D0Q%ErD`3SfJM@Wj4OL("KFZg40d>%P
%Nn1JKS>fLp]b9NXg;QOqN_'Z%Jf+2QQfG;1MU2kp)ku'Io]m&HO5Dj<ikt?g95;KK@,S#<V^6C;l-#GS37+I\eg%%k_@2[=g,6p6
%hWdM2C1`\EGD-3##`sC!03D3J476fP_p6`_f>04K\:#co#@u#kQ!K"pY_&p^#^e?Q"%8>,[Qc;AJ`dLe[3or@BIp*Il=pGCQ6h*l
%&Zk%[-5;k(5_EI?d:3qJP9lkP$F;RaL;Id=V"*.YF9N>&@aElR(ANI)"P)??h,!g_1hHpr-T'Yr4+74Of\,I.NqNYYnSM99<jN[S
%2RqT:Zp.[Q?r[!U#59PD,[f"`T9)F^pSo_$@on&g+Is57?<ZcaWbLGFT!+32Ri+U8R'[BfR[_liUrXrc'CeUY/)`9t@4A,G^[1B)
%l3+s!'5_68aK@SeGLII#[5jgK<-qKH>V1>[mUBq:2+qN3R3/2\!`7A8oa##+S,0!9/2=;n]Y8*Q0W=Wo,@2R&H:1aP),Yo<iHRnI
%!#;1K0kq%1$&']H$eIm;<&W6i@^`qN_DNnCgA*@H%SOblQE"E,qWrj4-G44NB9Zt@H)Ef_/pCta.5!)+?2W>b5\60;,68Fj3)*=N
%N/aa6L5=[FL_.<826V$I_'_2=2T*R+8JO0']:d1%<)nk3;jEP):D6.\+Jl$8?^FKG8WH(=F"C;`UukLJW.9Z$Y);.b)nS:ZApuV*
%0pu4c-fE?:]Or1#.>J?i%84dFQE:2i""fVZ$u9o>\(GRdLHLiV"lU106'?L5R4++R,5dET?T*/ka<V]1MMB$6="NYZEKBTG(/%o?
%<F/]*/);a:\SB>\ko/+^!Z[]KZ=%<"eOI/`+&tWd'_TT<(>ECTF:BbN1g?eY(c7G=)#N:NOP'UbOG&PBDF53th_Juq%A1MG7I)PX
%BejIBBrddH:*$8iBG<I4Z7lCmR+VWES3%ie_]#IVT2P29R1'RW^Q-O>1_"eZlFS<ac.pheM_l$:@%Dg!N0;+L-%i)A@Z]7o0ou35
%#aX\9VErYi16S&uAiXb;Sj5gJ[KbgWB`)S=Pn*Q3l^FOr,W@j6m]03"C3N)$2Wo/5pem;pP1o^D:4N`g8;t-*-Vs-3$mnKKe$R7o
%aFhGO*aRpT@jBp5O6.knJb(t%82JH:d"''QCl'<O%7L&opC%F#Q3(_$:=/eBX[K#5@UVmVn<fq^QamKAMJn0<@3/=uFA9&Z-50qu
%n_G%T^MZ7AFO?0`o0@jl>>qb3LP2Q#Kkm!Pg(J&4`m>#%Y;6oac(^c')+<W=FnPNEF"+k$hY6d`k,N(UR$d^s^K$ieaBp8d#s,1e
%3AIcRi[VVhC(7O))!5,jk&q0TG,n+$oFAGh<f%/1e?5q/L4M32[+E[?*YRZLen$h!0sUgo=k.JYE;\-530`!jaSpD1$G`HiWo:0.
%)jjq8THs^9[36$0er%@tD&,KC'["8#J5*c]-:3H:_o)iF\n9-4X-W$BN30N2JT1jEC?QKk-):1n"FB^_U)p"OC5HnWds)DE&@a#o
%CSQ[nIjKJ#83iQI0m%S>"e=UC_`\mR9rfX>_%;Oo9.-+iO.adDIr$t-(/:Z[CQQOAA9JZr[g'kAGJ`?Z_nf9=e?Jnf-]Z8t/@chO
%YV]!mfBnl\8\ZKEIJ+Kai&%BF#$AZn#M#Z=Xr2rtN&G`3#9"dVRfnpL3[LEo'["<f`FqT^Bd`P#-tZG3>&_KVFX8i9W%h_e_s]#h
%35O[g%\W0u5;jW_WOG2=lmH4GK$5RL=50`_GXY;JpPcS!cm(]V/n4aI5XG\15lr6:HW5Y3&gFDs7l`IVRSgPeX2$#YpmC2,idEEH
%"=kiU".>"=,*J"$Dib)5mm,A1">[hd9^\nO&pR1TiGqJ\@:=sW7\jqAUoZjTjrTCI.Ma8KMVMsFC=d92iLUs^&F-u5LZJk"o:dBP
%'AnUmArmGEJO;R^8sK]6n2&Ho#V7oL5-VM9?Q?M%BoJI"Kp\8HC]MeSV9%$hKSdo9"4kSo7X#bWm>XEB?akHUjhR0iXN+t)5`)aM
%7enUUXp,U[3HOH3*(&jX]uPp%[Qs8sd)-Q"i1t(5AQJU=4"rrJfY;1nYj_np5XT2e=d>c@ar)T]_eE9sF.hh3n#]=%d*Wi]eR?cH
%/Q0*$0m1kP,\-SdfmF6NnTh-nVr]P]2"ao(fXh5%d?@RCQA33'Jf&\ii<9%r@.k;ZF6@l)WhuAf\:\oo3'sM[UM-NXbQm+7+WmKH
%Z!1nQ+Y`9971<V&SJ.Y;eARhpX#%r/of]L)#oN,XDRF4%i,Y=GO/TS</7Xjhlk)NXc0@>0e?0NT0j7VghhO()_J,.`)[;8%e6q1O
%phM.+1!^+U<]_$+2"!`#.6,6^18#.E;`QfAm&-s=iCB44T'c:!V%bO<X&kXT7-"Z]Z0&>.jnR([AUp@c16UVGn.Drg"F$)9)7@g$
%=GeuH\df_aAA3)nArr?kbc]%h5skgk#,(poihs>cLs&UceYr:J1B<0n8.#dR23T!o8dV!OFbFL##)'i92(Jus_\SR;8*Z+$!An$&
%`HE'oo;=."BU>`J&7tG#G8h<3F=B,=IrrM#,F!\Zg>6#d,9Y"@qW<^n4F-qsMt=!Qs7XF4582QAQ`jbEqmBH#G`b3Qqtf!02p]59
%6=+^.p2TrqVl,%BDtriGo'lrO*adnr_pCJ[3[,\Vo`gfM/79Nh1HO;GCfZ'i!'\s@J".YOoK(B\9<aior"q1@i`9+HA*E#;oa-$T
%eQ1NhOcQ2gd>,14+!V&ZLkg_3N-hq_@?5D(;.G;CAg%lqBJr6&bqY6J`]K4haCE.hRZ%q4fU<Y;$@#ee@><mUi#O'=46/6WNfc'-
%BoiU1;OBabOMs<8nOb*fDhd$K?K,)-3>oj)!U;X+'!jqGB*d]Um7>8XBia%%l8W"`XW\_&ITt/i763'0diOU2&J(n?63_O*7ske.
%cnWa0aq7[E@ou',MEB$:&p3@^E,Q?K"(K"F3CYtn."0,q/rC<'&WV-D0CXrm*+Oa_7Q#kTE-,U&Xjh_!DHu+=,PtPYA&N42k\lJu
%%)kt=-WXnj%r.ZV`mk()-a5<-o[3oE0m&+[EE1e#>LTNR#;sLbD>D)]I)YKcNZHNWN<MTd$dLQ_Ne#-@V.Fnk8<>&lG<"XFct3M>
%@u/(gK/G@CekP=K/E<$J-[g\(DJ&fc,\'\\BW?%pj'g&U#9777Q$/.NU,bg5C#<qFA))ig`%XXuAq)=anZYC^6SO8%"aU%H@,.fo
%6lj#ZWuB-]_\]*8cnl6r`<[fCU>b%L9G@\`E:@=SP/PI(J3e*#aZ=Z$pIR^q-@#%hHTQ`o1[9rrKU-_kl!?T&+h21OANt]r<E4#Z
%],9?7PH871Mp=VTpBk1g/C;@uMfiS5'%W/&\Vn@EG!IZ\lGsWH(^(0VFTRkGRZVfE0'9ftM8PF5.HK!--q3Ia!P!BA+k:Rj!Hu<#
%-&\Kd@R=d!d,L`Zi!roVg63`s&$o+R!/j.]ic;\@(arcjGIV+hUDUr:/CRS:26^Pk")+bW\r6>IL?'s``<4h9.2/\JP=T;j!>T*+
%Kog\t.0`HsZn[=b/jge1*N$=`"NgbA\6-hHUD*gj!K5GnM?36t,9%+0`Pq1Y%T/2'B=u>0MK-B[SEPu9#iA0CJ?f1i1Oq[^M,+Pj
%!g<Ni:J@:]cmLko<=bp9'>qhMq/a=uAtF"%%S_oO.9d%go3'AZ!LPiNerg+K"%05*\cO*4Lbi01&XF7dK<,X)A5N=sW$P59@b`mG
%]\`$9N`bM,`:U/Sk"cSGF4LcI"!DS=`p%`d0RP,6g>Ic1F5a@E!u`oEWf\9[381h%=N$QCghuknOCi=h4k:hj0p4a4J>>0C^tGC@
%0[-JE%;]0UL`KL5;2FH`<!5:+570jXrLQnl/ATdZM")gDrYr4`5r([5VA4WK)'NLF.;!0JOkDR,'(0fh+=m:B;Y$M)48:L-gU4L-
%#71W;7#9l\4BtSY2P=KcAVVF`R$nabGXibYau!q*%Q]RG8ea1k-/bBZW[m-ah#G0IFi7^k=sUg1P2NuYnV3/[L^hPdL<HI(?]I$L
%?n'UDdiE6A??\pHN\q4jj/S3WRa4eE_rH8(%(QW&V?79[a3\s<35bMS#3,\>>SQA;6&+@(KBV_?_Za1BYoFpA6*u'"Hj]UUrXLUj
%Y*+k0_N<.Nct_LU#UdReE,8t@df;Mo!%eTi-lQpC_?d=b+\lG(Ce%DDE.o0DZ/l9BN2R!!&LDc*$o"(C!E9maQ:Q4B9OXq2BWXQ-
%!sFjHHUSW<gg&!A+po"SZ]kbEN-cO-EPN6J6_X&j:,o89dD:K5-C#g?E(W1#%7qCSCgeb+82qp_Plm%#]Q[5hff=ni!Xh\Hi/7,H
%`t:]VhN+$N%=oa'%imu]j%N#(!^^"$0/5s25o<h"%[G->Z6SO[!?\u=koLL$(okL)G4=EarM`<R@"?t=[R1:<MJ1ta_*""L#TJ`9
%$YD%^%7^7B2Nin8S>e+\0S=rSMg])%#&fsC3"^duU,<qlKAjf(g;F@g*`/G9_9jG5%i[17WYe^U$Ka])mSL_e_b#n[_+f4)":@V!
%+-\_)$245u9X#0N-$ZA2_!lgS^^?W\`<\qb.DS4H&L\1T?Y;LQ]O(\kS`oja89.&1'->f'g]8F?d$("J3&'7p+OE)+n4&+8=772W
%3Fea&)]3QCbSGD=i/M/_W?8BrZ!J0hg;&8hL=[o&Xe>i89Hju2L^oB&=9c>r3&'Ete0[(-:",pYTn.bD$%+'e#*sO%hDg(;WKF(d
%>[U^:=:l$E#5Af,3#i\N>_Ao=""Z.;P_+hV(i4lgesHGpW#JGQ(T>-,<u,sUi6=Oa*"s1OS(*L\^p$_SC?:8eM!AE7Xo\ZW)rUq9
%"!0-S*/$72*&*HkQn7>j681g(F9D]+G)Vbr!Aj&2n-0d9J9shi#:/5@?8i)jL:^[KR4JKKW7bj<!J]Negg#U87TX@n\!k\V.LG^l
%!<h&3NWG(uQJTNt!+rDG]jutR7p$J&N?\EJ<WUFl!J']e@Zdbm^r^D/NrPS"ce[Q0&HTZaW[.t4=P`J%)#,aL":!7DPR^Aqb'PZ2
%0B<dc+@lD7`rfkZKDH@N&l<gArhZikFs9*,$hCLY+-:t"d?&itYkj[+"TH(KF*BV](26-#>Ch:sUm!u^Im^YTZ3gGeJ;Ku91(3Si
%8EO0K^qY,SrW3?(`G'(5;TAh5QXg;f4*iP.lBQAIhnTB:)D?Vj&Z*=[fLo7LIuaD!$Cc+Pr=-kG\/k<FJQiRE9g(<Aog$aO!V_pW
%n/>i5\A'Gk*YQNl-'W7f/E8l%%qLBE2;DR:d*9<n=b]/fbB8@6<OCYRG1^/N+CgcYp6WN$#+)tIKuIqDKF[lP0A'=F%f=EM+sT7d
%rk_[34u%]g7:3"r`F47=$IAsc_Z%tPa,j=hr?]lCNC8NtbMr\<,X%h"iXHfamARd5P.Kouop:rlfR&/I%FLjQ*VPh.=p1mKfO%N9
%k7>);/?3,oLAOUN6P(:4(DLJ"*-$H7QtpbnYeRE#1@8iYs3eVPO5Yun92D+].g,dIq+.&r[PC@X^tJn[09@ZH7=db2"q2eF7NM1=
%a-5arGq81K.%YBnTYGlUPo]H4'eu%a7Jqj&L]d!o^GL:O*f4>)i`"?DGJO+s_`HTsIn-_6#"STF>9Xp2rXS]2CF%lT*UpOBkfq'C
%"bG=u#IrY4/Jug]IR-e(7K`O1hoQJr(MW64m7>"!cQtY3d1#gdaE^2Mj``N%f:dXRK\^HjHB;B0lfS<5G;(u)@")MjULDDTIW5mt
%Gt%N4/L`Y4/R56)[TLHB-1:"uNY&s61W22,pn_u%o?'5IfGt^IElIf"?R&gaA,NXqBsfjX?Zm36F27RI)8E!Sn]Q98N"5ANJjBM-
%&ARK3.W%NMWfLc1$1UYA%T")S&AMm9AKQ^&AYKbpEejG/QRI%B$Lu:A.U\T^N*gOOXrP@SA\Tp;E!?%`'jJ>%r%a*Kp21-2"bGNg
%"3<-oNX]69!B/c8*9<FhSk6DCr%`R3&NUEmb6)(.g9<I6!@S0).h3uB)UBl$F-L#q`l(\@q$dg.F9).@Q$s/IqXq'g`VBsr60^t-
%?P")$kqKjt?tX\N?P7VGc\h<%?EO:JL@_Gn0oYBW^[S7eLE1>_6)E#f356RIPf7Wk8RSFmMY*rKkmBrWAOXhY1o+IiR.52^qW0.A
%p^0Ofe]\SL3jWgS471sVoW-$3eMND;E=rjBF[u9s<-L*:hAtjIZ/,i_XYCmMTU-,OQhR$,/'orKl=a(s>t0c#ocpEBOWF8tJFffb
%i_fXpN$[Gn:65PtkBBCF+)lZX!9uU&TO2f*=V;/,(RY@$_ZAs;A<$D*TO1N3q_FgO;J7.3!<%Xt!/9D0Z7\I<3mKD<rl;5g\/j`K
%+0*bVj8<r,<e%@ti^!^AVsj]YbNLLq[Q)Pc$>O1Fj8>W-'FEcLo8>;N__3p<?VE0`E-.W-;!]1L,L.skKUaW.BJiJL)M2HY^D,N2
%3O@`CP"Jm'EIO0^btt,&J_7`9"CSR*L;WIF^BuS*b67YFhdn@H!WD:?)"e1,9.C''#PpmV%+'0j?P'_a*IrV'_XE@fTHH:b6-_R=
%Y7b#&!r_,,oPcn=03=!^GuF"GhI1qQHb^Y,IE4s!Qs]\]A!e+I?r4P6,LS64RlNN$"NV,Uh$iJUK(j*G#kJG`ApCsoT:q$16%0Dh
%$n68:puSc6C.>'LY8[,$4bMM:_@b^mB.g5PJ[g`b+F4L-(P`Bb*UQqI+%+d<)F>GfjuKrThlktPP@iaeh0*E9m0/S'Z]nL(he'FK
%o-))BG$JCd>u?$@A=1*ZGfEGpVJkAec\gr@/a_C,IJ[WJ&dns.L-TgqoBhhQm<H@D([aA?oBi#Birb`gZf@#bbdU^`Y[dJ1K7QjQ
%/!M],?#uH*^:Xu%!r9^c%0ggfnHBMghI1eONu?t+^9ED,k'%"!D4>f?%E'&@E-T8?_j<:O(lf0AeYELAnAY5+@'LsO2F%"G"n2[H
%<ul#7pYn^g\FLWR[mgfY=ODIe;k.@/Z;Cf<foFkr1o6oogW`8_i/XX;-?:c0X.a),mKM`TMrfcLbE,5io,;Eugr4T\Tn8l_[uf;U
%[$N/t1'(H2H]^P>JIQLY]kBpS8[p9[0,k!e1B[!GVDC8>0-SsZ"1?#=1>*-'aj>@%&r1aE@(gn5$Wc^Y]@<L"rC$0m/o:^U"hY*-
%5B`V#[jo;Qm=#>`MUIDb1eemrLP@9aNmVX(@L%Qm6@T!O:Dl'.+hg!&Y60S#n9MWs!BWIuK):tYAam>4*!R3DT^rZ$,u8JdW3/7n
%_igqrIYHpT1dgC/?4OebpP=&4jB#I?@:20WapWXCn-9AkMP8jP5hM+>$`XD*X$M\A-tPp1V4qF<]?=W[^mnjpLW^fr(Q41=X6Anp
%Jg%NP.PE\@Z=ZVgKeSr0`fWiXh>HjL9O;C;E#(J]0AEku;g-Mhe/Y7d-84HgI'@,OWbA)N`YJhlB+,k9H)GcCR(OQg"m22b,V\&$
%`T3kO`l8rE04?8RE1CA-4qLW;;h"Oh@e.rF#I\Wfj<^(/J&C>Iqd!qMJsTLu,5&.,]X547jDdk"U1UWU`T/$DQ#M97`MZZ'G=^Si
%>C%VHb\P];&!4GM.],fuAjs'0_E;[j<<\/*0HD)&LI:XDn]h_lRJ)Hf*>!L1^;Bei6sa%5TXHj)0<HJkVQYfg;lhfD?;=%m0h:<\
%cb3EmGuq#7YKXH5LqL[I..%;]b7OQPSn5n/+=M8H'9IFY!EfGK)>8k,h#Vd9N32^YaGZ1Vc?''I7=km=;Ffe:NYR-+2#2@ZaXIHS
%?:7d2+uku4jOpJ,**X<.N[S)IG\Ki[dYX[fC+-3UXrT@3/Wr19^j),8W*kT\A3Gg-k'<ECNoOBlGh!_R<#EfMgAJH=L#]!I.u#8i
%0+:"j?6#!7)h2oc?=o59E<P;Z1bM/TD;DIJPWq$">!([3JsJ6)PAtlm&o/MA\(S&HJFFbuNX/QuM.d*$l4CVQcW46^Gaf`/irH`o
%=i.=9(79%H3PWH"i[bT/>=[SQ&2:RId<CEW3pI<)(B@7L-o(3s+@,$d-MB&(U"U*(\,)L2$G9SWcZ.IjC/2bNkUqKb'T&15I2l)s
%2=4aHYptX>F+E'-g"#TD)<*7^e3fjY]@ipk%X>UE"W2*nmGdn3KTnIM/mq(?]Kk5*+q"(5KC(uMW-q@@?/-Z.r;a6`!#V;4?q@ml
%+"?ggZjU9oHplXVFsqa;%^K<#>WNI?&Vbq:pB/2`Loo0`YD_n@;VHfG7<f?-RKL-=Tf$OXE8@8ON@ne<iVeS6M`c=*W#PR<V0?U.
%L9$5s)THQrYe!*di9;kKWa"gt?jG4N3Y6h;&"'pN_Na2M\r`tFL3Pd8J6&s"l6=q&_7^&O>:c2iK+n?bORrOD*W63"4%>f\]$QKl
%D]MOg.CF,-*5HZOkspc147$W-LXJW$1?%n,-s]6X_Hu\%\qmPE6LR1NLqe\4DoL,s5]);(*G.BW'OBMkM^F<6*<Q"$8'uJ&]n>Nl
%$fXBYkTY;7HE:Q=%RX0:#i/nnj9'ud]Fg)7X)>ka7!B0ZS^:LE"C4p1n/XeR&DAt$M4dKdHIN8*6g4*.FI3pd65SB?/Ue2')uS3B
%'gd,JXEldsnO1FEA]=e1Xp5A@@PH0k@Ml[ucLMNi_pDCjER%&_>mb7-f;%^nJD=)GEbt#,YhSPR5;J,a0XJY/7!JEGnHPZp@rF+a
%-Nt.LqnXCtpAg^l5]IH%G76^rbM[G=NaA4XH7mZ)ZPirQSi\KIf-,.a.VHW[%\9Xl&LB%?inuFMG9&eiG;-/_\Wl#H&CF0;W(T5`
%1HY0!UXpIsE+q#u=T<!!^n)5PGFA^Np$=t14_)U-F#>UaK[[lb-&$;'#OG]]^`mdb>^eWM8]/iEpBU%ig6%59@+`#Yb1t%UcD<0G
%/"#]*"LORtlI`Wi+H1&Ek>G>]9\^ri&jd?:7>K0BnXi=(H=/HK8;bp/6g(aP.8T$[i5\/DE\8"@^g[hq\YO8FcgfYHeJN<Zfc4&E
%!BHLPU#P,k(&L^%Fl6L9fX_0*/i?S7h4Sg,I0!?rTl\=2H9<D7;Gfm'3H?`!34D[Rc;edq)Frjn!d%iF*B@37mkIN&>dt!jW<_cp
%U80KD_6@uHTF0o8\a!'@on]0^=::Li*'9L?Ufb032GZ_$,3Qh@V]B+!)a@<^Eo^If;(NH38'XP&##0u8S4hHU)X3?n#hqoYP--eu
%\pDZb;iibZ<e:A8_Y:p(EWFAgQ0paLeUb;"q:h$Qi?k;\l%#9sgc+GuNgpIYD4-ES9*41>"*-#VOKt=V2;Wo28.ZID3LAipmB\#"
%#0(6;1m)jA%\-8Ocr1$k$p:VZ$Z`CrdC(loF4ouU;M1R3PRM3lJ=I"I^<Vg]6RnCSAB;;,5f5Z+kCUiA4%ITXA*a@dc=P8:n6gGW
%+9^NJE,>Se(h1Lu3d0p:*5HW>WhJUMHJ17s(,mpn3i+'I/pt2dRa&mIBg7WL]+\6;gduY\gu&`XNh5QXo)P@$Eh0_Nbd)s=jLDbm
%W9HkXH`/'D6_ueKcu>mKST3:eqS\P#0_`d$:AV$o:c*_B[QB,dj_l;M*cQ0,.>HsI\@H\llD^he[R\Lj>B"Wica[t]+Drg/Q:>OI
%DD%9A3O[Q"6Sa?#"4"k;+TrfF(BhlK#N/i`)&hh^\Kof.[MhI9!ZgYYE\=sC!h^_"dd-5m9pGiZ[=bmuaLN.&[9#A//l<1K*[%N"
%9[OIf&'2;?AVc4SY=gtr'(CS"`Ur3L?Us<bOGiQK)A/@\eMj1C8YLe7!1h:O#tX=-\W$<YKA</A6.%Bp*BBH!.=JLVS4f98a=rXE
%bIBO+!%c4%P;n\G\Pir!doH\drC-Lj"*-$83kGe\(Bh<K-ZUg];-;Ba3L=9:PU#?@oNF1)>m7Tkap*pR\VpTc+5!9.&ZVQJ=`-#'
%StpJHcD=O.?16FV9Fk^uP_%h7"n:8Jls+9f@4)NiST$F*8N6_5mSq(Zio)/+KW[WY?cqGZ#O.jp=Tn1q?un1M5>9R3#l2uu*&JJo
%@[Ob<R(646(_\[6C&n&tbjCl!Ig!t1@T.MVSLY!:TNfFoEk<Dl\YA1P)m!hC`^D>4b-h#p,?-;$,`rgMi>+C>73Q"('WJ&1c3$lq
%_TDmV?pM7VX!,+-&SM1GN/3`$9J2-W=*Km6fDrBE0liCCJ7P>U6nUgQ'2OZgKO!:C*XeqQ\[Y.Ef`<4^:rBRs*$5t_p5$/EX[DG/
%oo''uNG]R;*:"c(eM?>?cOCG:K>?7M3%cD0E:CAXgB7T`P3iYq2cZHV^;Akre;2I-$l,+!nSMuliW<OBDuB_N2^Jo8R#nh6GR*0C
%9EP:rp8K8\/u\8.3Zp'?5s5#I`(`gaTKV;n-6,8^'b(t^=epWEN.DXI,gdhPDWWDc'+1'Q[ZMmL/sLj[)QZ36Y]o.K"rE+S\j<B$
%!-%BGJQ`g'64a1Pi>B'Q1l0:`-AtTZ4ZsqG,&<AeB)oH[8q:5XppUOQ^_C#3D\40,GuTkPb9La(L+ikIKeUV)jB'PZQs8fa1[&'(
%_+rY;B"<s-e6D_1Pt%=?)%)*chP(FP4]]X.`8sD3%Fm"(*7@uZ"5Y5\/1Mk1Nd$CW,e1"nh4b:eMTc83'4oP.#^7R2G!/9tUkaIQ
%o\:hD/RA7e*0G,)KOj+.\"6:\34JPTj35%Kk*AM?Uc_LlB1AtRga5\S5(ME4nh;QkV1q4mYbmR(iYL*OYhT>t/MT9&QiOTX_ZKon
%VL7@:oR;J&"VDWqNc#5\%OB[d\1QPO%.&.0jfho59#.-;+`bPn-F,4$_"%Z3/Rot9:LUK9J3Le!1/qKM!ocNWTXGu[g#/7+!6'Vr
%hB?_:"Q!<A6J=IiN?d0:*Z-PbBT$*58fRhJd3XlS*R?WDMiBE\(?AATH*:ni8:"_HS0jEWR98IeZ:.Y+(?,A;QK\l5dl0Mh70E0&
%a;1Aqg5[kqn7R?f4,bcZ!Q<tG[^\hNblPa@AkgjJ(q/*EO@%S8ZC_L->PM2LLWfbN"6FC?YJnFk'Z:>c.mtk=T&tcuPQ"G^YD'q%
%,2E:4<_m694*GIQ0'WpP$YIue"`eHW4J<'d)f/#%gfdC/*0.82SL:XsM-AXoRs34_m$[e4'seZ`'?%LAaBBE.*MA_]6W\?:/o\3:
%l8-h&Rg&!m=DbEuW$>EH9JYOL9WVEUK:PiH"?*bXWo_p'GmCA"I:^:Fat:LW%PY;pFH6U%(A!h>65W6F@sl].7Vu$@a!#2mmG3e!
%bN.iLNrZQnrhs\NdmEdWHK)3(dio<;$^^(aME^=`["ZPM#03U[T#_>^"#d8N:dEhmCg%Z(mFZ:cDqUKcXQ&CQ:(-C$Jphj`lOTKM
%<<e!G5VW3-AT.';/Ed0q/YWt6KcHT5TrK*$(+ut#ne%9*MEM(n#GsqI3.tGTV(J!`G^uUoK,PXNC>]DN*^e,;_0sd>n%)#GMTb(B
%[.%!<%+Gl'$-Z<=&WjG'7].3%JOp$*kW#oa;)'`WN^hcU@^%g(W]-^X_kI>2O+iMZ:p_?Sdr6_h@4*H?&hS&a_)Mrj['6&fM/XG<
%j8mYG(?R>B1hn(.BRA>V/k;W&VJA6*Cbp"i!J;-l]V0Ti,ZZTF4DYS9IXaVUFeSub2M4VE@+f/50F.AU7#fX!@`0<eG]E6+H,!h7
%3mjX6S!gAuH+"S'`;t3!EO/fqB[sn&<).Gcfk-ql#LqF=V\qS[CpT3CLR?%[:KhG@1'=qLkDL8<Cc?<V#Fn5]Sn"fraB;X6Orb]6
%'*mt@;bBhPar7+!^mj_GjPt3ch%!\1\CkaiL`auU]4oCl2VUBRe$*H?0=sQq3_5DYc1Z$f!BJMC\&aUTc>5EEWPcr?Ukq9q1(.(9
%W:oHrA<t0$-H7SEof++,OedUUE^6!4qb_Aj5SCi@<QCG;SkCV)GZc.E_9D!(ZGY,b-FbURdgin@Z":OUANI+J]HE[7Bu%#f$dWlX
%i6"*2n:[&qS!Y_jW3XLX@@#mR<>HoP!fokFQ_n=RVX.X0$7X`cV.kak?/7UQ+6tHV!%3[Q:5,`K38*a!&-n&/fq@75@'[RH+jQ`Z
%iTqFDOt6^2gUI6H"gZ3M_i>s7W0,MP(tiL5,6nq9Aqu1<&6Z4d"E[<G=Wo1/hZ6'P_SY*F%Nu4^Po,79+Zfu\M!Rl9'\R6r2\X-:
%7?7j]0k;/1_oGH;5^H-6L*9?CTqQEY7grN'f9bdcCI++*L.>nWZ;=u(R3Ztm-<s4f=_4\J3ujt\Q%6[*kQ?,^YVZsH1VmS[>pEUa
%@E1820Krmb_P,(-fF0g,H<&FlO@2`db+p_41ZSWE;TX680l8pco[O))L";t&\J7%]_mgQChW#`SW'e?H$::_,rg_aN-R7&gk+Jut
%j;;T?`a27nk9!u9qM6$dI[IB&T8UEJ0O8,-()EDKE$Gp<Yc<a[,KN.gl7@m/>.*QIF)O'X-MFc:E9,8Nd8b;k>dEL\%guc%--'D^
%!3+e3*^c]RrnR7`cCds&K7RZ/i8QMfV:OZUOp=_j_gir-)\P9?c)%3Z]rPj.9m!#';0YcteDgbW\2_6f\W;+A0T:U9iWN#$CfZAW
%MK\bSY`W0R[DO76;.7iu7"4Pd>[3J!Mj\X*7e.VU\WER)N^C"p;c&8s5^+p.638HeV.eh-_pK;BnoXN^&u`Iq3K'JT#m5FEa"S2h
%\=D^d6`W]Jo?_!0dmdP+dS]Z[iA^oCJ>GX[(#CB+&2:^h%m2ac-1k@^"C:bT/fnU83=TV(-Z[RK^hc!uRM`:lObqdB^ltY`V'e2&
%hCTZ(04Cj]9a;$&*:M;(EFWbE/>o-pco7BhJ=7t)LCjbrr"(9Ja9YE2]Jr&C/EnZ"q#Z2/DBo6@DX(3+=iop+oAg^Z'q^[23DgLC
%VTMe&?8'`9fR0(@]0go'N!Y5IEi>Y^iK+ARIU\Y\9Z$l>WeSEB;PqWs5mbKKko,Bu.'.-,B<G?oCK1lYk>j]<1/Ka;#6kmr<VQn^
%]g/9J14Tn:LL"k:@d*2"<RZ^W4/a5$2P1p:Ne1Nq>Gt*O]H*S]NFh64c90d+nA&p'1^qQ_^bffY67`beRPt=Q,c*AH&<L<G'F'b&
%ocicL'7X@hWe_.@5RK'%EO2uLPqphMLF'okXH@sbTk0'sM>$]kVPZ)Ba@DM4@(c5Gkm]bU;\,)mT8n6i\]/d"[=_%_H4/`T0lo=.
%kW=GAcLW%WVa4R74L;ShK;Yh-@_Sh`M\#)%%X84S[Ni^[f'7IF_DB'n([c1:UneTEN%c8l2MQru!I=dj_EKjAJWDp6"*lCFW=O/>
%jl>k$F<IMMe(R31Al@%'Q-#F[^G>pJoUZ)1\.,d&[\<LXJ\]B.:32<+S,j>JR\0G\0M6t5$j/Xg!'sg$ko?'d%jt*ol<pj"%/*;,
%b_4:DjMhIK)Bd:E*,A4]kj<Z,#XRV;L(07(S'Fjd%2%u^o3L!&<n>'=4HZ#oZm,F(A3+W?>0CRh:giJlV<`C<O^M^+1`A+UU</3S
%!r[shd6J\K#G7@gU]bh7)E.b-'u-N3s,adISa8#GrWiG+5%<Rcm<fIUqQ^CHNa$?&[M].n<"!Uk--a+B$(_-:=#)+G<R>F17#N<L
%R%[_"GFHX[$0iQ[CdX$KEsR%B&*iLnVS]tlAuBYoUf.hA$0j5]'4I!'%Xk/E&#$h0$W-p*CsR#X\VQ?ndiY<rNf?=Li(P"=3YPtQ
%8K(E1FPpjp#!laR6%Qe.#6Zf5$C$\iBhZj$i4q^\!/5&Ui"_&K-\^1dR"0/]*O'pD!%_V@/[Jq+!JnD@(GKtad!Xt_MAubi7)<h:
%Z:2L69Al,036=//DHYspVqe7bA_@PB::>?N#)W/<Z3QM72nN7d1.;_Fe'+#DX.T#gh;JYq:rPbD">#oBd@h\]]Sj;t<L*s4D'>=O
%&"kU@%T":4fKc-`S.oDXMgEMr<Ul_pF=Gq(.-j"\P@oJa#/EZb8RB@GD4(pOC9(2Ifmq'>+A;hpPVsg]?qOK(0dF$_;(4o(kK.\j
%:,$0-AP.jUCCT-:U*<j&K2ip,BVbhe!u@H^4OH!Tf#Y0mH#/o&7$8RfK4i!hnHi0'T=RRp.-ro9Telk2i"RSo\@PMJiq,rZ>&cg3
%TXak558YA$GihSfaUYi_PY%M+DUf8r_85SmkH#sk2C@1(=VU&OK.&c^(A!QZE'rq#6VC<!",/a"/BRGB)8PhT27*il9@$RGG\Yi<
%%\ANXN%8)9AM]tIcF@sZGP,j;6;>+89lo8"Y'PV$=5@I(e^#?fr2/r0S55^VeFi<44W=foZ>0rp%hG\c\f@l\q0<?U%M[s'H+hM+
%F=>]N-X50nAeY^\VsBFOo&s-'GrEb!<clf@78?DK1K<DOG0@d@&Pbcu?e#%SQ5TLc%!*M'n1r2shH2h]p)$\_`'V-0fYd.T7%J4m
%GbpM:Ded:#;$MlnLq^'^**dfgVA<_Fm12mMK*Ia=oimDdl,GE@SQa#BS'/t6*l12-(IOj_*=$Bpo8$uNb3ff"#XrWsc0++FO0Mu%
%g_nc\b-:OB6PX/B7ZJ+cM,=fkL,2mkr*P7Z-X7,9g;MUlKpdp)#<.\UjCWVoFc.Xn7Lhd%c0*(qV5K)j=+R^C$<GY&7L%7B$lm#!
%&/%C^M3]TJq*C!=]9f4)8aR!Mrd\@KOjf-Fm:s.AJ15&dSHHb<b*R]b$l)R5KHXh*HX+r*gSK]<kFp=(O3?#8U/H=)$@%pP#0MP0
%XCsJ_al!=3'%B0WL?>fWPEHV5dn3B@AJ!;<903Ch@gH63.ha.e@M@Y\]`#[HW$mn:i*p%A)A-I*SQZGcRrF(/"]dj1k;dki"p:jB
%`jBG.N?6TNLV'qI<O/"TKP>f[HEHNN!g`Z&Y,c0p2*l.7a9h0_;8/^a*M#]a\QI[l'=7=YD@BLNo2J\5_2.Ma&?'@Ye/>aQ2*o*>
%O;ir2$DSHi/O5!\4SLLTDAj_ZFK'CEc6cE]@#bL/%e,9uRgmps6ZQm5%15V%Sp4/7.+8T-1s\O=U"k`rkGHq/Uf:#HUl7()%n13:
%,,EDre:PQN.U3fbhjq"i.^s9WFjYiUJVQ&3('[ScZ<28>10?@qOr4V[@PiI*R%)OJs+@_J1#t;&8N-j@`j*I<Vb1#_d\&r/?1pF7
%5:NHiaZ=_7J5ab4*`R<Na8=845)X1$"@PLABI93?PT=Hu9P+k>"f#`.?@i+K%-XcYmgP67MPpXmG;)u''9aS61*IbW,g0:J><0ZL
%c!=(])K1..`#/gN()>4k6,XT?$9eTMJK%G'S0_1O@DY$l,U)KR;KVeKg'GS4f7T\Th\l%@bZf`oBMFG9*b+DiU.$1cAg7'0<'#^G
%h%]5\.n\-:ar4<:I8KYG,>?A-cfVRS'Zs3MTI>7.!HEsk:ANA<g"^("T-UD68uL\OeR6uM@TC4@LbM3?905FV;h0uI9pprpj;,"7
%0ENt5$6C8I#-R6@2KZX"/8unI3s[8j(C%;`R5C-?@d:Sm'\'-j,N)<N6R$K0JD<^6(^S?8,U%LNJ4rVkTd1lNq1bR:O^U9d3%t^Q
%Jg3%B'(<gC#@p)YVPrK9kY-[NQMZSh-P4B<*sBe!^M;4+\]BRW]J\@[pM<:l\5/2$`e%P`]ToAN4]5Z!!_%,!H!\BN"tgdJ5&2/5
%f.pe["Z07W2'89Z>!/g=0BF"IU72<-['r,s:=dcGHnqg$<mhW[0_@IC-6`g'O](tJ'2KV4G)F^%'_kmj&lY<[$9C1WbQ^Uhkf;Jd
%1,Ug"j)(A$iSN8/^hVN^U)aCQ#sQX<'pfA_Siu-7<4,k]gt=WURB(>Q%_`&K<'Wo._Hr<*.*/bSZ7;fETP,G*Pt79CMMI9^#2E[5
%A38J&<r6@tNJQmpPKM;-1sSm4U+\#<k+`,G(gi.":5`0tDC#S5V0roC_$Fe2i!g#,[J1`^',7ki=cP6*,oOK%.P6@%%^AEp.,b&9
%_(DJ,@ijVfYrImf7R?bSf8?.G'5X`/0K5%dKQ4W8.ta7r4N*\s;a=D-2O6kWEqL*LH6+ULoJ@^&iC2jZaolniL&3mIQ\Z4WWB*`n
%C]lF8Ca;nRV_QaJ1f2ENAJ'EbeGY=[!k[NeNX#>I#Y%MNJ3fWth98<EcCOW$d/c[/nq]jIB=+8)\AY.f\"q#N)G,*&,UWq[^B6^Z
%RDJ0.WeeODPDup&Cs0Pu6#LcRFNo)B?#!=,g`,I6b?[c\3JVjf#Nj'-<;9kIA92dBl#;XkF&nRN_bsr#=?3t'?me<#0P(9-D*4C<
%CpjoUV.NE`LD(1#9tLTL*-ikTf(Gp:+UL]+@oig=llrtfI;X]2b.;oJ#AM\J4?9Z:UVp`/&MB)lV'%[%@B&c>IAN=[$6?Jg4UAhm
%FP'1,_lVP\TeRds%qGP$Uo`]W$8TU6MCF^mW^^4?R_ml4.$TXVa/h'$E1Zt--o4kB/S?:t4._8s@$EI=+^tQ!r7hb\#a6VI_!i"[
%&?`qBk05F[?<m0EQ))GqfU*/.5_efqdR#4`H8GG;CV$2SIH0`R8d9O@2KJH'TADk+,!)-'?][#FM*Y06V/$30A2(T;ja89n3XE3q
%F5KGPHEkB2BrHh!`k%`79l2*j6O+pTbK`sMAj?aG"A])l$6bhQ#D)b=MEXmM-@c_u1.MOmZ78+cJ-#b5Y:NO2l<%A\2/jDH0H(5D
%>$<(8aXTF*&V4U[T.t&[lP]0`?-q,)U*#cO9ti(eA-C.hg4MX;N&Jf5&#$&hiY^h'__\k2L3aO,U3^k+:cP+-:JBMt@MaSn'gl_L
%WjEMK3)Pe)4>@4s+s/$CidnAP]nPnHK]K(<e7e^q9J$sN^g,eYM:M-uYU\[^XIS84OK9i-7b\?V%J'^eC:O\EX9f,//]@9O@oBWg
%X96&_ocOs,:*O8!CGG;Z3%T2JasN2Eq)Hc_-R7N&Q.BJ9_n3a.5rFND%='po321@d&1Y>5L[L2A,#uI\'$MelEW`k6T[<3MX!r7#
%d`Ks`5\1?Xj]ZOP2#<r9q4(;=&3a:]dk%Nh*6;+=N2m.XaaG9jIHa%U=;221"*s1m1:'uu@&hhUjsZfN#`;*I<u2>)s/4hM<R$X_
%DBA.<fN)k,#R9tXm%b\!\Dct?f#D$:M\]d;6kaGTl>Ne>80CA"L36@Z:t3d\9"LR%9IKPAL0H?X%Jk1TbT%:GlrZ5)iR>tSkV?Zs
%.&7E6i-1&N+UA1)s*fI%Aa^b3Tp4&<AiZ[n.$t3EODtN2L(OLQQLTY3kh22pJ-6-XR_f3K$@#o0h*N-$.IReqMoP\`]'5#Sd:,t%
%#d:.[MqGaUi`H"\0:nrj=$tas5gTDF;%tkl+Xrh!84ES+:m_N5PA9$df_3DHR#U#&0D=81ac<.=pO5nk^I,aZ!hL6cb0!rMpm!EJ
%JiSf60V%0ZnHh]iC?$B3imVdR4J2VPs*n=[W\76V,^Sok#M@U6Wh$c-.PE=(jgR^9c4G$*8bDO&?u9oBW(-5dfq'gi=l,h[?(</?
%PrRpMHR%DU)l=Geo!E@6]:[W2SjL5HNR!VNVtm..ZJ:`m-A^n=DJId4\FUutZ,@;C#[0'A>Nht1@2BX,)[\5\m4HD=*#M!rM(]:W
%D0glRPQ?8le1!0-%OFOACH`Zs$Kr*h1m&HY+H;>/RU9Dq&u?^_G!m$QP6tXbRJDVuAS#.\\PE(:J>:Ka8X*DCgQaTD[$@.ZKhA/J
%8\l^m)@c>uAhhobCcr6m*[#[T\sXl.)b-r,IW?!?$JcYCSlQj3HpZ<GZXlrH&GY>h?.":ZTk![4RTSjo:'X?qIT<Ec^iMF(3f1@3
%>N-29,Xi6,V/s&#C't-5=OL<]Rhdd(-k9QA)\laM-`:$gL-VgVlIh42jCe)(,T8`NgX,Cj<%a!k^k:%).gRCoHS;M=I^4I0=HN]q
%=u\hlM$?H-i*Ec+(=-&4QEj9^=Cj=FbDhBM==u$LOfm-O<MV<EO:+R$ZBD]>fG7&clOmK&'R/=cCdtrA<K_tO_Sb:J,.V`$a0Z1?
%'FuN:A5;'tGR2Q!3k"e[2kq"0V2@Wu<_$h&5<+f<\-)7>?cZ'9JnGA'R&YIK#Ze-C.0-g.MpsDu9nQDJA>Z?NRBA)K>8VM!,[S[=
%_bMST%bUCbf['/+#uZpZ,'AM/*f=&dr@B:\Q.0UUJ\iY=r\#NrC3WHV`,&#ema9N78;LqkXZD1@>+EM:FI[d,CJRqdZ:*['d4EU<
%QLS^kM?21fPmp)F)2suHL+VC1aeqkf1*[im(<sWNMcLRaiheVYDT3p[Y*2HZm4CVUrkrjG3]-J#dSZ`t/IIr8h(p;87LaQQF@+.L
%UP%+j(p*5!q#On)AROS9FmOg_C*+)-9G8ea2(W?T6k,$m?!K2fNgA!f1o)P"NKXAC-Lmk6KR=qdG$kI;BYT+Ck:B(W))Hg.N)kq-
%H=0^c8V.TRa:6M0=[T#lBO9A\US^'!;;"LT0TUF$'5UQ??!a".PF/is(<%2Tp^P5Z+B_iD\;#NbU^RVuWl-):QTL#3/5/;O!-45)
%TnEp8d+EYO9s(ijbVEWbI"j023,5G_^h!3op#2_+8[^6DkhSL[%8Uc7-Hf!-9s";oJshI1j^OH/MlRC(4irgZefUdM:TeCjMi%fr
%TbrV8oWD$s)RRC:P8O!o%i'YhOX-ei&'Mu8A&paf(dh?b0j[>Y2C!TG*+5P57W?$&g-Wfp+P%k\Td9KV?7L,q61UXM9o0NWWmL!&
%_FqDSOcM[Xb\uJu*&OBKW8X35C'dr_FNK<6qT4pU_"%l?ZI3("e7D1T]&H;?$:3s3_ElIkO@fPrVF5Jf%>e&!fkT_b5pP&WS#&J@
%X"lLHM#`?8>$5kf[+nEcCBajhWe_&#bm7NJqQ/p_Aa1CE*,uXgJ!5e]]TXb#)78Jo-b*tgC-U[[P<78@ku!/R9T)A\2Q"n5)YA]]
%eKIR>PF%-E(O8&75pP;"8Y!b@-pdE(D5imc%-mD9'.m9:J:[]#[FRYgHYHJ1-$PR#of7i=Q_pSW`(t?6VIXG&\W7ou?HObI&pc&G
%%5MXb5+JYd$%PFjg*D-1o2@]-#X,agnY83Di!@;9QPGn'5>Vg/JM4X8!\nc7X-P`BLQ_qWWYo$&80uk9b[CIJ7"[2YEg2B5/Cduq
%oj0D4eP;Mq_Am2'acVVsUWBB&W`I(5j02CEKrHJ68%Ufr78+]IGQK@`C<SdE#1"GhN9I;\QA;AI=B0>2(l&Vn;i/FbiJ+k2,.1kO
%+]oG#8TE#g;^[:rQ=#o'b&"d^l70M10FP,,O(gGsW,Y(&dmShR,^Eg2+Sf"?Ahp=tOi90'<_;*`o*W_S%$GhE(rWgsr&^.+@Tt&:
%hkS+fBj9%AS=jPq)rpX"p>BQ.p_&YY/X#J;em2YA=[N8fZ-YpR653&q:brR_S3VfZ(PrDuXga^48?KL+lQu6,Usq[$U4<CbQga2e
%KT%6p>)S6o&)IH2@tT"+e4l2Rqo?H$Q+BfUJS)M[h'9Ro?4ZHWnkG^6IDM4s&"L#kBe^DuTXg2.I"X(QKbP;`P9^$"#&e+6K9s5=
%5gi3lN]@?ee,p;UWG8\UpJVKP3Tq(FUS^'A[H-VAeYnks3a&0;W,teI@aSI+F"hlra-K%A$$$Suo7Nm&GXD<2CJtn3TriN;:2_fo
%gn%P;jM,d.:IU5Q!rjfGilfhm@HepH;no6VStft^BUY'kLdqp@lH(#B2Asu%TR$N+P`<#JalBP\g.e(*))Y.UKr)H`'nJ7+_Sd]0
%cuL_,?BoRi,pd74MA-G:Mnh!7.$Nq5;EZ!4RdFP,cC2F5I@J>f\Ru!nHU_=)'0rRb?/SQu,`O6dGo2aD@T0(3H,!+[s-`C(7mll(
%U)7-V9snZ]$$5l4ECkc1iE6fj#Yi/<ZZAsq1\hV9aC'dj@J[XG)Oa8fd2AeW`3$3Ql;\93E(*>6>J-gJ"jM>p]<D)VZfMHn$/X`M
%9APOm%(%Wq^8+3nigU!LJPV;]StP%Co[GdIUSKZ'-Kg0B5u6]<(e^Y!C5"5D8_/)Z=olB!Q-d9<(`C:9X.*0G21],$+,u^<`gpBs
%)AV<=j\S!Q^r+9!!a+F$6*kDjUkaMJ6)4q4(=uJ^Mf]UKPEa[P?n@4S$H<^em&Vfh.9?f^cOYYofHbbpqJ/Y(3^p\<Qb=NO3Z@YP
%-<O-VM92)Zq%nKjB4-*+KR8I^-.rRn")L<`&B@BQH8e_Xr2W_k#?@tk0cO7K33]1Z?6]O:\0Sm3fKBkp_W;s'_A]iG.OBJ[oHH`/
%9/6msO->`GMp2oV"+mPM6lIN-(=CT]*qUTt#C?bKcVpU8%O7bfAkN@!n>RQAGqc`Yi`(TEac.FaJuOc`-E/G(1=Ed+e9P&rKUH*O
%58*_D=VDC.4u=Gn,9fZ>#BJ<Lip`5K2N#MQXWUQ!]6I@+7pm>Cmj_4(G`$DtR/rhA.9SN+!Tfdfac2GrUB_6=X\8f$Cp]987=pD\
%3)/nCP3H'//E=HR;*!Tq^dH7=O'\baa>?h''A6D<ipDolS$Q\ZTqY3r0<!BA#4&#sm[#bO#$ON>HO*M'j@>CZ4X7mODU,PN+\A+t
%g5C/Rbjb[(!F@snCEfFdJW7j9Q,M=LhonuR)p90S#^H)4e(NuSZd6_%NNOV<eC%]DC)Sp+N!HSLR0=Mih_VVN:F5k2?O3=5A/?T7
%?<]s^RdI"b(UkruQ'$bN)=l-"S)&iP?$S0:6Tb\J#k9,Pg/eJ1R*d6TXFsrB.i+_<8$CA2)HE,gQ%7tF7`cGejGQF8n?]$"EH:PB
%O7lts*gpi.V('uTTd7]p>-*6F4(4'R'LS@P[%l)K8n/(tTi$H\329g480D#:I&oWn5)I/:cHDW1ad=po_OhCb79!.rXiC93g>J.H
%i'\Y?b(8-"[amMYe0rKS!=G:LX]q!3,"TpI&sp9*;r%?\,f`^.FYZQIYJ_A,V%h=Sm"ZSc5uP=G^O_M`#ZhI8o0u=KN10'kd6Y0/
%=2:\u\>l\=T\;u)6BnQB$rZW7UQ/d7`hM%TK/h',<R7lP/jtP<V11i6(WP1D.ZmKQpa!:iP#4W,Dq%Tb)A@CUQ_C<0/9ndA7Q`77
%LX%]hOE$_JAtrDcMiipM7f4s=.42_k^/Tj_dRYAp\I)ira@Zc"j^+`8H.m,G&i8>t8l0269Mir7L*4?i_6*lq3<Tt\#1FKCqo31o
%-0%me*AM*::=&&"'#`tTLkVQa2G_c8Ig]'S"uQ$hf%bLFK_:`Z]bp&N28YZBDE8ck6Hfu^`j]p5052Rq+e.Onh(C=KF,kL<+E8)N
%/FT)8hZ*+uGpIuiRUi'ajsY!WAP'iQF9NM7XG_Z4,+Y2/3p2ZZCP!X3a/%9)*][Z))&;NEGFYNA'id8GmN$>P-b`a,AkSRG"7qqB
%0rh]&%Nq>c_hs6O0+dG)p9.X#+o;_2W)q5<cMUQ9Uk5n2&L1A?,VW6?b"rUB&3HZZ'E/hC%$@IqKZk/]njl,QeBgQ3qX)CN8X$F4
%K2Jpf=OKl8,=Z[T8[b3*&D+*tF!-M.&!'kALQ6f);Z*#tX<&"4+/OT4YU18@'@=>Jl_NJoR,(-5hCtlXL]AP%*MC&$#/k2#X/Tc'
%#iP_G+Ugpa_SfN-/0ojY2/&+Y<ofpY'BlL.aM/8s?*K7sUrjDE"Ui$k"[grnCdl*ROZF'&X:.T#PV4.IUZM8i`$7l+/<Ul>PD(ZR
%2I-03!qCsMPdHr"S^#u#$ighnB8EsjZPg;Yie,d4`X;7Hb2_nnS%+8r:6!KaV_+'V[&c9\W6RiH\q/I?RUMEPCl2pS6k)C3A&B]J
%8pJ70cjt-d<FNi+4C^)KiX3I60C5#sTrEiP%3CC)ZG#O<7%7%Z^IZ#4cTURuaLR4sV3]c0ZQgsBKgoAe$K2:)^Oj.)U^VA2,dLT6
%V'4-)SRbs2'Vg>h0_9gHSfRtgh</>(C>*L!`QbX+Co`F,JM$s\:*qDT6hch@EA+>uBMNNTX<q6<?eA#:ZnBQNiBh2mXJGQ$7Qf%T
%T#SbF?ECMUc]7#>Oa%:WIaL_<Td-Z#0oGe&)cKndJUk'P^ENDKc9SE;NM0l;P(K.;!G``6j?ur57lgQ?`ptBn$I0%DC!tEO>U1.[
%K^pI3b6!M31iZiF"6;58't/o%Il&XT=L"-e-Ve!b!9Bq6i;Uu9>R+.en-`+sW$rVj3VZ9QVPKQ)d>T'$6V&,46]Oc:mk):/BttSG
%qXg=^\R($#7Nk:D6nLm;5ccJAqurL?I:4RN2FV?rP@%89#U:[3iEa9.6a(^!fJ*?&SscWjYSH-0'_Q-;+N5_.fOFKB<J`F9%3-sR
%PH.54oMmZB$^.r;IaE:RoglA8D"5B:IZgM+g77]0/q"f1WUb]G0dGbR`IQli)4\[&cJZMgNXPl%dd&0R5?_2/Pcp7BA@<,%>,C\B
%au^?fa=q@#PU%n]_Mqr.iu4;LdNW%P=\BAnX+ieA9pjnW,ISduLeL_,RX\=pcrfG1KMQ0ABVos;qKE5,?2SA9H3aSd0m%-k*]+mX
%:rR+P;9s2keZ#9h4BQof6#;0'#Urp]HBCl(GfALY`'PsG(dLbM":VOj4+]L1K@6*rjUJnu`N"1ei@D7>8Nij]&04>"%n.e970?87
%d;):aWkR(qM7O;=fr2H>k.c$*;4('OEbgiM:/3DDAMD]?Dq!Ob_j>:WfV`F2MWV,&cE6oq2#<(t2Nj/g8]O`?O6;p&p3`833.2@q
%2-AL7'W[8g;\V>.(88JlRU3ja3X7;`=`u19\.C&[(;_.liCQW&&rpWU_2)^cLXEBapL*,\7H(;'pD*dB`$lhbK=^EB7n0M_?($<G
%H.!Vo%'ul.02Y]4kVSM4P,hr9LmlAN0Fr,a4E]*'"d3%XZ9Cm.JE$t]:"<QH2.;bF@#d,Jdd^@s2[Fo+UA+p#Zqc3+dHtK.n^TrE
%!.9FQ5-(AGn[6KQ#t\cIJEoOu$"AP*8.?k%eeG-^^<j5H_;R<ufE7Eo7PQ2`F%2SfauJ"G'gYYNdt="N2(f5bS90H)\Jh6Q,1J8b
%4;`OJ!d0n@8s6[,!%!pYUcI;=K/%2L%<=">B<0[t#Mm+5*QL;/RuG*q8qEk8lQdlX)DoN@IN4AP0k]d*P]1n7o,cu0a2$UE4WC0.
%ikCqIfb@O4Ygk@'7;*<>bHGCbE@*FuNJ_[H9<2tHbLRUHM$2[\<`cJhW53GI+4DL8B28$KqM"PcW)"e=jl^%a.-P,`Qs1XVeeq#>
%=Ae@6PMpc?\9,AZL?jC-Bc!"QRr.)&9p.i_9GtKoV*5o"I=Oc"k_6n?BNh9e^KS[37),aETde"?)EF3b2.3+!'cNN$^?E@o@G<V)
%KskV\XW17KYUPWq(suU-LpctOT%7JsOf:(<=@U$;c_rZuM7%o-cYW/H)%t<7@*0ihD_<;0_JpmY$/\uAiCl%BPG",d)*o5HK6&o@
%l6D3]GR+no"drLB[3ouMmuNl=JHjJ/-=CsklE:ClVOOS#r$p`UnFNE^-0f5D(kR7$\9BtkC6Lb8#pNdeCe^C0C)1%"A`;hnBcf_X
%?-*=H_?5BmMP([bau0XQ1d3_5a"h_)X.J1:Sg'U!SsB#j4@PXX4@)7#%_bJ7ltI(D6&GrOMnG%3M2S,Dj77+d'nD\1hNT]W$RN8E
%`R`b3r:,MRhXE?MXJi*COP/F='l?N^M=rdQ5fBaH?AD\,Qr>88;Puh^!.&f^U.\*YGcb>/h1s8YkcRc+PWWY8F)pVh_'[_`VGHcP
%>.fKEP8Z$J3.ST_/XSR55`S36''UKN9csnlO=^2e/OQnFGSK5P<(YT50mr>e4B3AUM_lCe"pqnQ<WRWs5s*#(r#@<)/PeN9M$+m2
%`(@EfXIBqUj="dr.?20;/],=<glRa4K9Mi[DNc2NKlbb,g6#%l?QHJMW7t)RBQmEl'/(403f(X$o.=0O"@5[N&["Mm!L,2(p'ea#
%aN^;a&g[3?=Jm'o-:>76o"LcY7nIji&P"ru(/(j.c4=.s'B8\88_s^_f=[mhNmSfA>\JThGqb7IeQJG#FI+-`^@q)A=N'&JqgeJf
%R=r_e^0<)>MtaC8*LQ!X`\b0SM)E^$ei0C!3meq%o?mBqXL]eaPSMM,2Xs="c5cb2BjGH8:lpO[>f"XHSN92:jM3O[;Ib_Ba)Om[
%RS17UEj:9YWZZ?qG3X21*-2BR2-FtDq7Ro]3&LE(q<H2p8ZLc-qs;7MULY=\*9JRd?B&?Qb/.)AIA?thXl>H6bEFtQS6qjEL38J/
%mo%Eck%U@ejU*XGrK0XA'tYGR."qL[]0&M4Au52?e;+JuY3>6CUg_`4/r(;fo0*mpSo%,,U<=.d9Dj>Ydi$&b`;)nb0,#CiKK2&n
%+Ia1s\E1dPVb>pOjc$>ZVd%Yk<o_A%LR+^@hA?])c;/!\/>oSWc7;C(AB>[k*'_CJW"lEs/$@9.jY1Jh&j!*6LW?E2LX,+[?TNn$
%.PH\TG>^FPjI0r@3T[2L'K(c-RkNF0XE\KEEbscg4L2,FEO.;jVI5\2eqrla!a<J%RS[miIL[bRkuf_gU`r+Oo_1C0)i8[rN)hu"
%UO5R'?sp3R9a4ErZH9.N?5u['T82WQF##aO$X#IK*DDK7`hZ.<`pVkL,4lJ`P2ikMSi^5P),A5>jCk'9d#d<_CJ_3kjASn\YlVs4
%d_HaRH0"/oX1GEPjDC&`fM3Z(Z<bsb#o\t0+@KV$/):#p20tc^c8m,#'NZ25,iV^)dDuDImpHa432[0gpr?e''M'qEZsr,34\ZlS
%*9V8rd1&R*,84@U.i*EZCA3`47nj`/c;<T'BL9>f$:QRVJia\a%Z)Gb<9<rcRddjsO[DfqO.jWtm%mD!YDGDc73ZYR`mI*5<ZfID
%j@D\\HFA#)3OTRuQ8-JJ;!&&S2Hc:#P!BL+SZi;@LP_gA(-GCN\=IG@C<u69BlL<Z.=E2DYK:dl;!V04gTb4Kj1n?DP+fpo/6Ef<
%O!B@HZ%":nGgT]"c5k6U1c+6RH]%V+4.\=.<3bH`R*]SZe8YI^Ubp+)3hFUcB?]nIHsUHG6X[^Pc3&bJ85b>13,Sn./J4QtR^==k
%H/j"'"AOH$WOAc&emRMlolGM_@,p`E0lOm1is8fZ.AO:N`RVODN@.A>1X^MG1R*O3OV4*?d'Rl6i=ef!U?UiP%eL:2?_N^(#c^bi
%h8mOcR.?u1EB9kQbVR6k1Co:BO9K&47mk!@",t-i.9TNj(Pd$$6MUsA5*hci,p=nPff<=8NpbP:[MkPDh15=_/$q;,J0o9cno')G
%&\k>t`M!WX%:*tm%41%:EV`L%9qc'Z>B<-6T].peOm$RSEVpl=N(+.e3QE<#,)X;<_Vo!&AnX'lA<J<X-&:)3EHlk5!QSm58[KdV
%M8LLX8<su_4KB@8\`('!-!;3kE`+rCa,"@sW&[9d!h>Gp+qB03$C2*?`)C1MFYa^6h5,,J#i]-o"Gg8;W:Rp5=Zd-8T!O(mXm+ft
%$Bl>i*.7=O"E58(ZPGr6Tu3;I6=-UR_f;OfVicSKM-k/k&iqrkGEp3D%0q]AO9C2jkG2Fj'f-h-gHQQT%REq@"c]TcRq)oq\8ZIn
%7YQZ).nQ0/"q([X8]VN;<]D)=]QHSq-\DI>.6IdOcS%TCal7H%'+SrN!.GXr*c3Q:;8Nn`5[^f^_NW!?4!Qj+4ar(jNu%_(Li='-
%D7]\-&C.;`)A1?ti?PXFJp^A@2c?g+l/;?*DQZ-J%ca)n_9h*o.2=1q.2a*M]4oQuK>@R&(p/)dq#I!oC:*FRKtQ#:n=n2e'+R.(
%Nj?Rgq&1JHMcD<qi&p&]NW_#$_^Ie>62cOR*k5hGFr^:M4u&sd&*emU_nZKX-[$:#TO8Q\JO9kS[lE<u-7+pM1#Ro=HR5h%&jMS)
%P?/=bM+2Ci\/,AET\6W2!,q/L=VJT?\g%Xac3$n@J)_d6035^`W0-HWs5mmMNtE0qPDJ.$k\i<a3r-BY?@<'.]3rVVG,\obRi4?s
%k"TW%W*LOTRFTaOQ`3==aR:``&AMLa_!f[7?]Fes_fCJ.D@?nD7n3Bq@>b_;#5]HTpJe/:&"l?1&hYN8DrE^PZ,=9\L==0,(@6Aj
%(6d]+9)F&A^RrB@(&&0+K5ACTgc*`IU0ms->#Wk(_nJVcLp'q<34%(*@]8`b*EN<=0Sa=FLe"p>hoIerN9VDhOjI:_`q`)!]g-R<
%S8W(;EpPO+pHUdSKj-q\WicsAYekcX@Rh`+:R2k\YFs:/K1lT+d]XPGUCnLcnJt+kcZ$`[(,Les=ouDMf#$W,j*SgD*TVtL##AOA
%4dU9Zd:s73gj@O[dE_H?JBINlm6.Ijd`C8N+".ol^^/u%2R4(L)nMh5J1?e<H1R6lQ[+['m[!*N:%`\/6+ml8_%^[;HLj.rf%./O
%aG>sFZf8r]RY^&nDd:+'`ert#c,+-ZDo>4$J)#;*k^WlboJB@lqPV\ShQc>)@5)U1b?M9b&P'kFbY[0;%O!(R(u50JZ+DNN2pWjk
%+YC]<0NbCa<[dDh<Kq]FC8j.TpDl]8X6NfS'M#YYGtYuMWIqi$ilADp,C))ZOa.WkOuMMU-^g12EM9TmNT?)n/k+N\,]?;C?sl*7
%)==4[CFK>Ij-K3NaW&,lQn&*S,)';:jNZ#7d\;L#%)5DRXb47ub;gKb:lNF'TSemWgHj[aA2&)D5i.G-V;oW^h?5*(7?]A+E$6!o
%Z\#jcU=A][H"!IWn(/Ot7b/,eX;l/ue4a`E*,f-r'RmaroHAj;l)MbnB%/Ek\'"51b`GXF<uc,_m0fFe3So=cAYr<Q`u>+[.)[Wr
%2hSNYg+hFq&/O4ADdcA:Fpm=NK%A7gN&Tam`//1FDalq>d_4Xb6S,H;j*3@\Nr3VQGZ2C4^B/]PRnTk;O>eI>:cQN8&fUZ!+E)@\
%Y\iEF,Q=4tJkklK";P4A99;(_0\`rICB;XgihKJ92lmuEc7V]F0[%jKC`r24-"tmjhC,NTANptJn!5Q3>:JFAWoaf]7QW3W6?kH,
%OW2-+juf*#%H<A=0N`0$nO=-*-\X:f>>Vc-+hWXr<qNp9]O?"1lJDm(#g/8TDZtAA8gd5bc-GcIOa#qA)nm6m+f$U$)rF9qq!RWh
%(^78@<d8#HeWIZaL@/Z)Gepa>dG=0_W885.M@E_jbh:gn!\Sa\>,/]6P^GGZ4i4'D?sMf:ZX/$A.lt*Xd\s6ag,769R%=K8brYD&
%pMjeh@,OG71c6j3A/JL&G0;M%`DP*Xh#c>h>+:hsm>.T8.[':'!12W4^OgVr/:$3sm%sdEHApNOJ^M1nZ^YE9A/V_C^VKCC`pAG5
%!9lAI)l@Ie9$Zd8q?A)J`p?0]P]=?HFu*caJ_:7p7M^`/d1"aRLEmb8956E)<?nK]ck38^kSgju#olo*<n)#ad5^W"e:ah><(?8P
%7*96sWSIu_AVhh1G-aRNnUH;\`qC^0,V*]?K\>?d%GT,8ZdM:M(;7;Bf&U]u5>pWAak\#!CZ'(9P2`r4[i83O>ZGZ#"\cH]DDrk>
%;eud.VMS+<jO%A9Q?d-$DAo[fhQ=TL4B=1i`PC;k,]Q7%\=4*30J(W-,%cq!U:]*G,kMGT)Zm"SYsNZ@]FCVd%,EK?#DIFRHE)/8
%I7JKSrPtXD7jWd:W\.]CDOtnX[,'-c$pW?dLZE>BW65lPE]5:"(RF-"MUa_R`@P+;7+]92r(V`+/A^-ToKPr'XVr8>:t23?P.k>O
%r+g71og^2$/%HU[NN<=3GDfTl;dpOd:,%]!^2YqKFOKR&aPC;T.7u[AEd.#)1^`Xd6VE@YgeHg&1Y>;!dCH<Pbo+$\b+e[bmD+Y)
%QRTQtE]4I>P+?C]O)T-&KNNi<M7X/\D!p5!>*c!ELP!,mi+N^FE-KB(7!T+,B%e(HK+-P[MNAJ&Uu6-jriBk=!d@R:<RJV<+rPD+
%GMbP@/5?m]Qj:fKE,mmBOcj!`jR,9<#cfJE2@/^pH$Uu]2oV2Q8]A.J$)ok(2^B#Z^ERkh>UBVh#T%7&)AGs7(($OL96)t?<6C4=
%\Jm_10n(O\)_OQH,^+&a?(t$?12]#n%pVU6ac5u>r,<\4%>1E8LfFeFQ6_P@\@X"Z;d+4R+W])'`OuKXJJK]B];-LjhTl<nrB8Hm
%0"*UiAOTa'CLT4qdl2i3&YBD@h4W>Ag;ZsG4YHimU17adNG?n@8tNQA\m;P7Fa'h5\gQ>0S\YatQDC`:=ktrNp4m!%[!;n!gZK<K
%gP#^nY!jRL%FP[ua-_q=Li*jKQ*X'^.88MZ:E#oG!\%*Y"E`[Ni`K2G2d0i(M"/$R6&5FHcX!Z#RaJZ3_3&2h$KhWb7=_%(2E,?o
%8aLZ.cVQkWU6<'&:k%L=bRG_nV/a$h8=HA?7fa%@7df\DmQ1!U5Pdo:R%_jQT\L)4b](P^/ul6;OrH;[d`;m>?#:?1Ltk8H&N=Sm
%mU?oqNQ2K!.l/5I3,V>'A'RmOI#juo#329Y@TH^<\;Qmd'ZCNnY>fC<2MSQZ=!2C8VR":8Ek((](Ft#F\FFZDcuDM5Ar6$.3eY+I
%.^Uq?EC7r0=s:D$>?E_A^l:k/e\D1?&5]W=o!]&>kkK",<MnL7gWOb$I+rEr)gf2c'?`Yq^,i@:gH\b2T!O$XX&b-tSG$Ki10<,q
%WG'Ad?e4;6kg41",NcR,DA+[<#uFl*P,4!cEI4ufQPFId1<-d([uo6-&#&O%_%l.AZ,1@e5n/iDgW$dnmW=/"qr\]0]1WmH%6fg&
%Tk4A\UrJl=B=f%2atVR0PIem\.3XZ-f)g[IZOO10J]t(5=J<CCD"E<kq!;>J)<"\nI2QW9Oub(u>7*IMRTAGUZ]0B6Fq;K,\"qpd
%UMSsu`1aGfCsSXtU;\;1]J2T\K5;3P0GtM8kKZ?OAD[j%9a8J1]Q0u$)6@0A$F7pcb1mP^CiajJ?YGO<8q[qlKP[tmW:`K9ld-6?
%jJ>,MmqPTN>c[^_ODUF.8J>;o[OGf2L-`8e//`4nC=CrdKg1lbD;)lEfjp1]]Oq*OKkuBraT8_WCuZC(k+sf@qZ5@egG7<Kes#;u
%i)-8,SZtlqH][&G>"n`tRn&`\j,@hG";@hlD<BGj?!/>Zd8Pn+1W22+TjY,6Yml[h6K2%%mB6J8<!C8l:]?+$(9GP%5-g4$?AK?$
%bmMd=oGM*W&k9C5#i!:/n8)uqm6LT[;?ql7J4O*$4"J0+7^*"^).B#nKp!X]KPeA6akU27[ZRU\Ga]eaOgHI&Hd,'!;T3@pf1(.X
%'aNZZ!@mlCr[j[.URZC+FD]`m\=+@CS+\'2Bc(0GP'ib%/^c3-A6:>9@Rdoe[J?:iOEcW6(6dr)[j(Wl_]ZBWkA.QK39Uac2R80Q
%W%u*\<948MG\q%/NIoRGFDY"R&RQu2+p<JF>@hL8WgSr!YVq/>23"YB/^)nQg=9f_P,aM:OjntaF%\CCYVEOO/EA_$6>BRR1?M!l
%=tPG5J_C+0d0?u9Bqls#UoE<p1GeZ5:brI8)CT6-cre`'JOC`d_J%XLRe9!Ug4ZD]Vn/Y1Mq@SuOuD#s@'kjfBNGmbZ;?dfc!Um5
%.k8Ael([B2)?__@);5@jTQ/?jg@,p,k[F\^A2/E]J2S9d9u7J+lNDWeX0U]j;jE`K2*MtQ?BQ,+oP=[(1\oe`fuZQ(<pXXU-]uP\
%k\QQ/e,,s##Hi-ZL!<)9Z;<0<R[jU#AB8R,X-dJ1,%a1l).8n`O#SYYjpZQq81['A/90?Go1tmBS[JIfibQJLY#3kYE61Z(4E0fN
%X.X9^^<k!4iaeet;MIdug"Auu)^QF0Al@u1$-CI^V_CY"c2_:[YjD1*i/XV,,pF9i%IG?/aNg)=CU'jAZgcOrCoI95i,!dWg`Atq
%iNWuX2%bDFTOToBjr#/NAZNSED!Y1Z&9u=:7Z]I%GR]WA*[V=67`Hc11R__:dEdA`7`NDbl@<h)2?`_p*K*Vs$S`QS`ASfo;m?q%
%7apB)MEOt?L7qH1At2e0@Q1X+09On+nH]/l\/2qW%2PkdUJoYl;]U]h0l7td`"$;kCUBaLRRqcY.jd0mNKaQU@["PqcA43[K@dP7
%0sMNH.MNg7iF3Z=3s87X>XPb&)WA:a-oV%]8\n/"@\*j]P\rdlW@h*-0ISiMcJ7grMg\[Ulup;@N5^Oo0kb"R:;q+1L^Id("#Rdp
%b_F&jL(TZ4h4pb'&>J()JCkElRWh.@2SM[7fa<MZe7#c9P(qd,Bl/fEZ!4)QMhOkJ7V'*0>mLQ\_9PNf??kt*3,G09daW!`4OPC_
%^gPeOVcoO+-X+ut.X5od@IrVjl7?a$k=J<^Y.lEg8n2:.,37*c=Y6Bqgalmd9OX&]_[=:ncRVYT.Lb&X.i:1Y.@_6-@:Pb34G1PU
%Tmn@[elfko+dUR&#/c/uTl*@1_ktSZM!IJB0GHQG.uf5l`.c]A()/[1i/:gEY^(.l!#:2.]Yoc&YaPL--$b?aVDN!A%0;tb_UV1S
%fN\oSK!RdP;]Ra`[@BR8UpiDl)\S!B=J;sENb1."@poW)"@`\tQFjqa16&b>fK<8sWH8h4%`=J)@OQ&41UAdg&qs%I%!a4T_WJs4
%b'k`IRkVFLg[2l!O&uTXP#3&S@<>E]$C\Wdd>2Qg(cGl1BR<Yp2?ct*f0tSWAKc(I;:oi[l:Xqf2Bl1t9UDHWEK*)f'agFH9:AWb
%KhXc^n(%crd-9SRNNM'18[F<P3c&_4C.1_H3-34j>*6%'bn^MfP-CXDb!Eg>fW[\uI;O\T(2d(j3sqI^M_ZFjKhVk0d8hZ3M$L/f
%UTanK7bVje_E(gimg=bCS%Om2)cMZHSrsM9bu:RFhNoX,EE!FQUTiDR+]p-")g3r)Lb)EU&F5Aa$Cg`F\N*)e;aMGP$AAqoTGA8r
%c0OGI-jlH'#:2ET'K-IkK"<\f.&%+t/P8WRQO?hNm"JP]f_>b-fGN_=-7B0Q=Q6Q)dM)eW?T?cMb])2BaV'Bb`J2:mO\e@N'SgPC
%G>5sbau#7-37%^Dd9n)5qD#A\8rrbC[&N==MZE[B4D"m)S$#<(#$Z,P,n+/<LpAnEqY?)&c"hQ7?@f=,`YsPa%>6=A&hRB4FpH[5
%-7onf6.eT(%Wk&g#b0*e!](7<c+.N8#0Tn58Q6?J@7*lTfJO:"/S,'LX@V!N1D/>K-u;LdLD(@["VM!D6t,[=d#W&mCqAQ$hR0)^
%@8;p>eeJO]#dL0^BM%uMF1>rc*BBsTRUj$"@5IUfZjIXT(.LZ=)[i.t(Y4+DZ*5Aua5'nNPji6%$_%c`=0>ZXClo;t`knSbL/lZ]
%KhXYR:iE&3W<&&`'1@gs3/<dI;:tME#jc#W_X:l#@<;<]V0*J1TA(('/JL+]1?K"!%>fa])%)kb0P"sQ_PW^(bYZqY2k33I@5A*c
%b-ESIrYXBM.,-i+IU-KPE>USs6DLR3*JR;;30l[^@5GB\iKM9kL;lNbmi$r*@olc'Rmi8Q+4UNF&pBTkm#+l)Zs5Trjdf>c#<6Yk
%aUe2\c,#EfcJci!fQc5R+QX=(U.+4q&F?-'(M@+l[7E@\HW&/.RXdQ#dEsDoRb6Nnf96Z[(&iNRQ#HIU@2:s%HI@202>\;;F,\aL
%p,0l`*Y!OW!#JhV=6+-!&Nfe,6"aHh$mn,PC@I+-%AAkA'mgD9dkGq.218RYhI9fPRP3aCCC$@E`t^oHP]SdqGPiF`i]-rDn/=_j
%Qkf&`f^'$[jBX!!K?RZ>>oS=:ES&SFKWf(@#l'"n_-#<JG_Qi?W,(n%DK2gh2Q]n4f?l'-)s*N[X^SdE\V=a%*+R.$7c"6jC)c1o
%.e@2)\;$*:?6`]F$WT%#28!A!kIgq%,Q4O"*H)CjL7ATm-m?]eougEUldQWHDJX),%9r14lXHQd/$_#p7VT]H7[+=DHA8gsjTjZ(
%MJ?Gh7,UmWI#iqq@p5X9gAP&CCP5kJKu4;_"NbjtlTf4g&97cRGh+9`a>%TmCP:A[^GMB:I,S%#="nD2dK[h0_$R[SH"@t2HsdP\
%'uh/I7MQPFbsNa'WA1LE2:f<@0s"g!nIuK\&LWQ,1kIUE"%Opgg]?!iY<]FZ?d0^^/9ZB/^DJ$/!j#%B[:[WC]UFB[8_cr1]e\)H
%Ot/T))H(0j)S+Qf!=#\Z`["f/X'$>gb1VD[d[nR_eEU_CJeb[30rNe>%9a3q1AQdHXNl\;=s9rgXMN"IM:L95?j<]e!%+HuY8U;N
%i#Ag;+<+M_N)kpF$]_D3qs4oQOg1p[dLf2hW+rokDhG(K182D-37YeIERG`%3bjJtRSk0>Gb[U*Obk8U;e8pl*QKS6-)90C:PPg&
%5dj+(#suFHQ5-)S>"J\r<!2@)[D;Rec=^MCWKC(+M3jZaKZgl6$(Q;m3dFeClI!HQ%8@;@E7W4.Qt$^XlAA4D?ST"uj&/7[&dX)c
%*j&K.MFp%t!<OHa.!;icV+g0up$4N!3cgQk&?2pSci\,MC5d(W/6=t!N*O+@p&%E5VW*\<)E"Tr1p!loe;_c+E9&_<UikUd79q2c
%p(iO3hG)`MB+4<""PpHp7'/2MCC^$U1RLe>V+L;e5&q#'7.g%e#W7u#XHd3&l:K<Q7\DYtr%7oT`b[Ya\luoVV,*/<DRZK=(We#g
%n7`?3FS7Os%X6:KFL5/!-763>=jESXp^!>"f=BAOL*MVnYgXHEH@h8N_\H$D6QJ3.<OjmIoOqE[+fCaMYH2Rg:*\f&8F@r".@c1!
%es4jT4hiX%EP9:bCUgt'VDE&uTu3`4jq"9X(2R.U>AEN/Bp`NZVUf/($qMC4ipg.[GdRpI.059)9f1Sr?%r7U*t#5/$Vtn2Rni8'
%F4dk)iLDcr8&_=.:t)X=#`_hTdt!-CQ"^CrB?Pp5EMe9qTcR^2Bs9k@q5TZn#c_4YO%4Ip,IfM+iV6tPQQ`6b0!taL4`i&UY-H^F
%&c0Wb<Pd'2=DdIpa%K2o;+<#\_)IDq0&;*r,h?dG8=:i7D!>Q.=UZkkbV!sL<b1G1['HKYV3-cb[R%S8ImK^b$7e86>"IDPdZ\:#
%3%Z%^&$cpN;!G"D$^VXR5BWj1$W]f4P<)PZc?n+T2,5t0PBi<tnY?an//BFp:-kka6BggZQS<-;3_Pnilo'!NF>Z,&MBn/elXYBW
%CfE9-7%81l+g;<4$Vf3P`>_7W=qHrBUMEnSlA?_o_NtsF(52<j<?-r?NHsT8A7nG/=jrNB+\b6RSKLX:H-!GpdZ`XqPTN&&;)mT+
%Zi5?o\+%dQ@Z&W>l-TbgV9`*!d>/t-ZWsc1SPNk]B[SQuN`0ujUpTDE3#^IR;Im4^,,(742/G*MRo.H'SJk5e(csRChj[)J7K^Y)
%4PL2\h3R^hZ,2XL9dm:KUR?Wlk$,K3&CG/Y1L)bG$RA#,C!h=>+l7f>:PueB<&AFNP,,1TB\ZE:E=Id`7(@<4EDoQu2,&+M&qmp;
%6t6]^H-dtebu0*$'"r+[1SQ8g%iZ^=').dRTP\gRo:Zc/.gTnO6\EsEL[!=ORM=VgU-g.dJS\/H_OKBtBP<.Nf63&\%2Te"XpTp'
%B>QKj$XF"<-Fgu\__X2b._U?]#6fVq'H0_)nhX?@k`R6ic^E->B9PDl:hUZHW6ehM=QlLG-ta1QGT8hkb+R+[D]m#_oiQjbXqF(!
%6Dl/=XD94@pfprD-N.pD2iXXITlH_Dea2"<_)R]GNH64!%W>JX'lr.s5_X33K*E$VOBJ>EKAn/Q!YbiE%8=Kd5o1"#EY^K-Gr9[Z
%1pO>@hEjM,N=2GDT^?:V,\Wd?9>(L\`]9Nu)LLU<;oBXX%09&f.ge*m>qG2S'PJ[n>3lgagR?NJpTAl1/d2#7[e&;RYNGk6nsfF)
%Y:a0r9,(nB^A@3]o(Va8hTY`jm$Z!\4oP!M.uV1<kU3!Na1n,)mlnF6rVa4^f$F>;H$OFMqWb$Wr1i67PE1/J*.@@p7mD:Ds0%R3
%_pNtZJ,8V:p;9`gqX)[[rSQStebl6srp\<2T$;W>]\+:hIkDk3GW_E28eiE)((O5FkBQ[mH\M=h9>.C`c2U,=!01^pU9[8a"&;FD
%Bs3>4"i4hXYNN4mr\2[r64#5:Lj#,3M.h@6B;aWDPWf\sM((c_5%c%5_<09qh%Qe.<-:VnWt\8]:@i;R(>?EJYh:uHZ_KUs5C`PL
%B`PlH`kRAi,.__RN._$t6QmLrV!nRrQLT:d9#hILF)4&A85,jGR=@(>r<`7=aq-tdTI1>3fKL`p"H33AKGC,rE>%Dba=HV7E\huA
%b5E[YHoH*;o?oRd*+ruL[kcVif!/oK&_kpNpZtZaB@W^?X!f[:?'p"m1+087ddA6O4T#!VcAFrC.nC&Z$`cB_2hP6-9fSP[d/m2q
%6o`3C5a[=hM<h+lcMD*.@56`C:+Z:ODYq<-iWQY[^L=hA?&i%<hfs'TE??8/"Ut$AW,h_:jh%:X&S&j.Doj=sXST!=]5DpLdZ:fp
%q>Nc?mrSJuB72hqUg`u2#ifIANn0&6DsbO'XtraL1<G:7G7DT)<]PfZNa5tS:;JVB]5-]C+rp1$]aZW%9uDS%gM$pgGjB9g[cg%c
%%qRp2ko@bnGs?)ofcG_n]mB3r4OjX*Io6:]B^LWeW*?a>]^+jt3$<CkhesC\BWIa79:U.dpZD4D6;A0(@sl%PW+jWU86DU.["Dj5
%pG(cMFRL6_==d3VXQ:XZj,kui%;Nj57l\PRq@Z]TACp"@I*/3:B!(@C5XCW9)2Z\OpBUT/Pf6<jd/>Rj4pI4s$Eh%I,!D'R"c7:M
%/3sLY#*D*K//sFN$h)oVaVe;4_]-anh?Dc.9N4Eegj<h[]3bN7ht4#/fTq//Z"(P][BLM).SSD_J?SBlcLeZ6m3N1^1%>k+o[ZOS
%jS!jql<p[g&A.^<1OVut&oaZt>P)!Jo6eua52b4@D"9UiIDWP7guZ$!ks%IQNdc\m4r5OfS'@`_lPW2:/4lE[_Cfu>9L?AUR`l.T
%TrM"@NDoRJied;&3-$-PH@`2eGV\,B)^i6&5V'4p:kC9s`It^HdGIi+r"TIbKukPr'ckT-l(-2E,jcl5q]<=3P$dRTenTVA7#A8N
%Sc@PnGd2M46^V]6[=3JD$-h#PA/YDI('0gh`J"_oOm/Y1G*.RUaD!5]`?6>J?feOpbG>CVk&>G2]e+/LDIYG%/hKQT6U)IogB.MI
%0Hs3,f6`1`W,Q'L<@ET!]='T/G,T_(,Qh+O*Ndjr\$fNeCjR!FN71i7jtZV$97&mjm`F<MoLS?.e5j0e)n#Ra^9$/%K77lEltcML
%*'GrKbQ%pr(3L*$ai=ufF:aEPhY=q<&a$b&Z9'-;FAE`hp5>Chaoa91mg`YV*o%G6q\q*6I<gfqF$*Y'nnJ7JJMaCd_R.kcc"9@<
%lBO_6@>Zg]n,:5cj]e6T0E';oiUiVMq\?e.28,E0GBWmL43LX/[]8eFJ9B=B`MV('N4*7N[Ru3*UY6irde\Q(RNQtbd2'Z/d")j7
%ZW4;)G/pl<`KFE19nN2J?l*IJ]!FkE_HS$_:>OKK#fBd.I2i+WKN[isG(qa.Sour,-(B'uOAgEA9pH&D7JfFn7i_n[DSbe%aAZ0\
%O:$9lo"cZu3/J+N\)?8%fnInRrJ8R[8;ckB=m\,e-CYU$3LIh5^O>FVQ=Hb%>K%4s/q9Il"]KF"T+k^MVN5\k;PEgo/2;XEBhYD!
%Pi?UCgG=jA`OCdBehPQZS*]/"lWS$U][_l##23>HU>"`KBH&;SeCs-@h\<.BKBZB1P.X1ba2J6dRjjDCO4n?*]"R]'I.&Z"=?M#C
%L8=4U6#g),j[7U!O3+"T1knt8=Ah$8;L]"H>5tlY4!D+Chb#o?pE$cu?LT0D:WobZ`L:YH[/B(&1%/tf]BFY#h-'d%P4PR(RU)M?
%jA.2W,1'm3FH<)%R9%PFl]ZJ>;_1NF7%IC.bL'FUPXRR=d4VN:<_B0aa.O6Lndj?#WO?Bg0tq5)qnbTllYU(0`>Y,)7(0d`@F7Em
%_eeu*-1^5_$nCa!]EM2d.',9XQ43W-U7B1L]9jJ@'UG+[=B0u@Cis(>6AsD[&?Q(tBk,X+@8ICjWe$/HWD&4S=MKW$(BYUMZ->!k
%b0A(n#`0\7n,;r=:GT[JGl5X:ajV)K+e^pSfWT5H\#tndH*W*TN]*;dGgC,b%'k`_GH)l/;_M[.VqLdS&>qH=i<YbDQ#g3dft&QO
%Ml!Vsm"U&#3'5JY+dtklesUM7S];GPjuOUh9NnNF3DHN;7C1DcOET.FiIF`,&b::KV"iAuS/#*[>!HYYK.1c90?K05ec*Ol\;.&p
%Kh#4+k-GcF9!ncJ"6p<$Hreub;WE0'aMHB"#M4I?h-h5h.G,M]'I0eFRc[\[DAe&]>@,rPQ?%`GRF%!6+HY@n/fQF<0925Zac_)"
%`o4qo=uBT_XBP*V3N1I35IN]/=F^:98fO*-a4b[TW@]I@M#H`/-k2(N4DS9sIa[GTThI@'`jacT$Bl!sIMN7M6?rMDm+2aHEf6t_
%X7pY\bC.9+13saGZcupW[_-R@h`H6fjs!eg1apu%&@UgNnmY9n9P,bG&IYH%;!nWur+":m2tbYRA4q*7FB?1t"3Z%LqEPqg\@B#H
%]+5=HG'pU5J*QkGNe]Wq:h(`AnU+u(.;"ij7n25A(<=o0H8gMY4n7Kt,rK"XD(9E\Rr#"`B%*AJF9<icedm_>lbZ8olV:S&;TI:g
%a5-A*g9>8$W8\)$a(5.iP9#l8>>joPhmL%-]0<W<=4bUEb_/#f5=-QM/sO<rhrV!*obCYrbK7&Rqb]kOPn9$=0?)7>lT85iOX<.Z
%%W9?oS</=^Z$j+MX-PiFmPNpm*m7Z-Da<jd=iXOsYJEpp:d.e)rOUr>*C%o2rra`37Fl^CFgs,Nd@W\Rc"()[VC-#A%o$@TK^,80
%!"u0(HX$3aL.ZGHqI*V"boCa]C,0k]Se-L]<8SgmO+Y,XGOSRU%,PjSIh[1>ac/jIl\PBamU!#Z-o3D'CWDrbO<l!cijQbkm\:3H
%DY23&]o-^[pWoOI)nGaC%/SDc\)qm?&B\!q<N,u1?+=,K(eIE7,0\;tb^%tZ'38&ukF487.HG5S8<OrG_PA)W&tMFDZ1XB,MS4^C
%8%lC5kD7Q'kZY@[hHh`pBWbSE4P=KN6rNtALhn_5+)4*G[\u%hJPUHEo4HN@W,)@fLAa&^\ZIc3;KnTRG#GG[<RgqVP;?fJjg&&c
%>.od0U;ks"/c1SUVJqt>dEO+s\N%_)>Zl+JTc2.F3fH(uO@Ee%:O^5S)TsQ]lb7qBF,Po)TQfj53@E(d2(j;O?l\s04K52H+E>bd
%Etur]j=RuV*pR'VbAP`[Wd[2M9eB?+o^4='LDL_T;*osi9HK*6Lt-Ps2)/o2b-4:*:E*QpWMV\Nd)Kb!\#giFUN+H^pZXV$rMKE?
%dg#.SJuY>G?;,UE'@soV9L@QsjYg3L!Te%djd'+"Knt-liRER]r"=dXRka$9P#X;V:g!'neK41i#JWDq[:D0S1HTSc<c^sd5dLlP
%_=opps$\miCfc:B%1UJYN1tIq[c"U_,/1fRGMr16,drcJk65qYUAS"LmhWU:HEBesptP7bqo/Mnp+7/p"Zo2>(el6.>`F;:7)Z,-
%@5WC]<?k<c_SQ/`h+e$G]#E&rs13+2#jR]jk3`]RUHl7[.Cscq.:9TtL:E>7d'R+$U"t@(_AD&qoG7'E87Ai_X)((Gn);7F:%a,>
%'>XIFnhVl75XdR8?PLb"PWa=Y?2=K.7Q6qKZBh.\5P+P;Dr&5"hL^Nt0\ae>D:$n7$tC"^eWpG%p)nV6e;/B-*rC;$ajuVH4k[L#
%1l3Z=s5iZ3/8m1gbYLmL@[*e):rR+/.96g]BfWW24M-CLF1k[TX-c%t"O6cVI;#W[^NT6R803o2Lu!D>i?O\sI7,U.EYfN=NuAUn
%-.btI5n7)O3t:..R5!8JM%#fHRcC&i"UNXtLWrP:gq1&B29.84CgLJ[RtgJWRp7!JX8g=P6E%?FD'@-J>3LhgY-#OY+kX1@P?+%r
%X"oZ9!U$Dh70Dj;o7\Y=\60<*a<e;)',B-k,S,[(%*..!UX8'J7ck/pfd7TK8EFN^Uu1u6\J:3WZ+#AN1YIcj[ID&oG.]+g`\`/&
%aCJ7E&r@mNVJ_phD?)MpasdBL?Tdgn&2GY<,=5o)_P,Zf41NJJ,1gn_qk?sff]71Z9ld>S)QDbq(WU>I+so_?k/N8eZVgJbejNT?
%/BOZJg@),QeHolkA.&aj<OpaDT1gCaird0uo7I9%<O7)JZS&JSZMMXBs'j6959MUZD;8ft$mtV3!,!rJ14kfHQ/:prVn-<,I.U(0
%P6Z&Y-Dr4_,a43K4R!@++&$RO=?JL7BWAHO,VDsbbk0'=b$XNjJjmsja!N0"8EYWlD#?/;8Q/7\@p.Qg/`to/<<"n?4.BLq2'AYb
%E%6Nk(_/U(a5lLc+S4.'+8m/!-9"`=,\iJJa)&Ya_\kcfN9\?se$bQ.'GiWTOod5`6;;Wj#urN[Cc9oRN@jdL$XjH%-q)Z1ZZWQ>
%d8XYBgEJN#r!pqp55/3`N6NV!""HWYJAJ5s(EMEg.JgkR+&,l0JNse^l;OWjq\*Bj=mpKRRp$7BoLK[(e8*;^L2[tMVEmDP6CrXO
%n4:MJ1c5#KdWemFLD8\i)%Y,s);]sJBb9ed'+bmZL7lGpl$<dECgX@\@KQ?^+$bG'Zs(GY0OHphT<3DtDQ[_RPYr")JNEV\1(Jcs
%T%lJ*7-R[E7[4]i$6`)d&mtFK$:s0"ERE;?(QUI>OHCtIgP:]3MnK.O9A+Ko$kXbe#CGYM_cDX;o;0tdqpRij<LnR/-;*gD@GI*+
%H3a`h2Ko1R(LM"oj'WV\=D_Ek8bBLo`o!GhaFjlnib]HjXRTlWqMR7@;./&d;"pDU6sa/9cXLR>q4j@qd8j/t8Q92.[AcRs;+DKJ
%mu)&#"UjCa7ab=i)-^4sKoMJgjUF,BW5h2W2TsCaT:>J%2>RNZ<\nEq,)nN87!#:.Tdql[ga2J)CSQ2F6*dCM.gr=gl8T7/+I1FW
%XigRJ2d4@?90p`Eqstj$"dKl$U&,Huc-fg`K'T[9(5JXG,XaUMH]CN*6^i>a/JL'\kN=c"E5JpJCM;,`bO"9Ae"h#Db"Ki7fA,/J
%FX\ogq]JOH8:W&S5,cn>b&n0WA#,M&b&drTa+]i(r%XItmU@i4;^'"TcWSU%jE1U_e]9iH74Ph+%0o,21^8=$=n`F48(1bRT(_WR
%s#YSCHPmW371Da90NYYk4d,qP+ues$A"*'ogVJc7j@,Gn4dmh<`=4).QZ9@P0!AllX;\m/?=^[QXQDg1:P&nNTl0osl:]4^)740u
%hDK]k_7#Fk(0=e;g^st*`Z@CsRe5;fNjd(6qgR+DQm27Irr$U2!=KUec(g'eW%LCE=Nl[t(cA%92/In]27'Lq-Cb'E<FN1^%AQE$
%A^+PIoi*"XJEYZ5r-\2Z<QNZX?'/X^/IWfU^/R3Y*9B8^WI%Lgnu+i]9NgGf,=2dtb09j5@:uC!MEZhYqR&380f%u:2]!"G.`,Za
%doWQg9M4!5kQ-b7n=?BS!&,md*Qc<@I*5[BbYgms:B4RaCnj\sCN*OJ4e"2Xm]2C>c'c`-UO9BE#>!=N\!(Wb,t6]l/aiW_SGGNY
%*A^8:Aa.OQLRK49E(da]`Q=1@\d,MhQE>*(@"s8nK3as6nnY"7KW.FVQ!p1D,CQ'&;)2UVB>m#q)30<C5A7&-/hXkmN59tgZ>94F
%]\QH0<lIbo+E')D.Z0,3?mki7>k?+5H_H=e"5Gug#+sGVRX;%<gTDoN@Tn^oKGY<hpDVQe%Aun-MrtbX^I_;E1'3;%o?Tfh_<&L#
%+@(aJ+9^1eNCfCtU=$.NX2Salet\!5+\B7jW3ljWJ7,4^<,0RrG&d9K&#ueo_%dBTe;CI`dCK*CNj>ZK<uLuc_Gj2jVMRU.%CYu>
%*_hWW)k,hi4YRGl\lBm+U,Rn;=bIV9hSS'<aqmZ2jK5R"I?;-afdi6>UI%+2@RPH/5\cnc.*upOG<S?Q[b]%*1mjVC<MDK$(4%kJ
%XSII<#b/<Z=_t@E/EA%MR4+PZ?:/q@W3o)IeYOk&-C611eRW6[`]Kq(KgpFo/2RsEWWqd-&pGeq_UWpbrC7r>Oh/al*0Td"i(=_G
%'P+P.(H7T0rk,gnVTS&\/`^[4]Z">,P/DD>:/tcO:qS)W>R$,-GRKh8f[Ei!p8BmN<^C:OS'*ean/tW8mBmD/1FAV[Chg#U")[m%
%LmY:CrB/f-0poF$9.$Mu7R3A@fXLD9&TlrKNM`0Xe6jkq7[7fR@e[/'[s5e5?=d-5Me8R]lDPk4=CPjt9tIE_E\P%%M)mcU!d@NW
%%^'o7PBf,kmWsfG<DmkD7(.?:`&1+^7@$i5H:DA,PS&,F":p6l,UNd%47[*OmCb\!a:X5o[=P?H#iK6npZ"E[M?WaMT/$U8X;P28
%-?,.>!;rFgZ)D:U[BbZ?=T'(/&#h#?>aRo]b%,kgeBBpi@l]aom1!1S6h[<6pfB=r%bkah<eDu41tm0^=^uT[><l*<BsT0L`uYPT
%7@-r&7WTM@''m3eY9jPL'-OkjmE@nD;h#35l:]_S:H73`X)/bc&t@r&aNSL=KgE8UCt\3AT`r):ZOO--%17!iKT_$5pbi:NMV`99
%lAs@Efm-Er[&&?=QD@AOlIl5u'qRr\WJdf0Nno"PMq'WIPEZmQ4"tk*ign+]0:no?5_CE[77,dG;k@1W/Q>NUN?5Q_Y3BpICa@[C
%^p[010=ads<*M64-F)S,isgY>TOe6rL+m<Lfb.,eHQ`CEp%O)YBTY*J(W4'I%!E#iB%(C)ZZfgm6,S=(,32<9S(s51X<u13DhC-1
%(J[.U4[f\(pQc$n<J_b?M;!*o,O=Gj(m@%5U+f^*?cfX=%&kEIF&/C>&Gm_FIR9\JgKJ4#]O"b.fF4!OZPK9;Jj=$MGDZWN!njVD
%W[MEhoZhtp2m&*#)94("`KG;2Wm["u:+];R%Mi/bDP9pXYhJXr#`VB!C_i3;$d.-ij#[l^dsY(r*8Z9M>t0%Cit6WK8=a9G@ZN)Q
%W-/@GSo6AS//dpQaEkS7Asp[")&]5:9YH,uN(ku@ImZApIZPhQ2n>q9O&o93#mSoC!GdlpN$2@#*SCUSd2+@6HLsc_'[NE%D;ef.
%]No=c`O%\-#PBM-C)-H<)<;b/(949mQgV/_N[UjZ4&N)1<0iT]'<jrKk=*t`2=Np&f/"_2GY5N-VnC)WpN2OCc50,,SCLC+Zqigs
%4nZil,V5O-993P%&BgMV_;4Z\ZU@1cDgMl3#`)sT3Hf\R0W(SY+tWJ`,q`@&!j;0KStR[J,`[jB9ZFA?R4UQd8G8#K;l>m[hfW`F
%@&1f]Xq`O-TitpJ,fpQX"a'Aj,hF7kII$"?Bqp+CO;c2u`NKM2!_9BLW.T&0h.3l!9)IeX2hmB)cOCu:?l)Ukc&S/k,KEpW*9>`_
%Yf,k\Zg_faNGe"loVRQ'(C-]n=N2Oua;R-t[Atmd8W24B`;'7(<..Q!02Y1n$A#-.'h$GmXh;U-j%0*<=Tn"@E\YAhE"Zu9%E/iE
%D92E/C@<pVXHrS*,RQbs=\dYGn"P,u)Qas%::/C/OXd?&o'B=;\n<'s8q37K[%h7RCg?]S0@85R$Y3B[F"MPI(slY\qs)k-C$[1R
%@F8EiT$>(n3OY&X"r6%#;E(jJSh(^5kqWEN["(2P=O1"pR;n?(^hYM(gA!c-2;?3HL;H7?W?P<b]1o3s4PnHeT?X7.-$c+G&@AMT
%(Ji;apguVcNm?7-0_uf3m2+[SbYS?c7@8M?-Oj!@I!&4:ltQ03LrZ*U%34u+jITF3MPjO0*g=e.(q6?0BduXbKa<#:A(7ICXAN$0
%/GgL3M`il1lM#Y<US/t(..qsu'q1HG:ST6#)fG^=h8'-r=mYu&c%^E,)4(YJTX@jZ]Ua/lK2'h(2kpM+;s:1reE5Rdg5.\Qb7%UU
%Vc0%Z%p,b@KbKL8d9.!i+s5UI>DC6s$H^N:AclZ4cc&%(Vod;8iHF_OC2NM-&1Id`5KLu',+N#&TuBV^@Eu<*kN623.#st#=S/tC
%6rQ+l^hnkG"1[>':BYqmI]RVh2&CJZ0)Aj:SdkOE2PFirA>38F4g8XJDW:s>B=ZY.(+3=*8d`$+L!.J$(f?&6lQ/$"8(.L^E`t%]
%#[-Q1(?l_AF+#dO6lr+Wkm-qb0hp5)MkcouohQd=2]Tb<oScPa*q.?Zi.X63;btcl)ig)`[o290D"_(#G:LIQk55il0h[a_9mXQ,
%X0.@5S:].4V')&koX:b3En#_=3moL6O/G(NP9gZ4h+ui/m7[2]gGqA'nAeb[;8hoc;l=Q7[XCS;N3EPF:ut,j_@S:Bb"ds^S43T]
%"c[t6GdF)I[V=,UZ73Y2Pg:UC,2)0^`)p.&33+S+4YY%5mPg'4L`3D?W@>df02.do$R\]#cd<BSU\R-TD`#j9X=WdIP:h$4Nn"eZ
%AYKrZD";HZZ8a&DY[a<i8S'@*YEeB=:Si,p&AmO+E2>/Wdg#Cj:Qcn<QR"s5^@g:REV)>)R9U+>+'NTLJ]1Jq7F2$c\X!P8.A&IK
%;Viu%;(f:/&0PP"(=fZ[@gCZ^$pdq.!#Zg[@9S-H)l(`dWq/k2O9V`h:SR&WEt&ai-,S%S3Z((^9Fo_7'jC*D9c(W,HGo>%@8spk
%@QSI*4(D8j/8A.nFi#7>bga*+U)PRL:MGZDoG,OfWBJT2b(5WGRQPD4Pf-*)p(VgB8r><<dPqG%>-uZQG,"g+W9g*=JQJCg[4F.c
%BaW^TZ8b9I_]k#ZKN6(QK;h"FToE0?73um,1jPa:72R')^ln!:6?Q?7ZY/@Y[X]cbC+Y.d\Q-%!lTph\)p-TNP9KZo4$&^65#%oH
%>';Bgrk?[d,^]"p4JF5fmm1umUZsIVFXp/%h&T<<XNd-'$S]-V15uYVgY`k]$OY^9m(g\hMXJ?53GIFnq6e&"\]?rB[P=0<Q2'q:
%b.F$]$(?&aYV1KfqpD9UX9XE-Y0j4+Z#9&ObLQlDSkcZ*qMBoJF:sQO)`(20<5JtDIKp-EZqVe\59*GVZl?oXki+J))S2,+`(pR+
%]K/uT"QapP9l2A:Kjo:HP:1Z6Ws71T3K>s(J"nraD0I.Ck1JbDd.]m.gn7j?B`0W..tiPWeHA93b:";`3,_-EcN)r$W@P"YW$U']
%7Oe,4/YiRG(,7I_CPuGS.$-9PVrBq>JLCtY%u02mb_)3Ej'LU@$ZC6riTb+peb4G$R>.Zn"QJZK^Kiu$[\%e`9AS/Z9Qj(kOp2^P
%oEJ"<^k"6o]%*fn&4THSDInCjWLRq0p]2m;B"eOd[&H1k5BWZsJ03cf5=Y%uAqrdL9&WBLV/fg!0UQ"l?6u/fNeA$d%Z2"n7Q]S5
%Tk'B:^+ajQS(L'WU?%0B]S5JTQC)^I,WVL&+>s28k&+bU$INK`r\g,q6M"=5d).'%0hELXdbt"o\[L8>9aO\U&<L$K8sE]t#b`?m
%EY^fG(@j-r%pGJ*O:@uDLmZ=;_GhnX/9ms5j;&Lj4r6l]I.m9I74i-rA?cqr\piAq`OVb!#.Z]FO7o:r5aWOJPZ,=#R#(,LQXlHF
%`GP)r4XUuqa[`:Y4*s?tYm\4IL]^MoI\UPX%Fp)s7mUg'"0?B;Cg0J&0<VGh%mi2:Q.<N'UU-/G(##(!d138i=.cUB@OcK-4p;r_
%9`PtbGHB?'Y[9u'$=s)8U4>=3kTlb)^Y05=pFmNW=Z()$TL[6H72Udnfg>9GZ>9;5#IO_g9j5"_WEXrem`Sq]$V`td41mQ+BfbIj
%JM?juE+cK]l8Y<]!gP#3f8_sjF;.;mnoS)U66h8\T=GA*+W&aH::S^+73kW2:)(6\FP!Ff1K(/KK$,PI$"W_M!K!5,n70Y_csrPk
%p+;BGD3X[c#E,Ph1$c6e+t+4O5^37\PBM\#d=<T$%'o:nk_e3"6C9$/@aYf#U4]fV3/K5'B.WaqTOV-s>nF?Ult2QZUo7juDHQDV
%'[t\>V2ZOUO?#4ENZR.>lDP&JN/0"r2;sUC&>,F$M<Gs3ej-Q7G^^P_A@#eeC-g'Po&?qY8Fkr$Kk!o!E5V&-OW9=)(SQ+CMEp_/
%S8EGep5"KQqCHZ9&n)1a+\>Ua[kN,C73*t)Pr$1#A.]5S^;s!aJtnL=bTJI.V5%oT$FP(Xp-E'!bZDq"]1"A2]3c;so0_4"[f0j'
%-](<Wjjp#N'6#1_e`o_]+\]QQ91:J=.NR9tCg3=*O(-'eC0+ufJaG&gN8;qh\X=q*6t.4lY%>oB/B;'/:-IOB%(;W`7@KL%';INi
%/f0F#*Lj]s%Vp:jKKZuUR8,HIeYgJ(j"25%[`C(r8jW'!g<ghC!uY.0cuf]M9JF?u>S&1;<P'RtJg#B]H59SK[P538<CB\I2L/.?
%!fl!7RZ1I<noNW8=g_A(m:*b_AlL@><*9K*S#=kKYu`M]"*(^B^]6;nn<t;DX(Tu,8shW+4`[i&ZKo^/mmnlUEm`m8X.Dsg>GUak
%?=02WWJ0*t#W>qh4!ar87T14B295iEdX0>pDADDmHY=0B(%q@R0J@O4X1u1[2qA]5P]\iD>Gu7:]/,.!4ER?qSfB>'AT9?=H>I:%
%9gEq_D0Vg,mj>p0"0q\8`=p2N%rAJ68I[#qN>Fok3FP@"pf/h>F"1WRm73@LO3AefET3GRiTd1,?BGKJ'mK'(i0Q$gZ7(P0V__+)
%@#!gM#;Xt$5'Y^ud$QFB4'6a!Xqa&mHGF?XHf>pl2I<-oTF2ftcAc,UB@2kF=Gst5@2^`mfpIHV7.Wi<,GJBX#H1maA,FI+$-u^O
%>=)hOYfB_DaO2u)Pbmn6R(8DpK)U((ICI.)$[bH=2,Abli><U'?'YsE<b+#5$?PNn9qJ\.DFH?j>4b-GW'MoQ`]![*<L7r$<0A2:
%Bo%X2Dkm2-A:]sQa(FWn6RB-k;::Ea-#;%k2MudKX]ieDK9hTuR&[b6)G7Bh/S$lHTEV*E<6*TL`^Mll^s-u',?1^0H!']ZdKU+b
%e@H=+/ra0cYc!e`C<?N\kU7Fqg1\AJ'q#B*hL__T[4_Xb9$(0ZPN)#ai27&9)<9]tK#]._C:P:]=AdJ?]9S73$Ps1kQ,u$Dk5su?
%nA8@"T%>anQ:kF][)IsDF-hZe5PpJ@lL\c.]$#"e#Z%kA[$g%"8deYpPM<T6[eXK[Cp:Tue?t#WTEORk\ln6:-W;ZOd)3;#!OS(7
%of19ld-"GMkOMU.56m@&$u?V^N5d@dX\".ni`15F&q7uGo9L*6<F(`/@M4BpCTgY)=^3l==Kg,`48A<)C8[Z-KObmrKb;fSZE+=?
%5A/qPeKY^s'S9gA"s9iYZm/Y/H@RED]I&Q$Y<(N[EDK3SGU"&7Zd6+7mC5\jSie)(bb'b_h-n<Z7t9f^F]nJG+eC5:A[!>4^f=S\
%%'5<_)Jt=8Ic#MW<=0E]S)!!eqYZr]Z*&t@<.njE`[g\s4d8+[=Z^o;rRBZ'4[g?Fnm^pda1ah(7t;GNg#/Y"9Re.m(l'D2*e?.&
%!7-re"X6[SjA-Nij>4@OZGoI:np9,u&:=kZrQ\[aL9Eio<?4+ddZ1/6RPY'.7^AQ9l?m"769HdU;I7bN0-O0p-)X$;2_t0O_T<EQ
%d=,%:5LD!iQI0k+6JG$ki6BTsOEBjSXTMj<WK)C?-G7<8GsRNc3;TKIhTW0%A2ChOH0bVp.]?)eOQ/+N$F#Fr\O4V)%mXq*S4eL0
%2,\)b(_u/X/\H%m@J&3V/0"J?aX>>o`3dqqj(0]39pX:G:HAl8e,pDR*g2mOC;C0Snah=.1>fVG^H4pSS"#=USek[M2S,ipUDDhf
%E*[2YFBsR&`OH309[RRkajL?%1`P?9hd6>sgtJFi2KhWm:]W4Sm,9@Yge"48[A)qd&8$u]l\[(Nc$XMc4[L:WBU*%i2_]N-8Qpd[
%j$fG"a(?,hp\5Y:nP11W_jBJAXY7Ar$r040@]pSSbXPl9HYIG=*e*J#R%O.K_t(Df3bj]lJK$uMF8]'!9[kWg4UI*797\?Zi7T%M
%#8[/l*Qg$QK-LV!k9d;!iPcGQkq!ek$no3E2ZME/,D[CQ;9]IIL1T1`6jjfuH=TdYGCM9Yo=k*Ba;/gGJt4YhT2,c?S13VZ=s.XQ
%nu/>Y9hBKLP:j7R!Etl79PU`r]D'[M3t;a$n$)F.9//%3!1:a`R1sdaB=o_8&<>;XJ1\0;*UV?tCZ%Rc!aV"U@Z5;(-VTlR]=6A[
%H>pc8OonXdB+QWdUl<u?j3]Yp8tE%C6l[cTZ1R=8OH8NAVX^P8*D"^(-(6SC3#=Q"DWfi&><_E$$_Hq5i"+SdeTu6MTb.L'5TcRh
%)G2aIfHM"7EXsQl>3Q/VpT8%moI/'j?]S7d`j-GL+6.oX+e.t%(OGO>&)!$'mr9&LV+=#cV*U]47`EE^?B:[8KmD7U::MENd"4P=
%iPdR=H8;MYSU5Ud!$k;\1d'o\7l9GIkcA.tRq3jEeIs')$[m96a?e"p7gWY+dfnU/398JM;-(HH*#44S9ep:-<.o(0H:IAu'^QP0
%h!5:'D<H/ceat:Eech2c6@guLf+Y]Rb*=5L=bX\5;DiBUr)&qQb65*8GA'eZhLh[%KgjS<o"JE]+f`_?rJ'Lcg#,9?@&]o6m#Q.l
%]W/4Q?HG?[,e;kaH*BJ99f@u`/J*,QelPNu0Yk*C?^Cp#@,<srT@n8INi!EbpjmVblY6q,PM-$R-FVAOi,Ke[(qU5;Bqd^f=$?T8
%Ett/IU5?,'Eq".pC'#[(pH]Z/9>mXDjh;]":M'+WTn5BZ9HG/gA2P8KeA;i$C1)kE!!de+n;EL:/MnLFpjldW5!M\M=7DA;_!$MO
%Mp[?o>ZGcK?L6_j<EB#pF`<9CnAS.1c5kG]k8mq\<.`[PqmS."]NISi.%e)e-IKN,CZSM9T6.Q5NqPkgYQ4s&F*'3`7qOaHkpILV
%Ad/@5?K>u]F0]F\fLBY!k^A<-o;K6!+WVf[W@7M0cFC4._0Tkr-VN@q>fuWMdt\`thVDr$]9h;C1g9(*/!u?0d1X_Klp:3YQ+/$m
%Ns_FtR`>ZFVA/C.aJEFim"NPcYVJdeiPY-'=;FZ=]<*(M&'V@'\?^%1&&hkMDaZ"\Hh0DmdZA;Wp'AB8=-ja09J_`:)E`+LrG2B>
%J7FOuYO$sH+kHk(.W1DZQb,V-dcJ6(IO(G;.`ptdWWJ-.n\EI&b>V)ufqV2)&_>sQ:1]I!=/Rat9U19sis2%C?^M&<XA4prFCB32
%Y"m1R':IN(n4MKs@KrDq&jp!<W<#XKmUlL2G9APJ5.J"qTDe]OMuRk]cThBh2q(jC\pX28p$;(]rVaj_c0=nt8j>K;o@`5/rj+gp
%?CkDl^,i"`8EE>js88YNkS"pH^\Hc_T=j=dLSJfFn:+gCLen%2s67:2fagU;kdO(^om_al=7_cmpqtn+>2+#7IpM\BKPslD#%odp
%Cmb%/5:iGAFM)@(rcEu=rn[K*-906P+3(3%cY'!R`L>t@2W#V#mkLX6&(;Bcc=-OKJEhW(dMkTUDO^8&q5\N#ioAeQ!T^.uGt7Uc
%r6)<Lb^Ve#s-nLehWo-,`*Fb/2B^RlR!6"a>SHFZ5G/C\,m4ISDA/@MC"#.&<6LgOKa"Mk9keJ(*ms!%hn5;RaktJ!$[6JY1Q5CU
%`5e.S]$5RirS,!03%rRi9rq*(jDE23Gi=(:EF(`s[-PAC(&jnd@GZ%s54ALGm@+9iDQM=X%djq2n+5Bgh4:;/B3Nl5VWE/sRJ_0Q
%bj=m22`(>Lf^.%11eA25m9'ZSnj$eIe2a/1<Pn2G('ci(hsT0Mo)>]Y@qPIiD/Ms)CR/g6j`V_Olqb>[OF'C.gGn'IMgONC"l^V1
%%2Q'T5%L-oPnh.+6@O;Tc<&P^?(N]q:qV*>\%6U@\Gt\U^6%u!\N6O^>stoHDJ:7Y^*R-G7eXLVjX]\log?=",PU&OG#4NX_#NY9
%o@X:*K!THUM`69U+DDg8RHM&_f4F`;>h_7TNTo!sS':(F6PEc-)1lgGSNeeOmuarIo7)eWe)'s'S!t*L>eK/Nih+Y>0tf+-j`PQ%
%s4B@Olq[)tk6[d`'-Tn-O9\?pmIK:AEkKab9@`<%:N)KXKk?PChgJ&0pt^FE^%E1_[p(loJ4mSR]3UF?Da;ia[iUdo5[EhBL54jU
%a7dki^A#&5@gf^UKtI)(n]&:,oP>RrQ:M1KhB_"Jbl5GTgBYUO+2)pZ9pQ%H"6AslaV#\#`U5\bOF5m;HQU,,jXqO$o%i;R4eTdi
%ddb*kF3eU.?=]?d3UeD-[CNW;X<(uCYZ=g0I?_^P)J-fV3^kI*IIuj1nUtoP&D$6iRfCj?IdtPQbqICLhOIkWSm;;?o^@n?N6*WW
%^-2GmkSKlK>b>=$q<2I`Ieq10Q`i(AE-65RMgp3JDn,FLr6$H!AlY&;Wu&5.fH+3B3:)$81#Ch"(/o2"_Y_$a2sbFOG.J+H=.`c(
%rdOjOS,)fM4]=@b^uaI$oTRV8j55PVrpo[\rTjJC4.i#=kU4.75GKI<pu8d'T3],kje(.QI)B<>I.Xb[?(>9IJ,*op_<\G2?f.B&
%cecs.lMBT82(u^-4+DC$.aMTeqSdA*Du*i#?T12uGKR\ug$mJ0j'5p]f9>gXHHk=g\--#"YJ<rWh<\kmIb`;(+!7Zo@G'"b+3n3K
%I(Q'sHJNI_k1e@k5C\$dTf7/R@s-suhgG*.*/6+VNaKep^5QY&-OjF:\+fFZeV=(^U;uQRe^shLqXWdtX4N]Ak'R$ulCjW[kgMIq
%b5QL.G4YZecE48K[r#F([3bD+p%?q?cVH3$T"b0faLC%&=M4/old4CuEddf_lgl\Ae1Q-MmTa(HIWK](ntD=gdA?;Wh&jtg:Uc;=
%e^]`2\af(#\pSqr]9bH(J)/VRji*:h@6Yk)gUm.OanM_5EII]`?I(EGbP$AMqMgEX6Tk]nlG;3kajWJgD:)J@qO?B[%PJE,QOaPO
%eHUf0*c%j*IeER6jlrtP:VQ`"m,aNSD<fL.p#j.1>]euj]@6)0S#bia?0R\>npG_&Fn+;<pLcG>VTT4U$S!ZF^O]bio(8EHNt3VM
%S`mrLA@H?Fg&$t=3h5R92,8>P>bB6OnG-]uBAXfVG5$1BE45XoS_LBom,?W8K3dh_Zo]8p%S+.KdI(t\qtiiT*fffq<MB<-VS-JZ
%mGk5,ZRT8cWo:9j?G@K'/BHj&%'qWd=/RU/#7o%nMOo9FH?&W0%3#)ufCNj?jSU_Cd1<q!78I7'hQk)kW^kP12K[tp`'S9;nDq/N
%HR22@j)I$cH2dPW2#m1;r9*mj+!Wi0mChR&\'.:Qn?Mh8ErNtuNuME[I-S=(\__QpPUdiV9Ab5CIWi81Bm=oDrpmP)BLAEgV2qM\
%^,l5Tm.+SMC%\XC4$C.Mjeh][EUDd,kdS4,'1?uV5!R_p1Ti?ZXDZ9YpAAGoJAB:-=(aI)%rQ![Iefh$eZ6/.ONW++07Ut_]Y/CP
%lQ>eUEcQGKZ"^0(i+]oCZ&HBmjlp-u1dZ58Bl&(jiu[VQ3WJO%P:(=Vs8)Z0om%X]ZJ2t^/n_B.ZqpVrjRr9)T:K59qJ`W]HOY44
%6eK\Rp,3Db?(^g4d\?Ia*I;Fs]\gDOBV"u)f<bE1<:8HiYe_7OQal!ci1``J.;\4c6XI*!+4>'$iLtJ'l9feaK?/d2CtV5Uo'#M8
%bo5ZgmtpMAp?qk8G]J4UoBjN]bnc:MDth<^oB9P)PMAYu`&k]fGF=,Fq+cEdHN!#*4Ntk<d)oW6I)H73nb_qjDoeP2pkTGEiqje=
%_+/nB&`6bfi?]P#O#O5D#J]cgFU;C5P79FgK4"E3(I%VJhm$5f^[TdV>D!H8iI*D3*W3cm3H#r9_B7?d0-fWN=gcqg33TK6X?lR?
%l1t/*%r^pj3Kd%u$_G&E3o=I/^AWaU48`qTqON'+c0Ogo?X-m^CA-bTV;]]Y*pjrT@:OV3rQVE#D&no-bBJ@$g[uRYa2o"KPW&:"
%IIBh@[N.I^$X#YqaDQ4_OY(+L0n9,aldO>+O6>Woo]*:$=(d#sqY77,=6HJ?+((YSqY9@PjRPSacbX^H0V'4XB*ZnR^P+%K3nna+
%3S;Y!?!/Wrr&^h>o;@T!Zc0>5VD:jbqK29mB,@a1Z)ITC7lJionr+sMj)*/BJ,><d_Lok5cLALep9TeQPV"Bjj24V2+27dCo]</s
%>^s!EJk$11fJ)TtkO2g+]DIkaSlU0H^\Z]/Zb$!.*UI,n(g[],Q\48Y^9]E8/7Nj$.h(eu#K+a$n8^4q*"4J*_oomcZ7dTPKAkot
%$nmZ#Q(Ca@cd!Ah51]n_?<`M_>2&@*fd(at_XccD'Hc+@oU%/XIKM%-J.N2UMOfPNgj($]QM7WL5`4r[BY2#04uN'1PGM-HTABGE
%jQo0ZqdFR$iC3RH3UT?YG("FZ$FH[S4D+!Y#.]0<4m\/hrJhAPVPcjsHAD6@+>b)E9oh/*T7nXhU30ZfG.gF^IS*%42g&`YMR4]2
%H]e/i!VZ@Fk+_m0D#X=%jj3a!(2@%bg"msg2Up(.A&cL:0s2NF(N3Gc*`KE#Hcj<^<T)CC-0j#*C/J43YXO=nonZ5i'?NPMqW=:9
%:N%p+Y"rDA$tIqZV+WlDF;D(;]r=6.]ki+<IWb<UJeA%]lgp=,J,/k16s&9:]KEh%n_],bS+N0l\"tOqFcSEJ2TB"ibrj_4T7*+s
%s+,a1Qa>oE=fqG6Ha%X?mJ:GkjMK05[!(s;[jSA^IX(Cif!ZqJ-Er72^E:2GPRb(8H0-'+EsI<S+c62NFQ5XUHZ+8ZY3cGT$0F^r
%%Ell-j[QrHU,.k054)$ae5N%+4E\@#TGd+'B(/4Y3ZA:Z?IO&R!?^s;8CojM7Jibm*H\%MINsW$nV9$UrQ/U&ELl(1=muq.j#ajc
%*"p88,:Do@0YSJdEJK5;h;&m>HrAa.F53nBnW5H=)k5k2@=1!la$[`=@;jrWGP!Q#2t!FEq<n\8h*),eo>SFJiqT[iR1HVPma(e*
%TQdZ-,N>3YPF"3UkFZ%ND)iHVpYIq`]_Qt0JFE9qs2WaC?b\ch^"`Z#h]![/jjiNQB/_IcEji(_EcBhVcd"Ha;-7-&BW$Cj8".WQ
%(VcI&h-W,6C3f>ZFmAe,_1haYanM_5EII]`?I-N397#^%lQ:C&H0\/Ym?RV/A8Z8ef3g8_n8L5Js6fcJ9A\O[]rAd;0'iG\Dd'oI
%^]"*M6IPT(A9WKFrS'9U[G>.9Si5ZiWG$]%4sTJMkKr'A17gW48B.tF)Vr\;1-V4nku#%`]73^Blsn??4bcZ.4g/K/HmS6SY3l,q
%H?'%0E$\o1iILFi(5"a\,'^gJ7;!^ml$"(h4236r]<`ZME8P9ThCI)OBa;LWqr4*oli/rVIRO(RY.`e`PHVI.h7^$fN^k$^r9WqQ
%hJ.LE?2_jFaa^t;I//Q2>Xk=5+F@FUL81Y1b^OsWArf+!_UDl95(1r=&0>hQ')]f9PKWF0fhuct#KQa(-QMKce`5KX[%18[T;:F5
%7c!*>dKe7AI;alaDkEPl+&4eFms%!K=FQVKb7A\":T@HY<.V#HnYO2"^I9WgAGrFWY9(i8qA04OD0Q38-a1g%Dc)DZ_T1A*T3B7u
%l1MqedX+f9*d,H8])M-PX7NAVDt(I_(;0CMi0D33\)@o=(;.P:G?FA.A&0)hXm7o!I!(NsITH(/T]mIR^&;(.?CdXZCuN#J<kcJo
%pPpc]6012,I#"!UYjsr:Q1#%/5CX$jc\JDtrHqOVp8e&cW$WYP"$upVA(M14aT%:5-HPA=hY/J`ER67l3p:L382p"!MRsZZ4uXQ7
%Fl5NGGi,']hVP<HK1?=THGltAF$)<pr3dnik7<(b18nu<@\4-C^VeanE;&&6cMU>*rALT-LU5l:3;Yj)*oc/N[m-e*%:#;a4T0-\
%e`$"A3;ad,J*Utl%Y'8Ohn,kr<*L6oOM9EKa#p<%:I/RJ^baY:"O5C>3c;!D]l,oiHOl]n$6[A@IFr\&itEjJs7_aAfsa!AIe\p"
%\C2K+g[+2\rW**cpZJB#d(;9-e_V*c3TU-_eSXWjXukst;f^I.-g@^:=u8,WF:T.HVdRp)OHOXgBKZ,ok?u]i8QC"&!9qd51q*&8
%@+!W[1[i'&q1D,r@+!W72fl3:*%W$*@aQ$b5k+<P:)kf']@NC`[V1%+9DUE@6"5g0@ZQ<=*OrA8C<</?jZXXn%L.HSe/SuB%0m!N
%#<<tl]t(ktV'sZ`c-5q[lm3!:s8*>a4rdA1g,4A-Y]@j3]B"*q2<M>HeU)`Cc,n/XcehPUCt560jbG/@+6pl?hjqLZh<TjYbs!Hh
%D:#i@l.>)Gf.X9Z^V;e>gsW78?[9$XD5cu7GPeGU8\(:6k[=G5SfTk_j^Hg2Lj%U/&Va$9fPrF]ZZ02.rb"SWro_[ON8J!5?/?Q>
%1K+/*LV&PlFfHL`hQW>=cVmJ9gUr[:]Lq\SW_\%>*To0/U\uf,[6[[eb<qr:jibG.O#=:&Ci+ZIa8iO26e^ok4S5dWI0_p:o`&LG
%(@mgjfKj\02gfB4k*,,;Rr9rTDmjb"YP-!-Z^]jES3;*`4D^&TGmJj89CL>g2qbStZ@/H1c1c46s4N>*T;RdtZmjX<`slZ)*5[1H
%lHO4"s(&*$"6(H(dj2%bK*jKp.n((c\XHJ.q+bksgf):<$I:Z,[d@30Su34^oV"qI4O2(@$+Xr_%'oUI0)<?5dW[3uFBHO(HX%R,
%YK$pCGs[G@(/3gunbVDg!1uU!kn@1*^>@e6fq8*=#g"&.C4bnoYj<%!\o/Ki4$V?+.#e$Yf:OmeIR?Ns*eNW8%)7939Y[niCL8uk
%4f@U1'TTP*&@Q1*4EC;8Q9hqUE@+IkleF1qp1EXGd[?YMFaUL2J,&$XPKV.uo?U4Y:LA"G\(pr)A+f:$)k=S0hS6[0H0!fDQY53*
%GCK,Ro]#N6k-l_qmH'XTEABJ^_:>t1-_95;rc`JIO(%_%[s+3hgnLFpKfcslmee-6_5=Y*Hdmeqm#+@3!]e05IFBCFg[!U[FNo6p
%K5;H94$W$ifF%=bf"^CjTDKIso$-jll2PS(RsoF%I_ICCkPXjVk_>qoS*R,5/cFU=O4B:#j7;>IMf*b3LjaM='3k=g[SV50W^fua
%2g"*Gdm%bS\FmGRlH76E%jsSZkg$glhjdqi>eoIDa6M+Kg#_J?L5^kR-g*.4HaP.RI<"L]FmAP_El3KVo((o.Mq;kQ!EjS\H1>Be
%lhZi9mgVF,p$1o+m&uoTjd//3Y;W>RbHBNZJ&Y6r]moA6+8'/aEd;i5BsdinLUr*c^i+Sn,j=Dei#qX^.7KtIl--l/0+O*m]4@Pi
%1pV:RXreibp*:8^$d*8r6W&RI#PpTC7G0H*p1<RCo2q4dWo]hjU21`I],ut%1cE[X'T98n1P](s6S-AEA%+J:U?pN8k:H]_:GWbt
%du([,HdkuO7G6+WIF4u(YpafQl^`i#feg]lIb$`[=HkD.fp>kA5.rfM(fRd*?,"5CHH^TDhi,6C&RL5OZ%']OrHStsoI_3V%\=Bs
%O9E%K>)f2a]k7fP!,(':Sbh9Lh,2`%i3>FiC`fiZ_t/Mup*h@P>b>>-4W%P;Db1J/#4#Tk4UfXq:iR#&%u4tP^U$R/10`]'o$ut`
%B:#);`*T'bGC"<$b>!V-EUDd8:5;5n]h*n0U(/2!+V(bldXe;slu?7Jg5_f:5@g>*a7Vd69Aue$\b,86"m45fjY(+APA(>,oO=?j
%a^8bU$OA6KWD`A_N:KcH?Tg`7_lc/?%?KEhN@id5-h(R$r=e>LHS.CdO7R8,,<3oZJ,6hTkpO4P_cOUaI-'s\Z4,,^T3Yb%IVo=c
%c(@-tq58`l/H=k-T7$@'[DTcWr5X`!YKl<Xq6GbFbF8&#:RV6^o0;j02#R9HiTQJdIPMmkn\[j]H2Z,drkI(Koe.Ka*W?d1iq&'M
%n``:$5Q1=-qr&qDrV#HirpOguCB"2KJ&'sd5Q7am0KsEWjeLO%4h;2%PY]?t<8-nA%F<';!ds!mq>!"Wr\5J-OA#*m2>\R^Q05Q7
%7uMOgIQe2!aF5LJrA*hMrcEPR-G*rYRgLX657c#m&,g"ef(`snZ/`eN^['a>FDCJ:k3mePL\4==;/,]4nYn^5.89YKR/\!Rmpk2#
%r-?ttZ@'%YW=I6IY+p)++,YHa:W05^[VkW!G=t,r\WIkm<pc13&%J_/Um*qO\;S!YnoaYlc'R'IgWR#Q1Oo/JY;%5Np8:R-Qrce-
%7bs<XGuDqc%1LHn%>-K^K^s*Sl(@L!T8iHX-kibN?W!*/s2B]i<PJ--o-!o%jb)IeoRUr*,6cua$iT_HH1(UpUS"ogiVA]SPNMSf
%\@D!IXZkEj^$jG;QZ2+6NN4KaY,9G1Q[d<]Yp&c!ScQ5?CpuS[a6*3"(S:I2?OlO53VMh4+"of0#06,IZ[AK#+!)ZsD.@,UB5U"A
%kp4O,(l>a$C2,q%mePG3%t&0\qeD)66fb.Pbrak.HE7)1=12P`CNo^T]ORO>?iK>/hd'OFr6b5-T73'o?LrqtQ2gjGReuO4b&gVF
%Y"nRDNSaZo&#Uf<&qZ(W>W'kl5<jL?qYA<uo6LB2p%@"=s)n152DX`MT3bfoYOC`HjQlEd?b\dOV7ZP!^D[lSjkl^/mI^>NVq9gr
%^:]TQ8&"L0D\X5I=-tC#qt\VUs(An.l!F%up/Q8$MY"9AO61rB0?ZI=^9"[?-QCd4Iie:*FF/(UXkOa@C#-;(bqCiLkGu_Z5Kd`b
%iSMmE3V<0'5EF,<bXn9Q;8;#OMFhWmk\$M@p:8M:hPSMaIa9YgSh=HhF;^:$m]foI5%/'>mD#7^T>e1Jqs@2:nEntoB<@1FH<"ms
%R<n2Dh#;]e9g&@Lp/AX$SGc0`hMa,!pUn](Dqde"MgIra*c?B9pOCJt7b<9ba6-q?Y388hhGbL/pfJJQNA^\$$BI+oqG)MFD]!1m
%2X`Bd@$n%3`V+`G0@q0<h/@c=i&>RmidY,_:%JSBdPT7M7>^WZS,Y:!4KEYs':@ol-iTk?o>M"X:Qk//abJkeTB5ShH!NGp2VG8u
%k$@nK2Mh0Sf;H/F<,;XKgVE4<59,+BSaHJdo>/GROa1',;Q$@o50rUS`PfS,T20T]\hl'GZeiWgOM^#K9:;m1o+5)-?Ul,Qd?o=4
%hg=%![of6Jj+`c)[kj)KeaM1(q-Lh>`H?4m]s1T;<1C0M^e_^n@&p4jpKYN'4Ol40a8$R<k(PNbAY(0Tk+a]_oK5mZE,*^Wa/lem
%Z[Xlor)rD\rRPrr9dZpea877%b#39PMpJPDrc%`)lMB%YM_['V\Y]*^4:_b-']qtG.hUb.\:=%jDgnfor8T_;f,'a^,m/30_6:#U
%55jc1hmBTLS,3'Fa7Id[T=b,@CMQN85iMJ+H(OgAElL"neR<U(Ku$5$KX%dVEXl1W!A[!Y"Rk#bT6ig">JI1E6%NG4I:dlPm'."r
%Ng6ZV]!YhFA<;:lR<Q9<f[Nu2F$prK%5*hKp0iW8b:H=DI.9ud7U!3>'Gr7HW=98/E$#ar$TS(]W#D)B$W+f;#G<tHBPBSK?3g`d
%0b@<L8ZOJL=a1RSUD7aB`2(4-`8^XB%#O]rd%lKuNAiJo.,[-]"n(A,CTJ^#$S^+7Q><N-EHHo"W)=tK\RY^irdb\><JCD4L=+#?
%'t@+9"@nU-$>lp7*Z8(CNjO>E1:uk2+),Hk6ml:GOGY8-^rXnSZ7$YnXZ"#h-WXg@dfL!4$(T3H%miNm@NQSD36>R%HfXFh<n:P:
%RjC:^34,L33.]$L=dVFuU,uk,[P#uJKR4NV)qc38U`YQ<GX4,#LhTgtdm9iKjfl_iW=5?QY=p[ZBMq1""V2.\'7JCZgFL]kh?6Q8
%r?CRW.L@"lH(>GFMibf5W\u")U$f;^`":DE%n]8&>lQ3mROCE.b,,c0G>(^!`P/Z^#c=+0KDC,99gpPs-j(jJq@Yo0$VL`@Ou1<h
%0k[<gk"QO+S3`&Laq?=C_&*lHk<';gUieS7JP'C:_jIXD)QD3)\4&NP>+LDf?L%Sb,*T99@SGqX762B=8/lgfGeeTgq(1G+ZDdnd
%PK3nk0Jn+VlI:bH#6XR[@r(I&A$8Tb67cms@,cQ9K3()ce5)U?Lle>SXcPQq:^W>$OEes*6kI]m2?753U5onZiu%!^d=qENM?s>F
%\O72/KA=-cd*ubCoLB#e$kn,P;/"lWaJ05mC^0Y?o@g\W&%X;lTs5ts"X"[W/\j><Opi^7SOk@>dDC7OPqq;Plnj]\#q@f40&SAq
%j[Cl_K2dBT-$eL*\2d/;CI*b]c+lefD%-2/AHWZmR;m%NL=dX>G.;NY>>@Lp$L'?$[o$Z>8?6\5PER=(WSZ.(N"+]7CM#9a5gb,C
%:3[c^.Q0jF4AdXpkS0AWdLn3j<'o?W/'4Qi-um(ZGcNTj+"Pp-A]bH\H#Yt:`Q^oUn?qIR3!m-@*sZ;0<m&O&r+5gr?8;8ds3-Z"
%+@aL19IMqV`,nLPnEO#:Pi,L,\0b&m)J^Ym>'n]W.0JQ'WB?62<0K^["RiDB7SFXf4I*,ui4LlNd*lB_V(E9WL(Vjm4!62]"KgC?
%7@&TkBsdplG*)em!#rfnF@2$Za-)Aac0>E9)2NoZ-M6F-4!ECb1BM#hZ*3XS,'K/@._)a&;<h:,*FUBlZ;&\jA;leH+jp\c(g8=r
%c_6$J;,Y3@(:p=:glkn8[YQ\k_@'b1%n9;37\32-mNFf'fnl*BYX1jpALA?mR^g^(orOf,E<8^M&?@ckJP_1rEq;X(d4',tFgF!\
%UPk,R`5ep/qq*:40[]rHk/3<'PJP@bZ6>dS0fT7[ke7'KA3_#`@X>)>)JlLK8=bot&OqI_2<6e5o'%PEJCM30&I0+JZa^ZFCF.YH
%14Lnc"-=VeK[_^rVD&'+[u2tmf/^lekTm$YKi@5g*')!0S0o6r72[.:iHa:6,.0[FNanq3pC\!5I=sm%a7IR@opn!S'H^O-&8M^,
%!+$VDBB%q`\'8F[8T<G$0/C9s:(g4,H=U<;F*A0*AOe+NK!nuR1Q\MjUDB"YS`GZbi$N%dCm3XHdZ5)a-ikZ69gnQ.(UO0FY8:s,
%Z,.]mik]EH`"AR\l[*)HS`Z6!FH;W1gP[_hROr&`JX;m/;33_*nMj/^_I#']#oPWk5o:g90rT3P`@288%=(k$e75hB=PDsaKPNK2
%1Et7WUmmGkK?]@rl:`@%o0g-o>uNM?jM4i[."XhM-&;2Pdk4mP>"d_:[n]UVgZ@alO@2NX/#osQcZ\1"XdgFhO5#qprbd':r744Q
%Sl%THGKdo>fa>'knmS&5@W<C/*G'iG$C0R6;eq7Ec8LamAnDWIb!,kncpu+37RN.If#?u>6;Q5F)itIf'b$1TEmB<j@)<nX54=*2
%,*FA%jCp/O1(A"Dp)RYk]ZR1i5X\uqK%!Lj>W2eRL<i1r`$^ZX#/Y.6UPRGomeg5]e@iZ>Bh:YO,Y<Drp7jSIfsMLNOS!B?>CmS1
%!co(;lZJNl>3$*Na^XGc85>VNU3Ja=J[j(5FF,6u6>U9gg8#W#*O=U7IEB9*Q9A;`WeVK_U2LkcPKjL2h)_#.I1=@:;K?=0HkQ'u
%7SMG_[_?9/]ZgkD2T?(Q]i'-*,RWQ3f>.b@TMKsfYbN9BOBc?1CqWP[@H;OQ?9dB%bB-VL\feI1jr5ecfe@6,W!j%@\XlXX5bX$&
%DWL+p$hJYVKZH:gnotHYEjs=RFpr')8Lu$]L7c<h*cdHb90FJ"QQ5dH:,.h_,QA`E(@%EU"JQLkNG)E$7qg@B=&r$&I77\EXiINQ
%C_HUfW]D<aOd\\V7KNZ,X'lE.PUur'KE^DI_R=-1Y,(\`G"V;*dk4mL>(up4_a4AQERCG6%1]?JoaOo#WuU6C.E;_pE`BE1f"`eJ
%i?7sgYmt(F;(O-s>FDA[S1Z;!,r(2eHn[8KW//*,B&j%qZngen[QYFonOA`O"@7$n&d%+3dfpkp%K+,d,4N%dGal+831Ln=`hGlM
%&KA\*o%!3(Y&/!>\=mW&,>Uaa-2WbiW)/F?Ar/2"X;<Ta`&YXN*`/X;7rTfqj9R8@.:,'?=?j`^A/A)W(t=L;ifOEhRc@A-<#Ci]
%Z&[e=-a@FqT3/THQF'R_4R]EI0]XrbBL')&O/'d$d+>QJW^o`Qdu[lN!W0iM(Top'6AWN;c@LXl:r(@0bg&_SDlj/*=E0I#r$c9C
%G,:sq$8\&4cW(C6IYBG4k2[KQGpm<\$j^Qh*01ZZ^pQqQL1l=oK@'!oZDO;4<#5E^Q01tQdKE66K^B$c8I@%M26JIb8LP"u&kS#q
%gX\%(\o?J.i?fhDk`6F=)YHLJeVj?P%r7$ViX56['d@ljH`RdF7OhGgjmY2)SITQqMG[l_h*DL2$T1&4Mc;4c(DY)BU8!bl.ItSU
%Gr\O[&tI$^@TZj$SHg>P`i1X+lQt8HmXJ<MW7ht6Q3q7[j3EAmLhML#5/i8^*m,Y,"bb-FW54R%UQD5%.5P2YQ$!?F)C4Wur"I=4
%2ilBrg9cC3((cp&(R+'fOJ:@kIuL53\<@99"F_I.C`Q*FQ@Jn;'I@#,f3H:lZX;pW%?87ImtZ0MqO;bWI)/1iN*Mf,^sicq/OPW9
%*G",+8ChPb;\puubqLY(A@2hsXW:s-;+T:(5KCo=Z?5.oaq&$7p&@bkrfrrWM0ub_4f?&%nUk&UUk:^bb/29rks=E"Ze*uNT2]-f
%m']^X?hIhr5$_uJ],gHCNXn1Qcub1h4'aS51bSdG*qsq,/+f$k)aCh>AFX[Xr[!b:S<[kTHl^903*dGmr#]29))m8,rh_]5d:KaZ
%[uoKSMI^smOlN((VO0UqXMgCaZYF%R3NT:eaht/#Z.6\+Sj/W6kPN`R$n``I;gcoK5N"ugO/dTE3>:j*Hm7#PR'0\);[+Qi40;OG
%,58Q=VMuUu^Dba_=E9M6IZ[M-DW\Y5oCr&HW)!mu$EB8W\t]3l@@B'A)h[-].g?"r``@!<ciD":npgI639/EJM##!nS%lUB6iWEQ
%)uW9.RsU$u;K'O)?FaOpiK,i9j8T.ts!'$HM4mTadsjTAY.pHYa(^/&m'];C-bXS5&?4"[n7D@s7OnD!/o]/@TM"p7KD,Hq#!8EZ
%A21$PY%7P5kL1.uH;iF,n\6"N(F^`JKN>An`^YbK@Q1qGknQ[ff_E<Zdd.WEPTufI_+W!boji5bSF8FA'NMj:#gF5oi@>aIa8_3/
%/X=Yf8k8HNVP!VZJ+WLpGZ#4$3^;?QbFA5Vds.$D/pFbn##!f`H8-D5'GlWS((Zk)?:C;>_Au5AQU71`n_H+LR]XIX\h,a740=&t
%-iLsVjde7.dX?6N)G^iK`#U9[SX,"=O-PW/CSZB5DFmG%6#M'NrqVVt6trb#3[d^_qk05=[H>TafR5@FHb8I3Z\u86H"ZL;$9VY/
%Igf0?rfsDjW)a^VY_#'Q5>]]Vs*`sl@pbY`^S?Z@W(43SrCkYh,?pL`Y)H>h?@c'5N7<6+N7-K[IXTpVqU+`Eg>2]6<<)pL6Hr8Y
%PM`;W\HM(ppj,'+3&%AD3(e2?Sks6nTM:SQV%PCQr3'PjEYL*IgV)FXKHhPs(BgbF]4-Rh[m>G.rmbnW@kmO_p?KJUDYof,.B%ps
%"Lbgjk'US/=NmC]T?B97ZZC6D/TbAKgF<QC<?NWDnMGbsXQCt#2>fgpMG7(<.;(G1>T1M@i'h5,?R&QtG1AcbVrQ]4A\OC2p&@20
%@XCO%Y%4Z;2LB5aDOW2\Ch%>FqWhapWLP]q4n*2GIIm7uA*2U^".HF@iLg-PCQ64]1or0s0qh@nqRXb6EO7AZ`:<>!SF8:KP*A)7
%;Fdf)*GouA1*<0pZ+Q/O-uoY`HT[aT'l&MU--/")$<D4olkiK]n"/[".!H./Oh78&/g==EfAT.H*Len1EEZa,:FO7l&Pc[m?BQ/T
%GS@YoMX(BKPqiKAcn>ln)XOY5.eT/8d3LLCY4DS=2n<!qrcpaU#KB`'%mTmZ*fhN'[KN_MZ>K,tdsrKo"<T(5-nV>*$*ufh].o)i
%PN=fg<Yjh6>`^YF38rlh2ejBgKgE7-5)N5r?Ra"4NlZ#a&_\Y=<Sh:3CI8'lS5*a.j%:;GP>T6akn9L'o8lQ]ecu"ao#2(K8[.<e
%1`@2Dh/TD;_Mob0QpiDl5V8mQ?p_MZ%qXKP,U8s!'!#"(2iS]?`tUo[Rolr6?D3=Ma%WSn%in5DM@[*lL'Wm#).T(:pVL1*(1WLX
%Do/N58eN'I6_]lTp`K)X,;pW;"-&'*BF<H@8W!`ZGk\3#JT06`nJ_VIMssj4k_P*&K=\2ULiGh9A9T<Yc%,S:6RXEa'Di2rKXW@)
%F"X2#Rs(<2OffOaSAK5A7:UW*OU1m&QR9$Ma(Ob6"e/rAR-B4FLH1mrA7FarJf7&:iY\SG]O!re:M#q.,r&&,>$[;%A+APtTm4it
%jIcsen/0'@O$K@Nma3Z(Pp20",G:.%Og.8S*\RToi^.6*/sc'!/qcKT%kF92WqeQ,a2:Hfk.=Tm1fe';Q5$/m_J?J4.2FT3dp<fV
%Vu#65iZ&))`P,0I\.8^f8o2$9:?hqn'8$<r6-2+q*X8pe`E8V\Kt&G)2Ao;qFuIW'@F\Ne5nU/`Q_OtTP9^>&;j&J)!jUiU7)l*_
%l6mi:`jQTG$"ap;')I#BhJ@V#L:4`lRk9]g$rN*SOQFp1RKljF+_*?m#pY(71;P.8`M0**`4oQB`X5-<BhO/<[8+M"[SWp04OH$S
%9LKFs'YDfi$I[WbNd2q(!h?jN@"bsZG"r[;%d9od&&pr:>hj_([$<5]NH>o-j(!:>8'Do%67frHP.HHbF/q\mZGH?EEC,:dlY/r(
%W5M;2.P2K;!]Y`&R[M(soh_;Z<gg!)S`)>`b+=<BSd/+:RgD\q6UWAu&g4f>Q(&?&AC6+OK6o7+$b=fhprU0QEB&?c1CdH?1FRsR
%9:;CcQAcI-8=`s#9H)IfA&k#CTa35ZjmN>pWl9RR$<"gHT?:9%?sh?Z7S$,'@_[JU0-Wr504fj0)nX;qQiU]P)ET]t+EC?uf>jlG
%8rkO\7X%7ZKSLdNc?7hff7AK:>-rJj2o1)KWa/jrWUlhn.41<1H=Tqf@8H*bP3R6n--rO5`.I\19]330nU@0ENJc3;0I*Pb1qk.1
%a#oV6.Gn=Nia+,B#^`4q$M37"lA@/oU5P/)2Bj05CRK0$O()hSiS$R&(5C"C2ETQ^!Q2m"X/%9q/9acNB9c_(,h-#ZRFbrg7c4>M
%Xh\UbLjEH7Fob4<$B`POG8af79N%Qe:^K4^<eT[K-8nCGY"]XE:4Wa<Ee.`d]dQZP`ls:(HGspjaPgYMVR%#<9^!\JfO81-Z!g(l
%M:r$_k`60;OEu-2K8EM(10@'mPr1cfh!e36Do$DY_Da*=Jr.`p<cQBHL)*U/oLY^nBgWk<`9nNW?T!F/Gl>9YBd1ipNUJm3NL0#s
%.bSD-b2sejZdqE2?VS*>\m7>'ZG/6'ZDF8$m=ou[A)$lfS>YFV\eG=dX8jL8*LnJ2(XrjX/3ju0N6JdRi4$T"d9i\GF@ZEPMF1VI
%TFbAf!7=U$;%_i:baL%+'ulhBIZlDmj^PLPL#6`)HNJ@u^>[CqaOk0,[W+^DKQg%3<kM\c%&2Fo],1JoQmGdJm&if]Csp+8K-02u
%L$Z7$+;BssC(R@9nmsRd*H\U5*5!Oe,N50+#`M8;fYCb0T+s)h213r:J<;gOM9T:GED#3=nSZuNO*E/0EeG+OmSp1j[l*e\k%,_L
%Z%BZF/7pFS'%pg(Qq<gP-`ggUKl`C_:>`u6grmiu\Kn2f-^X/p>Z@//b_J4'a?sAH4]^9n/"B"rbs#8klYU'i@D0O;:G_2k7dU.C
%Yl*S<'^c\*S`_Mu'_b]aa!l99=u]5m8&c(M9i=<ib]]At.$7BM7\4jMhYtp(*1aQ93)eML*La=[O+&ChSeerJHbONq'624'9iLT$
%.;5!^>"e.N^%a.ZcAi:7f>el67a+,MN'-`0.3fJ1qb$sPB:f_=pK<Y&kMOKB%\WmCn%]C&@Yk0k(jY>O_T=To,ommpMe%_8Y2k-A
%!mV@l"Z^$19,qhpp!Fm4%t.KgqP6eEZrE/\,bXj+UaF2-_`Tpk;D_Lg/eSiO%Z8O#B3-d?q.gCI8n+2,a0aEn=<j+t_^Pj^Vdm98
%^b\mT_C<2.40_h5\b57L;FQf-/V\-?Ml%GH(J-Q7BL#MsH#ZM)B@9>6K>tE_F[Vq909%#Y0R?\>4WuA_9</O"HE7aUIST6\Qc(%e
%(\r>'Qip@0K7;.?N>j"Zi$S[io4;UGXH5.%;Uh7lr"a:<,SnHsQi%V8"V]^t&of%q+(FBKO)ePRX/Q1n;Y'QV@,diSEZ:+)Or0,(
%,qnDR#PF0&<0?>Y=VIVq.srV+k1SFI1K!nC9EC-MBJ`'.YZ`@'Bj$o;.p*m"m]?9/5B^3'a%M($7akHY&SZKsT1Hm.=eK7sh/t8W
%'p5!GA/CHKiQ-p^GU6K$,)7*.6P_>mL"B/=V0pN`5%=dm"c8igG+s*&i*u7NR-/jcE:/AB(!MW#jdBpb_`rfo4blF57:-C8.4Q)l
%7j0W$^Vo_g3`:]TY0HtTjAs4RTYF.d6,o#XA].P^>lFc5QmGCh/T1?=Ci%?CT+fiKGN#Q9$Aj&CegD*+;K*^/J"!T6G57cHoK[5I
%P7FC/78I''SYW8JY)Y:?Ad]RW+WJp(-A.j%?UTGp7Ej'&<YY(ME4%-bJgC/aN*.@J?Bj)p_EX";1WfGLhs8)hZ$4%4ALe\u+j\fF
%CW7eB?-]>e$;&1:N?tEarP1<[*8JA[o)q4G&p@c-*lb95'M!QH6/KqQ[&eFGc[OiOpZb]+;JjYAdA5"_\%M'eU&KOkr<C5Pmt:Z:
%j/[Z&!W5A^q[F>q#>ABSeNj"X^NFunJR?*9es*)n!as6qEXX?Zcp-[QMr2).g@Og^rI8RL^M0!lhSV!=kJt;mIqO,fDXV]E8+Yg6
%d?WTC5`P<MQ/@@cYNBrrfDkNBg?J+Y;IBB.`RL2M]%K9ZcM*"^MTX0kIuDQXl[.us?+8]PCg[#*)n_?8l/0SsIiT,fIV$HgmH`02
%K=`)SP)S^'pV0K$T2u@U5H_1*d.[3AEpU,TIX9R0q@1s3s!WfNS2O4P"rg0lk5(VET9(!qd-nE7s')4F](a6`^u,/"2#/Tgq#-hY
%]lJ@Hf?(G?bK,,qP5ck$Hck'Pb'CFrp3#I5h"*#pr(ZlrnN%6<+1c2kIrok[%^*4Id.6q`SkedpNP0@Z#OTh9_6j\<hXn;0@"&LY
%_O^)dccFR;D==%/3pH!<rQV@TR*e[DNDm[I;SEih!EXdM2T>KA-"),/[^=iRT,]^A@cmc6mWH,.93Vo^7_/>5+TToWNs@Rfei_W(
%T94>O*7*kArE@qqmIYlWV\!.51j]*:\8/V,mp>tk`Oq;K%_i0[9\aCPs/mRM7mFK;UYfpl=.=d?nQG%RoC$HA9hMO;O8VLKb5(f'
%B")i)4msn>qcdn)C2l@"l0k7O:JX&:Y*[c[B`G^2nHoeCVgEkj4!KT34[W1drk%Od$7`KFG1sPYMi2?uI@/DtD0)N!DrZUYl"9j+
%djThaqmT[*:nmk!cu6=re%ItpMfg#Ic^MJjZf^/LR.N$bk14E0i4G:[Q<Fga[tS_3]o0\j9kj*!;]qOD'U;^f-YGO>k/hM;"WsJ5
%.jqm(]s9(9p(7pr2B:.JBQ/.Cm%#1V$"pA)Bp?n\jch<DBS^S]NA$l(<Ha8U>hQQu`%)f,`7@Rs:sL=5Dk!<B/iJ&@R\uXo[`XYA
%WQH.4`:h<6G%I`QYHuC"DWe+3dj[9YWgK>\k6J^H]B@5"eRib"]Xcq&XS%Y#O%8t[>aInrIU]L/+u>ik8k3_Y_dKAqg8>1@NTTJ.
%q]tB`b!u98h`]<#-[hr2X7N[Xo<W4S.IB=ZfLgpf2:(!0c8Har?JbO_f5D]'BsR]$I_P7_oBJ,,gHFt(ZfFaZ&c"221jNEs\@K45
%4Rl;?oPg1:VoSbBiHF:pQ.!IUPtLHAXIg_I`#o.ja3A*<_eJ;t]\=uGBOi1us3Jqnn)#KOB5XlBp.7K>FBXsl:B*i]k2ad`Sc.FE
%O.GFX)&-8n-;B:(\NH&OiO7b,c/g$smc.fTn3F7>dO:7h[^UbYn3L%OYM>1&5,C9'.^ce^s->Lglh*2PbNh710+W8-I[kd9q)Y]\
%l5NBUb"QB@hB>4VdOqt0Rt'EpKh"SHocO3_hs6l@T>"GMmiRc@GhLr's'p!InobK@i?_'>p[V?,FJIV@j+QdZL%^S6XnIhEb<M$e
%[9!u)@?'5HNE5NC8$g,;A&i?NGQ0cC-N-K1B!8Ud<MPg$HU%?CO1!d?f?$eNUlD6u"hP6ql@#jcnn7@Jh^@e5a"+hf%o+`Z4L]\5
%BC!33DDaNp&b-cL;6)3;Wgt-t2g,\ba!Wl3N,/!XfDaAfX5%4s"g<6!-f5l`]c9TW8QAjZ(qs;UEP0&,dbZ4R.3uA"iC/>X.[aQ5
%Y;O%@8&nJ@Y/5cai"At?ni/HT[jdfB$,4NN\d8$h#$R9#$n]r@I/1)12c?ul&9"#H)__.Z]N-OH?X)=8S-2s[ZjthNb&KGg#G`ti
%RI)s#PLD7$S/m<crpbN2OF=XomI)mD)su\WmY-'JOG5C^*l[*2E,N+r:Rc!-UM+B/PEktnIlq&!o<t^u<jN1G2:/qi@LK*#R!M<U
%Tlu%l"EN*?k,teoJ$cgT]LN`-Df:f9B6:lOkMMmdJM2SSQ:Z1#>A9UO]:#K)aJD\Q=L"g1QWmk'@,4S]>ra.YJ'Fjgr8uG;LGW;9
%FgH;CWR04b=i35@l*Np\4)XXg=*VB!)h-bo^Wm1qnWL=ShLW\!jBpgZI@:(GB?+(3c]=-L"/rjqk`E'!oqQqUN(US,`g_ssQ,RY(
%\?aZ*@rL^T?!AifC1EX/>;'#-=fbQT4DqT@=%&gi%WTl%IpCXdBqOa:^NZ"<M$@$CfP.n28k?iu?t@u8\ms)Ag1R86lCRI='=au/
%j,98Dcc$=R^+X=U4'=U*55TE+h<efQkY(cR*0GaHU3R08)g(,Cm'8L1$bW_><rFUFkFN/'@9lIb_%AVq59PfB::JIXD1s'?lbQZ@
%.e(C3R%7R694tr4TB`;Z0]T'WfaLmF:N\JH)XU=CMgqjuqmC<j-mHC*(U7`61[CYX>#P(2YF+GrDB#</:A6B4E'1N]l8,ZP@9R#%
%dAJBj(Z>>9N]ERS5M8p6lAYF<42rKJ]F^E>Pu7MXQoZ@W/@mC>%u:Vi-f`bHldN9j/M^-aHi<AMqgsQ\rSp*m$dI6Gim-COX=0'[
%)R$f#Z'KYD*=Q9"Z\=]tF-]2`EVch#8WJVh=ljcZs.8[P>.s=qG5HcJnJm9&^1as0.8]lN1Q\0K>;3(0U_S0oX6h1+IW9FMGdN#[
%QXF@VVA,i*Yh)>KP5*suFVL(DSW4>+QsR[O85D@^RV./`pKGO;YAEQc99"ZaT=6=`F"Tba]Eo,3WPIr;f>A?;iX)M2VLFVr7gL=M
%T>Ju1-l_C!JnKgVR-V3\<B4d^'3S(#3H1Y7EL,eQB22g=\*<I9MF3ULH#U#2r$ng2o*t<On>eT_=I:]N.AjlQGH*`qZ_Ji_GsR1c
%h#;QukchW#LUY%-=-^@]_?sPprht*_GWO8ZNEOQbnE6]d,!*?f)9+!eIPQ/F4:]]AB+M5ie)m8qHDWf@X5E<Q))ij)1N*3@ZYjop
%^"5C8ShZpZD)cuL1_8tGq<1K**q/+C#eRe9YMse+,);X[nT*#t*1\PR#jj7^4uE]=AcYaI=,e7o=DD%m/P@Y/')nVk"%?DR)2h\'
%Xf-Cl._B$1Zi9L&eg[^s8kZ[A[F0MS=XW:0IB].4fc0s`N2*"^S3=>gTjOl`[Ei1cTYd#t`8UN?L[P8RJ4222DbN?@J;o>HIW;Eh
%&MA]uR%:[hDKdeiDM35D)4tVJdKnQ=[scu`n!*u)I6gMlXIW0eG3PCLZ@!jCBuB)4BY6tA$`sZu0tQK78[\3PU),\$om<M/c]C0%
%C`d>Z)i1%;fu(uOTBoT--mrdi/i"Gb\OSRDTRZP$,-<`2fl@&!F-Z`kM>+';F'r[G?1HinOn$[k>Kq%I+774*5H`Z'C$W:`qXY=7
%-]M<Cdn=tS)P)#^"(s>)m#hY*D'!$d*MMG')dq^Xk&5d\<0a63C&VZ671@Db7-0a<j-$jhnRnE!6A4h3Or%8CZ4b7#%I'Ta6lo>a
%kGNfQclPr7?dQ0&o]P0ZWe"?jiYK)2M8_Zh]"=6IX6#>08LpD[<]4;b'V8BodPI?OYtt*IEXXX;=`I]N[$$f;+6[80jE/ba?IH"0
%lh*o-^JPtlX3?,W]hE34bO]'+1'S`jWii_4"0KaIo,8\,i8>j'h<UV3:X=5[Iq$@5aBt_4ae70'49'3mpggR838rmg0'u812rb&2
%PdWZB4WeFEdt'l8R67*BHgUdo=]$2_%C-[M\R7s]-sUh:WHAauJZ*C_H#adpnVC^cH^@ks+@NUs<mK&M?D1<8dt9!drTu,t,bG0J
%:_JAbno?;0;JP@7)7b5;=%@kT91"a2*la1^1(l@Apk#C?j.`R^W,Zi,Bkag0:m?u8`j&jt:_$7'ReN1shG/!mJ&RN18mK(k*5M(>
%bCKC.f<Tn]l<i*$oZD<KPeQ&BWmQ"90<m%Wi\VY'r.-YmS.$BYWksh;^G^J[QM6Z]\OU0q+,kRZ(OmB+pe\g3bob$YD^kM<gP_e-
%>1aR]-sM6gcf%`-A4)*W;Tmcp8gf5nhaLVB=3BDmQSHBR=5pG0A-F_\=)'8)gO7?'DCDb-(5e9daEjuJkc].R]spmPUt=O0Wj9"?
%q=BeA[qj32h%\-/d%f@?b,@'iF`I2=[A9I1s/Nj=)308qhq1sWA?J[&g\m>l978NO4[&-O;\[YA]V8]?XXeStrDMLo+G2lDn#VWA
%.C5p%o,NSXC,gY(j5D=_F>Wqc13s<EB(WrjiFI4L5a,O$BQN,,H*eS6fe/#ti5S#kE:BqINGCMMXpo-fM2s=D]:JPg'$G^;5?-$b
%^6b+iPu$lm4dVn%>?htS1>Lss)ea:I^:;k(d=lnP?c!RSEs8k,MR6^)8C(<t4\kMk*ZgY7DuOFb3:EG]B^N2NC!Oa=Xrl<_29/b`
%>r,:2koFqCcUc9<$N!MI<dKN9]VADkS`ti'2LK@_EFgGQlSQR5Ij</XqrH;`Nt5m\cJ<isHoLlFgjM&f0RpBUF>1&Y]CDtB@rgSc
%@]*?l^$T,j?#mDdk$Kc+IUSkmXF@bT@fGH$jVpkh7<1n$HRjtKleh")PL8dn7pi8,k%?'&:ZkNGlY2f"rmC"jPH<<@Z\A@Ul`9W`
%[_96(R=!_h=0))h8*4"2I8:OQHK3;0s0-lOs7U`SI[HS**VEK0$1VX5%j/DfkDd'drH@.(pE%$\[D!G?gDN*,D4g7l2sVPMe[?6o
%D_@Whghu9Gr9RkPoDHgHp#oh4o$2Mj@X30YVI=j0^2C\HYO?mglPI/(h01Z%$O:=&#QB>o^rY->op/e[5!Sr*hHLkR(4EdhAcGDq
%I_,Ei^9Y@k@ppk_G.Y1CFfQmJGh:_6VeORt'+\;?Xa#8'n\B$,R]YC#G98HMSG`5&Idu:\`a\iC_;dK#DB1iS[@2mGWUk(CDtQAm
%<mc$<T6+t#S`tNI[_'o"oAncXahpp;[FNO6hm%b0o8fI`(n/H-HLlErena)'H8tZYdBl.71tV8HqK1'5:0K15iSfa<LMYM5S\?8k
%q0QuYejR,+S]0h?&Quf7S!]X\06I0HOmM'*lCIaiQ.]A[QR:/u?fb3nq<2]Zp5Al&%qjedI[neI[m'DnO*c(a997n]>9M*ZpXZJ@
%J?$WtL\KV(@*gjEX-*7+lU?653IA5Tj5Gb,9]PWY(ES:"cns.qbn\F:4FGqO%6r+O?$\-j(FPQ`b%UXb?6Kf-(Hm0DG\L(-TBsmX
%J_n\s52,u/ndAAP?SRQ7C*Cm"TiMQIng/Z9QCoSe2UJI@)&D+3W,FK'lg<.KepVMp>.(L/[tjXil0$rjRa$2g(Ym=%p"?89mDlW:
%K@X1Bm<7eaD+bhP5g=e-Iu?ATITUpjouVK>-"5X2DZ+TXN0\Rd-VlOm^$jSI2OAS)V)3)]rkldc*k`:<@:Yg=Bj3`JZXDZRCWrE@
%*5&^90A\m$.OB)t`"<.p9Kl_FVdG1`3On`;l8)BGEA8/%oB>/gq*_"7<=@3\G_Z3$N]JrBA%0pZJ$a?AZaTPnm!KM:6e!Z\5,8+h
%P8f$h6)T.7G&"pn3o<K_NJY9fpD4@q`eUC]B_Fa*I<%(\[FaO^jXUq%jQK]OY&-C%b]C*h?Q0R0kLKFO2r>$I5cC,fIQr-bHhCt/
%7:U?+=V@^s41gKkh4s_G8]T1dH(jQdhA1aUZdlSs$W"6Lbmc7VVP/.>?e(JRn$Hf3oiW[^'CF&Wm>nDo\6Y#ARQOe<^:BH)%j0Jk
%6TB@uEn]DTm$r5=X3R]*C\n%4Q)DU8*joYK*g'-7g]s%VGW>Ha_m=11rD06<%"3G7otg4Pp?kdpoBWaZFD#Kc+Tq)eHg5?M0DbS;
%Dmi]8NMU1a*DJ?e0O"=;A)qlKZN!f]m^eg17/6@qWHJ"7DDhS)9"-6aqX2CNX/%9/maX5,`t->[esfH,(#H9Gj5<52pAFl$O/=@?
%oW5n&r0G+pC2rqDQ5VG#&+8$CCA5FNR"UGgA,H7b"5X;4i*Mm@/)D0?1h-PC3#o.bV="l8X=j76-F[0"KZNhq,i\915C>TV%"DI8
%S=K%"Funs$f\?omfr@8drcG.p]+j/c:O+nr%slZQlc&dmL$l:G$@7+O"SL/@pMSR-^Y,%KCJWi+i31bNeT6erh&Eh=putB"hJ#+B
%n^Q9Y^46#aSNl5N>]5+;K;JZoOaj'";5<?SG.odLA@1',]'L%EYL0O'`F"Z32Uuc9X*P5)Xj\\*(=i!8C5og<?;Qh!MjSepUV*bW
%1pj\->6$nI+nM=:)IB'fCNK1=\pQ1lnS0-*53</+g1)056Z)B&q5:RSKVh%f-W',)1-@tJJc`g6(8fd'7b2i'^&@J-K,4D\k/W-4
%1nM_rY6liBLn*WTYW)?97q:>mh[_)Ajd:CbbuK6B)ke-a4CKs/VHt`ai,s($]\=u3F3WguY_]1ZpmQP7OH4%i?efk-BTfX9d/GZQ
%*%8MCT*d5[@6A)*FWQ'@pR_t:h^55:0=%FE$[JC]jYGnE5)j[I<Uq!^/n;`.-i!b#`Em6sXETYn(39q,(Y1'Z1PX@iq$!*K/jq5E
%%J*:cS3RZ09?sh-,pS+o'PIt-cko1A'AdfUZEh^ulBh8lX=599Y_O>E@q`\)(b4^cMc"H@r\q(!fpirBF1(TbY^e95**;7=p38id
%7?,_:5lIcS^b?P9`].K;$Z/r-q(o__iOI1F.AeOR.-HE,]H#?=VtC+H(GWJ)V<Ba%nlETi_SJ5;>qNlcK=k@<#LGf*G[@8,6RO3&
%j,:quOt-GgdfT99HhXDK8(Qdk@CqJ4<*JV<2YQj:P7.<dGfZW0[ba.8d4":!q9JOhEC;qJ8e0AHqOQ<Zp=\#Lq+&idNJC/FhEB+W
%mF:O?j[%g%nm-tP]5gg[A&QD3-fJJ_Q;f<P=3h]<4`XEgIiK:'d58Kes6.@8ULk!S5NB7bE(^^%TLo"+,/5rl\S(6ST7"-0Bbn/3
%[>j&*le:LSb0eYTe`hq,:V/GX@m7SIS4,^_pPXQ!Am"l=otC'6EFCGC!fmP)6W#Y0`PK6R*$YE]om268Jks]NlH`3HHlY.8/UmPA
%V=siSqM2;`f67^k:LCM*Jr@5*(<EiW<6ZYYlF9@iSk\Xh?T6ELB\pN'gjWSe><gr6m]:g^/m\=f.'\?N2a7cUDsT^u`,F67hD.Qc
%bt27"?0tXerpB+H@cs5MI^F<@B:h<V#E!Kkpaa;3Ds[2&^o>25$U4;sp[dT^^Cge!1tN1jr^n0K[(0KkPf5rV6(Z,A>i20bs$UI$
%2ik_:5PaU$ik`P,Mpn6;F#/ARKI6nV"f_cYVaD)IC86UB#;EX\PY"-HRTi=/X:!tm"tcrF66M_/1^^hk=?+#+Ksdi72at)/(oifk
%RNAo00@H/0+#^iN5>LOfn,;+[iVb&3SYhb@MrA[-Dqt@L/um'+rOQ=mHi9&62Hb[g,nWS+Y$hc<d9p<nmiHK[M!(^mq8ScI%rO7j
%HKSZ.Sb+==(7:Z*4oI,*Xjq%llYH+!S+fE+6XJdMrLM[=bKVu*qYf7:K7`:`G9\g6iVCc&[/,15\;9O-dj=k.iN:(O:H)l,5$m+&
%cM6^HQ"X9J^2Wl,+iPU?H\Lt7+A)3:iD@kVi"%Stc;PS-bjJ=eJuO#%S:A%.;tDeDLG3Ifp.M=/,l"m\rp\%!k4`\H/O0:!q>6Wq
%nK-I&g_[&)D0(!s)pr9c7*iW^OVW&+RlK#:0]&CKnDrO"S11#3PCB?BaP_71Cn31q+01t.8$DA]90#0VGAf\!4(%kcgNq\'%mr%_
%1t.F&TB6Tbkil'LX+ullBt)LI]1=TU]Nm/0je36i?VchZ@25sWA*n#TlT;Pg=bnd_S$A,]=pu[%s't*g>5(mh*e2NI+2@jR@!'I_
%OqYoZLAXGRgsqQ50<B%5A12kL?E\85:<h+tr-"I^X=\Y&d9@%$9k(r<j6uqAIJVcpq$a+onD+/p#OO0OJ^r5R^ubDt:oA6p@MjU.
%E:iF84Q).1ZjX(_bm2,Y`p(ph#B$`0Ik8)?guNA1qOShc4nJAokL&/8Sc/APGE"\\dDR;$dNRFT'0\MRhEBu:9?'*$M^F`nnQCc`
%pu,)`IJdiF*=R.-Q/r3X?%9T]ib#Fus/*E>7E4f<mA93KpUS#I<Sq#Lm(YN``UgKu9<GVir?3gD,Zja/*0PJ>Du.rIQZ$VCX7HnB
%PTSa(=oRd+r5hoa?<c0Or]J[*P3`e>h``I#4CXiCVMT"f+-=h>l#gM5dD>JEXSVJ],9laY%3Y'8P?,<j$m[p<,s00E<V?"/A:P8g
%PHETsV]$6Io`!2BC1hZX(B`al(+Xho[Eq'op6[`k%mRSE1U#Z]5<;QikiP31DWd5Vre&C`bj=ccHlm)IEq<_>*i0tH2&=s7YdRPM
%WeG>2.uEoZpWi]\X7^AgTV-*jG_lr8k$%4;P46t.e2Fbt^CN&T9QTNAYqu.6FFL*,Vs0e_GKYmt(Z.?s4ib>RZ^o[fqFYO5D8Es:
%B-Yq+EpEp4P%_N`na+A4qXd_H/9o3\\pLSPm.T3tH@EK7=5Udcg%q,sl6?$qSHgC7mBuh!]T9DnDr94PPKtlK9Rf#C4D^.6-!PS3
%D`5%Bh*iS`Rsb!Fl-$QB(+3!M&\i_%['T70@ckWso<Ga3Fn`lU^H>Z@a'B-7[_Ni_U-/#&]\37*!M_cjeQAo$-MMM/j^"WF\J=:1
%:K_U^=BjLZq/g+2[9j`1BU]CW\0gRB;_+5i-=WtO;n^;TghiN:'Lk5GS=b4Wr-"dgMscTCUV1Vkn*J_ZI=Lk]e%&9JhRL7Rh$e*Y
%pjWAJ9iO>/F:VGZ;J`Yg0+4GBn&%=Q6b`7(M6XT[iPUGX(gofZ2dXA&h1*1_<dXgPm?Whrp\a,jIJ5.\**Cqu.K*>'qh6pDQ/)Cc
%&=5dC5Dg'/qs\1s)sam'=gu-:TQ;JdrH^6RW-*GG3NG6[2gdeLo5\jI;uQO`fkGHao_R]L@nH&^1hLJA2`$W2SKL;(2=9NE[Dr[C
%c>h(+;9eO"&T-$']2&_/]E,uTXZp1'\Mtj(Z]jQfmi1lGfesGV\'qkW?rBjlq\hUq9bM!NOt]'k$I=H:T*H&(,lmUBr_%DW2h,J!
%_L0k#=?3CX#G5>ZC=LjACc:]$>LG<Gg\^SSiI`_81:Tfjd"Uf)8!>gFH#'ZSJ"Fs3:0$bDR0HCR/gKQXM4,u`;+\BB=L/YKYEpS2
%G<SBfW.@lPfiN8Vq17cq69Or?Jn[,E(\I[>/KSCi;;?N,Mno17Xafj*!Ja]96OufVON:`PliZ%8+!Z0o!tEUMf:/8QT+H8&=oOp&
%h]/5Sg7PK*4qe=Jhe!ZN*59#[(\R'oK@pn/5'E.g`e4/PNa*fULE_`R/g$cNC8\0miE4JjHT`2[%\tVHkf0C>Rq"e`;*06>]@WEp
%^7:M2bl#'OknZJHZ?*X!]I,G1FuT.3Nc$3$8e0AKe)MR.KtZGZhO<,pJ$f2iXgWNS>*!tPnO\/jW,kR#CuGXc@I(/`)IHk,8MBcE
%?Hp]3/ABbB]euDDRA5n?rTVn]:B0S.:qKtMMPaU%hgSmHIU0LpE:iYf(n7'X,Yqa\,BA!#AI1^k(".kO7^`[,ZaWZ9I/;b_H/pJ/
%9:GM-ah;nX]B@6%"adsK_$C5*V9kd&*).]S:9.%DKl>l"k3FP0lhI'MqQl$8##9DEj=IC`D'#t&ZugJ8j[M0$=MK$%S9#W3glksS
%i4d=eqLe/N2"Y8C8<oJ3Zh(M:jl>pu36<;PV6r2Po#o=(j6IM0"AUauWPF9E2pJ`HMJb6[9=uD-:3?8nbf.2NqVL&g>OLkRfj&%!
%>FdB@e+kc0:D>g;i+Kbdgr'6F_dV8dq`R;AJo0**]mK]W]mYpVUR!I'StRokI(bg-]D9qQmr$^K5PtAlhOa[dF+@q2/_TL(A'uWp
%VVTJAX1R!N.h:(\PQJ(e:E/&$T;NV!pY&i(B8hP&Q3@_5A?G$m%MG4LEd@IJZLqpGB<1a7^)u8"'Ul,M?pcP:Y.@#:"gT[67JLD9
%n_iHopI9":rcmSEl$7b4Q0@"IQ#>)UMp909K?eS^c^L^(dYGN$-*TY#dc=Gu,l=&?R&agNRB#+3iac2VfOMDa_/FaM3o-a,fD)^q
%S_T<R;tWV`p4=j\f):<?8$c.1B,MPIF.N3(ml&M$G)PpUJT9:[0#[K'dn@;/p&1'=%%hFn$>9q5HX5CiYC:VT^Y_7,G_:&q_">LW
%g!uq@cO2\1]07]>Fr=XtO?[ldkC[F?STjH1'"c1[Qeu^'Iq=>%MpV^,%j`H:AO:EWN\pT3j-Dc0J,4hGU*lb@T7:2ra8>09BAfdm
%pNg\#RRHlBAE/]=T]g]MA$Z+#`a1LUp__T2^%oBD@jBC2Zg)0U)Z76fpVVH`^=WD_O:t>u'Al+I0-j(;D_7S_O2'29J%2*ZYQ0P#
%mObilDgk8a4Z-HCR=+_,Ys%npAmiK'TWP'iL`J.0no\sPTQ(K4qE3$T0ok(1XoJ?A)FZ3\lCU0,DjBOOX+HaPbr7;5r=9%clf8nt
%B\Zh+ds)4HPK-B36+ss;XZq/W.kXWR4hJDWg6p_b<:_BNNc*\Wos`o!bml#?5Pt7H?`)+a>Dms",1BhT_Pa;.b>ITWg5TQm16@p&
%4dplmq=T@.X_b!5kP``<[b74Dc:0%lZ*m;WfU8QF&%JQ2NP!B7a$o)iou>f%[2dITlg26cWV7M,dZ(5[l%@i1o6._Fp4V#o'Q44.
%W5[&AO8"q]5%oAJ8%5CBD"?U*M[pN@$V*-)(jNa#N-+A+AcBHb7HpF6eSO?t0kq"j.s6<Oo3)<P>gQe,4m1"gETo59hfQ!%FM$^@
%=l2HCA@J[<m>gIT)m6N9E!J9?Jc<W4/cN[Gm.&[X:t`?ZDf!2Pp\M"EPQ"FkhZ'>uhd83<P!/NEa%tL`+'72*r*f]tZm21+lCEW1
%J$JdVI^aC_7DipDfcuh0AE'FY_TcQ]=Pg[VZnK%KPV$G;X@\q';S!`*H4M?l[.GQm,o,BAl](W;$XB@9p;e1Sgp5'@Dk2!1L.8n]
%/O']L0Q7?_MH+IuH;>l'g*!uAD=>.%[/[Z0aK*9+[`_4R(p6uk:9K5.[H;pbV79kgn]<1$Y)_Fd#\4M[jl4\lo!ieR4E"nkgZ8u2
%4"R=2LK6NB,f6#+3jE\$[bK\R=4ZHGbBfp-A+TW4OD<QV_3Ga+]6D[@D>:t@If2DXOSj:6b*C"C.?#aa;HGCnk.0mbgu2I.oBS5Q
%^l^S7K<*T_=UFhJ!Z$(#d!ac8Lga:K:*9i:cp^`KZc4<YagZ]@pOm@IXVu7B?&Vp.amK.g&3(nJlq:VXM+;A)E*R"-a["C(CG%.l
%T:L0Ll`-22DMuc)S+=F@5:1a@i&Zd:VD@oL69]9^KT&n+:f1pAe7,7UDp'p+C]KZYpQM!sr9H+e(a`paT?9!%,%&@_A]!MElGlP)
%8PX=no49R<KM1ISl34UN;tK\UC$VR9>e]':M,G5_N8V4SQ:DE\WEcU,ZmbA)nT!FVZ3?&um,ZcO0"CCrrC<$k?_P]@><Zd#H&3bb
%fh0;1'$iXL*^'9*0As-oaZ54QjbsC<9QoEVrlO-9<KH&HR)Hu'*q/s@f48.5oBMYuh+p^I6;Vh5Eqfharu>)IiO?O7jJ,!KB&ees
%_q\S]:R'"USJ%CY[AZ09op9r)JY;pc)7g:PG$882>Sd)apk`@sWo8Bk?fI$]UU^SK07/N?;AgBVo8!t297$cgQYcG;F:F,r8E\0L
%!F7@CKqCa(2;PmgF0DuHqE)qXIa%]]QR49\bEjqmO?Qq'*oY#b-.cSEHCa6aYG9rfk$<E9An@=Y>\C6=>S=_,7b^&__1)9pZOP--
%abpI:c[#:K]upsS7ZelAhV%s-/lQ=K$rbRX3khWO(9)r2JZ%h;X(niJPb1a':<g-=f"q10:9W@8?4eA9(1*WAq6KA<d*ji33aDM,
%ns)[WXG+;,D;=T+GUr+UXjX[d>Z2%.K)+8b2Ziu+H.=-V@i4XfI>3D'_ncN&kR>MQDqikPWn6=F3V4c615ttRlO>S:Mg:a;bE&Gr
%nW<*6g8IEBM.#8JkOdCKcGIPH!tPP-V:Y3*g[]l)D^20tNs6R_Hf^#]jNd+#qp/"48r,AH'sE`1g,p7sdp.2(\(9qa[^#MR.gVp'
%03f3b'l>VsG-aU\GD9Th!qGik7D-<!Csun-s3H1nMYn:<J#]4n5-=$.`]m<H#&n_JTDo06jS4AF9g!:*g>e\CXn'W$SM.[bqfMe@
%fmER+6@X?,qJ?+gT/@]#(Ym0bUY>7oFE6rlSRmdi3C!;*RCr@f5s.BDSpm<E0lcrT&-(d)B0U6&mBrr5l@I1SZ^^VkD=bDdGN%fC
%Z_Qc;p/sN-C-)4Df<pUO`cmr?dVch2q9c21gmMI9^,Tl_R!jHoBG@%m#Ptf4?+sNi^(WYfmgN!EQ#&VZE;\L\O&N5[1qC))f/N'o
%k/>a9M`6%LleO3iBAT__nn5dfIJfThGC6jK]&bQ^deS3)_>-625':IQj*$&SnQUlpDG8Ut[ND(T>KV,QD<\c;kk=:;bbqqtPAp[f
%H+.hFVj5c^fTk7&q=tdLmG3?(dlMdh4[h>k/V+(;^>?MJnK-$jC\p;eBT27`BE-rdJY&_ccd&h4o&071n2HSr^J<ccq1J7I7*,+o
%i(Hk#)1UE3pR]/mDA23Jc6"K8@pa"_+WGg8os0<j3i@4*I]rq8HMa?7Lak:[p$N@grJLTS7]CTO;P>2&dDk)LMI&hu8SkG!ij=d:
%6^gDtUq)q/'t^jDY)*0Ii+]\cn_5krko7J<W0$P!;>KuIWpK_K52>qr5?qBO]loYiD:5FBY&_H7RsG6?;ROf=$:1CW)aJd.M%X08
%8QF4M!f8d';D%0)5K9Z8TXI^&EN\S:dc(ZiM,"(K/o-ZHA=OI8@n_5B_i.0%<+V>FVAe27)$(WjL$jV]1]We8;?5`,9g[%P<M]k.
%X/VhI!+j^g+A$5O1i9=E7tJ3-eJJZJT;W`C.L]0D+?gth!THeC6P=2V^tADjBJh`TZ-J)ujT&b!Rh*f6\%50O(m[I4G?BT"6k(0F
%'S4+ZU7L$uC_DRUJn1g%e^VUO-R*%==[?6Vdhm^gN(TC:!YU>&RFYHg6np$&+<Tiu?L);!QjgJ@$>M=9"Aq?uitPpVG#(c/!%cC:
%W[c"fdl7i$`c:&?8UQs4Y8L(4K_5sD]uMlZ%:QrOc-Ym(_)<Y2&R3`Zg*qu!C#*dG$hGh[5TJ2$/`%/g7gY:.896+X@q+jr3:\s2
%,Z-U]m56Vc?qo$LA/,FD>@goG(uYQNQWfL#dM=$tAAEkBC*?;>?\8'kV#j4^RKAXuN"n^=*Ntdn`tTX=m5G&7/Wj<]`d.V)A4-EN
%e\JTg=L"$C&WjXO>lld7EPW40N1;A`faK'@S#R_OC8RODJf*f/Lg`at&bF;%)7?e387H+WR$>[f.g48!2$-W#JHW3O3=%PmmBOXd
%SBLCj$H&R&G<R/'-=.g7')H>(6uc$nQ"ZkR-\Ch3Lf[L97tAmjiZPNgX"4@0Q'E$F+JlmMME^UJ5Rmid3mAT_pl%CX]O#'61^`$:
%4Ro8GmA_uOT,:IS"GqMBA/3)rA9!R>V+'`VjC\qT\!Mk3lb38RT\2;;99G>2HEmQ$JR_b-6f>Wj4->p9r'UC5mi8[08(^Ru;C"pi
%>ntc;-d_jgNbkH5^f=uHibMNq6A2IR0%%TjoN;Je\;iF^`=gO[!Dol*ZCqQ3#r-I7`W0-]=Bbd.1=$g[Q2?.`a@qo>00tJ,P^m2M
%V4kbd7^95n(Q%b[U<^<o-R68sX/eqLYIo5Z2ctM6d7>Dk&2QcA-ha(+(n=-dG(_,CDo]lEO^piV&sng#_u_*O@Y-TfQ4D/UjOe\r
%+,=G_9J/nu:XW4^NZ@<87?KIFL)'P-$*m#i3c`,'%8/22BdGYCMBu`(+XR?n'n\B#;B\9CP("ZSdH6SlJUJ*C8-TMWddYs;5qN_T
%>QuGW$4(Dc#,Lh%b$1Z]:l<a\+"NUgQE>n#c;"A=C7>aYer7h]Mit:unl&3n*p_:Z+[tN!U(YL%)XINBQ6:k>J;FO7#Zf'O$3B^*
%lG[YQLi$W>89uf;Z&h8j_(LisE^#FRL;q,C7^3<mZRIaV]1SOuD*1kP@e1PFS^(n@J1).a&ogHA!RNli7Doe#"O#=L%\OL*(O88T
%b"9kugNO2,PZ[Q(f+:l,0G0uZ/t$?m'#[.m[<P>*@f,/!'gO629pJgp7e.V<Q:JeA`8`:l2S9GRq(^2$\()?8Cc!kR1'C:D$[<s%
%g0S>Ujp-L7fEAc87\dFmp-hNn_?Q[d?)Hd_P6rjaL=MuU9kZs4?lGq(%W,G`l&9E,Cp4%O)V?rBdi<&;D+:JLO>ms\S%]:TN,+Y6
%6d<!g6P-"#L^hqjBGM;`5KtK/:0D?6Qr%/2CMX'j_Z,3AgF/"MIklAR[0sdkP>oD;f.n%cJ]+5j@K4TicaPs&F4*C+K2QA$;&mM4
%kn)3BAQL"e$4sCPBaSB[@nmBZ$&"Ng)fm5f$Q(H>ooI(Tp_js;6-I]<M.\19//s`78e=d)N%BOe71sG4OKSP_`gl0=-PSO3Lp=ck
%7gt=cl_9%p?VeBJ5q!pbLa.+qC`^5"_`!c&Zpke#'^M.B&os`:',D[p'2?^c[c,m3Ns4Oar:.f%a$aMb_e]F$PDE@^&BM*u:I2ga
%%mUf7K9o]EW+R36WLA>F1b3ZgT)qEY-4,jn22=g-N'`a1TON=$^nei/n9\VITp$KmEek0Fi)3V$!b?N--!$:##K3rMbAC@0P;0I'
%/AWTg%][EN*InnQ7AM-KW9CHQ";;!,NJnu(NoD<4,5P:Ib1PqaRbG"';$OlJ21Z13.RZ@\KV^6j+KC<%F#jspJOG;q%.%Ur;$3_i
%`@<f=A\k#bl#!2gPIsR]l8SftI'18"AEB6KL:5G%4sea7W-OY:5%_-i`m=bMR<[l.e4\:$L!JEuJ3ifUnK@(90>Q4*HTQK6gl1r?
%BQShOOUjgK,[ufU@B%0`.7-4h"gFdu7Y.AVZ%\E%h2A$8@*B4+RS)jr+Rk.:;^N\Q$I1dCKXCiT+`K%$8D;c)d'C2*.`4Y0,hB'3
%,DV6c+O7V0iXR>$:Q1QYXi8Qg-qqeo"Tq^<$cJ;1_R1F6NPSX$08:UKcQObt>`hSZO=Y-!LJd=l+9b.E=6BY'7.C(EBu\i/<EKG+
%8bW?-Ot4CU?I5JsX;Z'd6\LmWBU::q@2k]Q:g+r-/2A40&<M,[iTQ:MYMk3B0T"F#'8&83_%Di(8gmB<QN`&>\*RQ86q8Hfn-660
%S<Y;*,EKYX%Uj(!M_u)7,uNUf,Sc)G<8[[d%8MX@Jn%:o(AL5$"t-c.-t6*7KFFr:jNAah"GjoQ#bj-i#U,H=S1maeU'YU-J7PSf
%<'Ns"/.aR)*+lc=)i??/K5"4<F/i]4gC1i9ZA)aA7NnEk0^]"('0QID`^sT18O"A3,W6fC,?GI,h0EFBGWrD-1)fRl,!^i9IT:pL
%p^B\#>>#/G!2qCjS?3/1T+/dPFT<cDN:Rk]n:3oPPG#i:pFaZ[$6[ZFZ!(NX$l.qMPH[XL?nEL)7p^/nK2I5\ZEYOs"VjDgj,g\X
%,7>.;7&W?lR*JrD,C"mnN1:XBW)O-M"sHRO`Z4jWP,&[OP8[ZH7apFW&jW^He*e`R0a=lBM`#J-Ok-P;8ROp71g[gtc$<L>8K0B.
%)Hbt$)CF:F7OMQ74-EPf]d6.dbK^E-@`9cU_^S0![,SKk9H^HG/d2&+</m)1O<Lr5<fu4k+eX`qO_NnA!hB<j>(C=Ed"=-;]FNXf
%S;Pu"U)7>O#)(2Bd7f'#/h.,X3ftQA3@6bC]+,B*p'*)/UX1_)<eQ#fK*g]e3WgX"3%mk`&u6i0;Juf0.1R's+NimfP'L;#:7&(H
%ai2W-*(Wa)a%U,M,,8lQ@:u#P#-(JYG*7`e$tV$&H"8?*Y*27.,iZ0`+AP@>=@O4n5eL35=U$jA-%-?GaTn\+)1#.,U^<PF"C+4<
%=g:p;:28X]XG/==enC3JV(L8Z3atIWOVOeeqH+^hk$!HA4$dti!Xfk_Pf7Xrp:m(l6e'+NTQ`@KO`VM`U?1Sb!sY*TCgdVUT1%IM
%mmTa2+@lTZ+2!g<9P=l1K$#cH6Il39?d+m'(<^L:J0A.?H6ifZ"h2;Q&*"IfdP=G1YhEQbCe(8QplD?%cARY8YEIDnpjcX6phRgY
%8!:>_X<'-i=;[6tjd%lj&Z$'W3F+%!E!V`?OQX]8%`rNe.1J^`$$&b:)$=Dh?u5ommT/CB\Kt/-T(RLiIL/n'UBD"+/I`G<1l@:m
%@YQ]THBMX),#q81M=:UGPT0p`+(>H5"9paj"LTu.+7G(hQNDi-.2kS"ZY']$7d'r9@98X3P-S^3R/u[3-TJ?h6_#"PYR3W&Q'AZ9
%]H(.)EfS65!#3Ii00DA\e4X00ak0Z<W/&PhJJ==sPW)/VCH$$#)`m,C"KBd::(9e=@rJ].jBbe:6Ce793uKY_LbV)p`4:][8jMM9
%;V"?rZ&!80FG7+JGDKI;*-0,<S]^fK*,u<h4JkOib8,\lB0:f?)QOL:\ZZ62L;#+"VcM"W&<DY%J_(8@q=kYfYWG`J/bs02r"':7
%fMAn)7UAUINS/d]-l-_.5_RVg_a,OjhI<r&niC@oKse&d$G//-p/,Qqpe`Lt,Uj+gij21V3:)pZ4[uCY:]p``qnhI"jMuOVMu_6`
%:'<uOC9hOko)RL/0Q/NW1_TE\7>+HPa`UB!DbEq1D^GE',F'FA7B.sT7eTER_ItZD"$kolWM*H$W]3.@/<?2<#QMaa^tdWSm1ine
%TIZ**Np$%'JN>(BOXM<i0p:NS<C75'Cc8%j$qBo=OK\k@(,+(m6-KIrECgWY@&F'po3KRS^G9kjlAF/"e9<moTi_NAM-Opm<e`Gt
%:Er_AjR5QSJ8h4bm7)X8N^obPFGe9e/Pe*1;g'c)Hn0Br)%&S:@<RTu%0Fq+;&-khb?Y]^.jZnSEd&iq8UEL98"O)s&0J'U$DQY7
%,BdWp0`O1&4G,a66Tm"/GqX$o=GG:\Kod9q34#2S>^[c.$\2D/$fs@"[G3B3^q=^/4*_ku0aLDeEY59GV'l1E\BYH\16OMNg[Q^[
%\=Q$baQf0K-nI@>WfBtE=pLi:OI3M=3g>a0&-[&^YLF`hYs?Ef2&/l6ET0ULp^8H`S9Zec!9lHg!0L5PA[=AR8gNmlp;kmFP`U>c
%M8B/kjA;^-9(0O?H\qsFi]&Y]Ss1fP"V438(`c4L^j?P`*=:gE.I[0>0HgT539&ma0+M^4KZ%AVe?o9:!O+%M*@9Zp'mbHTZ2AJO
%qZ<EIHa<iQhJi,(_b"l.N[.`CZsN=/0l.m#'L4RWP]5U6:0AgX]bDqa$?M<gFBLIg$59>Ib//meBk@p1@ZNA:!_i,=5g".B#]0s4
%U6+JZHr^>"SN9Ml!,=>4EEh&r>)L2=)\.t?YWr;;!-+hHK1HHn?4C\_:c:S4UZ."did<s?#ng.M!,53V"(K/S%;4U8JE"pGTp>m)
%1FRum<#"*1Yn>,j>V*3*SkM,7C(Z)]2?h/p4r@iLM%rj%$5<_5Bp=3hF91YD65`$<d$6,H!2.\#UMC,f!OYtN:Y9%U.5[C8TVQH5
%lfDYN35'M:9fR%OkQ1qp.3EXXp!0Hg'N;lh@8Nc:.A]J=TDK7B9*lM&djP[S15"QD#15=O:(ELc.1h>9;k3a1:3\l&;oL2+(QN#>
%-p0u(QXfRdik>bB9ge<<*%Q%"N:6o\/Mhp5U!g#Xio4oTDNHLS.$`;^e@K>qiLi-"pa2qj@:$;HrPR$bAHj:?a(HdsZ/M96oZ9?>
%Vg^4+A#iQg#u9IA!^o_b"I)/K5q'+1a5@)'9"5QO5]LfZ2&&lQO>/=5B/*#ULgk9FT0RHW#hM$qK#DE-_R[74cA2=]W=?dhpaKk[
%c[#I+k6V7o,RsDi#-1]K=HSYR!NB<OOLQTW^lQErY6]fD$%#5%WH:jFGZ+L>S-Fsf]>#`,?u3d3*?+)aLcd+]`c9FW$Qq/PiJTNX
%**`IS`<??4\Dh7S,69j.9OOcT1`[^q_eF12/uWgtU*N+VP)]Raa#7H@@EnR,&,C:V4.oNROB0OIkf?#n`BZ4CX(M_)@>l,Q1]q^8
%+u#8l[DK3>^e!$DdK_*%PF1pP/.R?KrV>.T883tc0Z/Q4E<&>X**X0Z9j6Hh.n,&R%q7<PWW:^$Ke&%>+TNbp.?A@cG$9JG<4f_X
%YQ30n>.RlAi\20O>>6<E\:P7ZVl(9'7*KY570X&hA.+a?<X%WI"u!k*g$o)A)2P'Be<T2>0.:6611*N]ad0Oec=-d.NNEZjZi-eL
%#-UWYJsXS,dq/03nF9kN/#[]F@rKl<`\rG,d,,rh$PcE6=K4n<C",ns7>e"Y'GLn7Ag(1DiX?&U!Jh2[XpO55K)n6]M<GDHYG>A-
%+DD,3$Qt<NI@:\4"!*=#+K3;I@RnD[@%L/m@5'.%A=b-.G;6+*81-D&D]+=>cq[O#N0?sMGooFnT]%"BR"d:Bi&WJ<JLd1NQLl/2
%A\/pJcsP&o5bPe07X<;IAX(*TnY&Xj)N=hf='G*LYV(go%nJRt6HLk3+lmn-;A_Ae3A/G>d)bP^TKG^A"T=N_->&$4Q&&Lr0T?mF
%UB!)f=<.GMe&45F/R`-'5QB2X[^=,ZEM:$Xcel89C77Qs;#s/hA2#T'a<8U%=G.(m.MEXk)p&-/&b;A^30kj,4N9>bo&D^4ViV;I
%!<e\rV7g4#"rrurH<)N*97UH,K#5\@T)<r':iRL6\[CL1R0kYsbmZfYJO)uTeIOLS+d/W:Lk:<>d?VHGbGrUp"<*C5hJpUQ_*O*<
%-R-"h*a1G\U6(%NOC5B(VkM!kNRHOjAi^sL+rh`TeJD?+0d1fq)&A(L@\4';&WSC,i,^`lPp8M8&<-s^4DOa$1d]HKIl3$OYc]aH
%dA?hB1nJ@[-g]O9Hf6Z^;Z;5JKS1uQd,9C=UD1Cn8N9j.HLD#q1g1.?J^keJ0LdgAMS2:G"9=Q&HcT^6kCa*T,*C4hR9-Oa6/<,W
%"C*4fOUXE+UB7S`&HbbO<o'Lc<lrH/JdeHp@ba@;*=R5n_;\?TA/O6%%m/m`PTn4qH*0M.&?NgARjBIP",)q2$%cneB<mOX0L\M?
%B$br%QQU$C_D%#KJ.0:Bh71OYX@<D!(&!PB>l16K0bRP;nG(!+#`]?-,tH-1l"IWW'H@9p&]ff+Ke`fj';l_,;R!UiX!/FI*?X^D
%U]n_^$pfgV#R(dfNJO;GU2@Di_I[bV@9cM45_Or.MTZ"):-`o?GZ0ge',m^cP9aKlcA&e:M-*E%HH7$O2U"T7ZI)&I$ce8S_.5:D
%@-kFI.$@ajfTB9/m[UWNJUpWtJT2)'p5%XH"_a-3rs$H7lh8qs*g%lfL#XhNYHit\$;"\p//8":"Si=h87upkSsohj!XX>;\2(l\
%Fc\P77&qbe&=YZA)A[t2.`IL*;j#/E.ilc^;q.mg8f=&sR%&B=rYI1hl1?/cFgspe*eJOibY$jT']MI1ThJrU;.-_4]:AWJNs8E:
%3D_PgErp;/,kGK2NIQdr/XN!$D@1T!YigZWK!oD,/n32S\-0U(\nD:IhSQbnS21:TH['nBGkFU5JK8S?q#Z.sS--`M8_u!eGlWF&
%,R[H=>sKZ*(J:/Q+B2s+'#9`Z6rtSs#j))$Y&]>8J)uXYQQ-m=#5S6rfoa+!5,@HO07luai,Y-S%?$rGUkWo^";cPI#uYqP/@$oP
%C1IRiZANdY)oRB&NmX(R--VUJ%Q!jV7b7E;FiE8%aqSVA\M==01H2&DA'*KHnX)Ba3?HAX97b.-`@2?94J;dDB$O;*aNU=r=mTKa
%A8l#k$;5n9#X0q6&uGo)R+-j(lI=cncPS%LU.iR]S$t!V2'k4K;;pf;6Og,N3g+i$M3JVR+pFF*[8q*9/6D3bOs'J'<.P#tQX/ML
%.3'Vf:tu0Z1/WS33!sL8d[5E<#"Op,[fZ3W9Wm-7+\>Q5n@;hJF!bf?;la^<3;p(O/^KU7\2_9ZRn-&HZ6^$(\15;4KRMhe'@MY@
%"pa5YFkon7rXJ/WQRbp^OY&,#R+uH8MoMie5e8ct@hV8;i*ahR+TG(m04fs(kT`k3GBK&:plW_Z]+S4:,(-%\4KATU8du$[7#a%Y
%e;7GKO>Pbd:q4FiHiW<hU0I^+4*$bS!/->-%M8o&V/SA3B#V7A2)nhh"sddVnmr6#EIs4Aa`@5UD@)t[+oQ=U!JPm4-4(L@&tB;h
%@e"pm.hF=#feT^Y3?MA>a9=F$/MK]e:82\V,k5,C!C%f6m'&rsr`H<kFeMji"\o=I7#!nB!?l\40qgM[VOBLsQ6WriagEe\"M+(T
%0\/RqP>^ra,iK[M)+5<-aaKkq)6np_>&pG$74H2i<\r%aVd'B=C-f,"30FXt?l9]59+e-l0`h\_F6"IT*6$n::.A')#_;5m,Fn?G
%"aYnineBBMeKQs-MMlO-MH<fV),Cp:?!S]sd@o]#C>gb:%j_9uBc'OH-m4/%]180&!CHIV9',mSJB%I+aHq:&*2t*;P9S<Q&IpRY
%9?YS=(iEZ4GG7`,V]/6s9u[H2ktp1WiQOt461G8YOZJp<lcXg8#^+4`)#S<XJYN3EEU'!.R7RcR+#=jHM/1mq0IRC8HpT(rCt_=0
%5RR$UN3c9T;n6]`<]1&7@g=FL*!QCsBF.&S,V`k$6J=G^qM>904#!WRFi[*5qXLF\RP-oA#?DUjS;5(c8N85G?\gH"/Fqa-88/eB
%0O&?J<48J4>l6O]:4JP%.3)22Zm2D"[6?d?gTihY<IdrB9.f9)W>,QoOM:qV'OWou.fiSlVhY"<a?lR%V3ir%('g-@JDh1ciQIa:
%?ej-$V9t4Yo-Iq?YfpR8CaUH0phs0%3oiGsHVl3;`ENh]4TMas%a/Lp)'+K^@"P+p$'E2k6=FCM-b"m=\ThJTH;<uj5amG'&XQ42
%&Hp]_iWoV3Z1+^o8*c?.NL]`jNknd8=^%IT$O@7/,"XbYJ>h1Zjj8U?GB$\`JSlmU90"@3+FN7'k;bMKOYu0/=&,oPOU=?f^)Rt;
%@UjDZQ@tI%"N@EHJ\a9\Bdks'>'7Q&T#q]i-sa3--q+PpqC#V++YS@!1(*SkWZu4r52YFA/!Lk.GS?D_A$2Om<NE:D75+IBa5N7"
%0E]Lr;!"TR*o-8p$BWHcasd5fWgPjH`=.Gm\R<cWTpa><o+en[4>F\VEtfh)=K3X3$k\hu\O_Ag,=GC8PSV[?cnOPh0<!BA\8V^M
%-kF8\DNZ\b0TXeY8hH/*%'U"KPu=T9K.M^\XBa?YOG2WnaE!!5ZkC\(:^I<%b"YIF84gcDf2I"ti=-tM$Re_:m1c4Z9C?1F5TQ-J
%>mRU7F)jsW]ZVeo4MQ?_c@V2u$#+o6@\q/.r9'Fdnl7u+i.FY&!5c+7h.emq&?u@>n*sDrKHYa'Or'k._E=s;U.g*#Hn3ucLKha)
%:q/ca]Ff8/rZV2%/'/)&Fpu?Z$k1"J<<CUIm,>#;Bgs1)&7?W`WJ0%m'Mm\:9e,7ZaDmu"b**B=Q'O\j(StE_PT(tI<`*ODKXQ+F
%6cq]7;C"]*J.a47WbFpq!lm)(HW+0pKl[F38;OubQ,n>bEPu:]^f3bnq?n^SfH!sHC6,d,L.7^UK4<"(C9Ic5NQl_p;Sp!*n`"4%
%;iis&"lsXb"d![@!Q+M9Cc?KgA]2o'+^4:k.=Q19Q!@Dr?c,a,9.OO0a7jLLp>h3<kl`j:n6rgpatqY4S!l%'iIqP>!gTDYRlMbs
%Ks_JDC^I[&:aJ5gGP?>A`Ipf,9o8rodPPAi3]qfjW8ibO5RgdbHIf="J/lE0#4Za\!$sV1%Xhi1bS=KSpX2"^P"EWhOOgWI#ouk_
%W,`L@7PKgT*[s/_%4NAg)?SHTr1oJb1eVdGJ\HA4"Mk[k7YD+6KdW>aeHg[<P`%mf'%L4n`-maRnp6rP?DGl@+_oI?57Ags!d9b?
%,X=4r)jqH["X(?m_&t@&A]'e%$ku;\,rq/@R4DWAjoj3]SBOTYX/Zl;"F%k<g]P]r$(3b8@0&*>q4`K#37hOpW(]TW!1?CC"h5&3
%Y7[H42FUadqJ*_K$^)rL!hnGfE2[9c.5*>7$BLt`W]b8ZWq&;_5kssZqhk/[$<.^c0/&D@Pj-)00u-Y:7&`FJ9[$um*1/1h&sA'L
%Td2."c9oFKQDtBpm[W!!EF[,pN,c?<ae/e9(TSCe@`kg7Ea\8(KcMHao#iuMV)XW0*#=+>\<+p_Ol-a=465NHD&P;P@pKX_>]#R:
%H#'@YjT7?C]hMe2<Q%OUYns@U>pO<$"O0afTl24-g#*]%=>cmB\\JSLMm=YJB)j.688LTJTWC+-.Y&0%Rnud-+ZuEh(dJG5n_dRh
%VWMYI>]gos+MJ9qOA]m-Yi\J#0'4-l_G80KHS26l9p>oS9K)KD)R,==MR6o#'mL"\:>g+ek-A?J0TDn7H9o^>JKe'X1>rd<12cSP
%*#qjWk?;[,/0rdd,6\Yn7',HE'a'(#1m6O$O:dVp$Q>s*"\>se#uJ-f.SqihKM'ME'"e:%%N\nQS8ub'E>0%cfU4VV"Q>YP-r9L_
%(aAs<leV(g,cp'S,cAL1Z\]*hjQ<"t[`Vor[Z_%3W1]F_,>"CA[p!L%o8P#]l;l?e!G!E-Z?8.9dK5;b$.Z.+Q\@6@4I8ZZc;;L&
%'Eb%8N2\/,!N*aDI"33'=pl^T0!!AW/dbF/kPMcVh^:Ge0bZfa79_c$rXHN`Dhg#'NTGEeE)qpA&=HrX:?;T--DCPN*oaNMK%QFR
%\jYi_<L<qmcVRe^q/+$B'0S,5!(h_u5^_:dp]dkQ4-l88bWh-+<'m8="Y!K5r&b>D4g82S%K2Zi!qK6.Ne2m3n9o%<KfFZ!'stEB
%#'uL95ec*J\_nAB[PN'p>b'VN0JPX3QCmg.H>C%s"+,XO$2?uBeU\sIP1tkO?`"P%5U%"6$QrlFQqu+.#.Yi]HqQ]=k`GAQ#8#5]
%5C;k)X%AI"krf()i@HtkAAR]#j\0W].fq!+--heWDIsgFgXAA!2?3V>&T!UF=d<,TUJ^4gRdRrJbgb-A77Fe\eF`RE*0W./F-'T@
%^RqA]a`^sV6B^L]98a9!8NR^1Hj!uHj`57hQM*?mZ1jAX+B(.!#])&UJp5ose01e5$i1n&k_hNr"T!-)"pY8#RB2%&#ZJR%q'g!W
%'7<$]52\Ncm1H07LI2+MLSl!FSP!sLI.nn)F%e=3[<0%klh<lORH@8cpYp@n"qf8Q/5pgO2(C>*1a.R.AfoF9,H*u,CS&ppcg-FG
%?J@eLo5"&B0jJ0#4ba0,g,67"#lp$8EQEXG^ZIOFbK1)i%>S75"gXsB/Z_7K'rMDQi:l)A<NEBoRXP`59nhMuZ@G8TeJ30m];lq;
%3%V(>a"@iC(rfTX4,lQip?Ger9DLo368`3ZNd"9#Teog3e+ZtLftH2-<WM6mk\Z4@@5Q67q`skllE/Zu>5P!:Xrj&S5E5!W*?j-5
%X;SgR_B;^WAPo(Bs'/Vub\`6)D\mW4SHB1X<fIm*9`7t8VrfEcd]ND4X$8T-D4:=.8pS\#PTkdNrnmi3X]TWl8XamRE^O%&Ar\rE
%A1AQc[WpRX:iW_8L't*gI#_qs=BSR_Xuio8C!Tn.o[jVg#.g;F8&/^K]f54=D:.^Z@(,'3#n',9Ir4q<UA)=Vlk_!;THa!nD[/Uj
%1r9<j&=03=-qp\\ROGsHo.9/P-?p=2\W\iehut=/f!&FtJc4_mj][PBXd+42>_a^Vo-@(AAQLCIVdGg#I!9R#^CG)'W'MsD2C@FY
%(.ft:WG_/I2I6%KIHPd"n%*QXcmoPq,Jm*rPXgV.]#\T.mmOp9D(Y]KD^)-@'fT\G43TA",,r#>//4Rk&;6iKbLAk!<nrg,*&k@d
%$(9e\,i4qa:&DR':k`mB&P#VP(OOq1DR-ku8(D&l<_IYCFXWFTKsef>d!2dMGYb%G\R71aNgj1CSO?TTFf3g(BPY=7U>"jdW$GU_
%HhK;(C2)]?VF&Sk1P,e8.V#S'1bb=H<G;ZVATW_iK>g\Fhhuh^&%eo'*.HJ%[/g5c+[9,J,^u4>BnY#@cN?&_C7%JQkFgAc*&UBr
%kM`e%Nn7jqYURrH646eah6X\mGuL2n4X2Xg)X7QA%'D;jfif*7=0)g.9O6;uCXug!6kMgA$<F$)G!8Rn<5CJnhRrSc\n=cHSZB<9
%EGg2$RW<+/F0D+fM;\^JL2"'=/PWK5h=@^A4%ZZSagAEB)X/51)E%Yhjf&^Y/`hE#@8$/f:n[4;37%B5P--7a(k`I2]-At'Eqso!
%>*Uh\\rnt<!giR63?D"Hl?\iWgnifcgOWQLe2$^X4]sO;5,JrQ!<qu(ll^nM-fcB?B3:)TUR6SC9rV^m/+uk:CSL(h4NMW96e2HT
%81#&d0O9lMl.jel6:k6ddpoZ"lLqe7BXDuW61UQZ\0"4!HYEI!$.."!@i+s]CN)0*n0t98.7#.DlaeM+Z&k&*ks%Wjs,0I[]oO/-
%KAaeiWX^AA4K-u<,?q%`N;DQnS=r-jXZ)2i9])cYlGljo1c;=:[T6TqesM3;&asQDOXr7s%p`Xpf[dD#'tMui'sD3"Z\q=(C19oE
%Q7K0O*SEEL@[#K53AZ$rBs#&.kE6I*Q`4eNM8W^Rb>_Il_DJRQC6Sm&WsTrDR^5X)R\Y$H"H[p_"C!mYa-G6oU7I8_*cp2kU/F,=
%+do6<'bfftb7oBVS8'$A.V=!c;g\$?a,NMWC(?qr;@ud7;fYSh\V[,!AE!iIPBp.q=Q*RS<TldN51*4ZU-ao2*#:'(BXu(8T:j5a
%'cd&iZ+sbL/Gd:"L?8!/1.0\3I0KD8fm\N#G*\"\2Q>Bo0PROWS](*\.'fS>iR!UmkC+!+ID&`:F\%@Aj56F5$lA1j@K>k0`Uu'\
%i$!,J72S+PdA_M`=4,,[;SIW/@O&q<UgQ(::7X$MN(#@e2?5n[U*PM<k1?,9;UGfc1tsH:D:('5<8`K'(b#l&C0=?;.=`_BP09e4
%lH'kuXSMk3W>*Sk&A-Sj4-`D)'YO6..H$]AmEY"6GY/psmr:;8*XC1PgHg_W6_7h((VXGFc9>Zg9&e<<Fc7'u%bMtM0@THK-mtlu
%kr)V_L;,Us4MKCPMZA7Ki)O2SAUl@^kLBKO81k+jr6"'o)=*To\5(B%Zaq`RL\BWTcAlJ^q)UC1o\rM*hnP<r%2VT#2\FR'iVH$)
%pIFbn^(_C7lTWj]Oo<fT<TShS3[SES(0o2El5$H.WfDl^g;Z]@X"&udQS@s#)2:jjre^bHGVuF]]2rmM2nXB/gAr:fF$,0oH!LG,
%bIX]OcKOf[[uLQ#?d9.IeHHHETGiZc9rDm%O&>'jA36R'HJQOG.o!pKRX.ad(J,fa&8r@j`A6X9Ygo#pD&%m1VWA&;[>%#H9Iil?
%k0)7VGD_*7QQE!':%E^%]sr+u%NO:e.`@UJVgkcts&iH^F?O[G51-t^3+25I;H+-ZS`bX`WulGR_/[<D[Zb;Q>CT7chnrR^_^LGd
%SPMn)>/"-HAD'r8$d_DHhB4*o#f+JhObVb&7/hLg[6!'0WTE'9ZO^8ZnRm;c:<i1#YA2M7BU3r^@A<t=W)7oemHd"nm*>'`\TZ^#
%E>t.L`-c^bXnX==Hp!NJOOef/C`2D^(bM$&^097^I=7Q6I_QcN10^L(2bA[1M6oEOKVf\g]JUoa\$G8/MjeOKK]cQrqKPHJ2YbA'
%$bnCK9_?$p^5lIXj-I3c/YD1j<(?RFML<m3gqNsp\@je\V&F#<.^?0U9ofg\>]Z.;pC'OGmc<\G8(k.HD]M?p;#;Rj#D5kl3aIEq
%EL:unYA7e6;icVGCNMs,%r:c#N'*-#fI>6M6:QIRM6iff$TVpq7T],U7Bo%44baWG2K6?T^ZPEde^)"P(LYlfGfesl[B%\m^)seS
%D*L6QHHMZAqeF?SPok38'#l$p*f_Ka.DBi4V/!@s.016^\Kh[VHqD`t.aEkmMpE;9'E:7T!3=.K)+GY;6;f`%Nogq=@@s(M,?I_h
%2C`jcQBgD9-d>U\N6f/=&gF:V=,r2C!Qk(*Xh2pdUD$_QS(B2/@`ljfAC;4YIWK]t3l''+U7LBQ8c\9*amKG?FL_LF&=K:.FCehu
%"^!6teF_rW'/*s@+=oale`>OC\>:HE^F5X%@t&5[?Dd_X.B*u[L_pqPAWe"B^s/P])hW/tCs.II(c@ZV6+CIZ?0XrV[tpeZ;H8m+
%T2'nd1(kla=W!Fc,)$":MjSg[lM5alCU0%W'#DOA>jiHnDWr1s#GL^sI!%jbo;L#t'(H)O9@*4V"BjE89\p+2"1i2s:XjDNTEj@r
%G&QE*$4&P5"kVUDM?GC:0t=&IV/XCE9C]rMMFN!1!fUuIj.kX;%?dBF\la4_7?cW):D5\.S#iJK=W'uklO)?M+hg<*Z$KE,d"MmI
%diWj_+VEAF&c'Zano5;4\R+ki;t(Y%"sjZI4K(,[!E6)QU.=Z4pd^Q[r=o.t<!aB)P_tGlY0sH'lGUW(9LiC%Yp[K,Lod#!"6e^f
%7T1n/$o9<[IN5K)3f/:d7f:H#\^5nh2pd(3j!i@!Y)/DPZD59u/:,20R6N)JB<.r_n7aZ<XJA,6,g4g4.qsq5mg@%`a\*5iS\/+8
%.JGTT8A(&"in]bE"q(SNZma[qkT5BKkDI%mfh5W'+%=jm>1VAI<_*;62,"m&%)5,4L8S51#I*78);sCK&&G?M;YDhm>.-u+P@LA>
%.2BS_dcqncIS9DJHZ3<1?ru(<`aA8JciU-TR&Ve@E$-+Ps/Y_OU9BZ1l7L&ob\9E1m+02!p0Ek^NU1,/[giBIo>7ku`%2n7Q\a`h
%ZYo"JR.V-UZ!=Bk;M(c:]EqpgV5k=P01e%`D-6_(6i7a%(P'a%Z2>rr'XaDCAu]Ds9U&>a8*4Ch!4rdt<+LD?W+,Qb6af.rD0rel
%#GhX4Sg\CX\("JB-OE_Eikk@pBegA!%Q+Pl"]`)lc*%SKl:l97p2SG7@kLk5\&(_Ec'8_K\p5ncSGiXG;V@a_J!X[BGeJneGT0KF
%GmGEYdE![]<g!::0X"X<n2>8&>GoDXphbJ.iW$c)LX2h)6n!P5QQMUs-1R6kWJZ764ip#6XZ+-'@aeh\YhqgCJK-o/Y[VN-7%J]6
%T9@eTg3"AS9S?`Bj(D\QF/>d'88@`1RRVnW?Ic/oFb]W-DcE"-9a(eT7"4\_dO?-*ZW464gGRMWELI.$2#a\5gtIp"!+5U!lMe_!
%OHt2A_uthQ"`%V%"7V<1IAacs%Mk::rr+Cu$)j^1o/(H@OQ64HL!*q^EYDPI5=?.?Gm*&h\Hhp:>7-"ji-SR^k0hWs@%T4MBE3am
%JTP)<6:Vi*NA_LoA>n9`[IF%.md_8JlcVPeA)^`=QIND>3frj:f>&.<Z9HlE+jiJiRK8YgR["LEm$GaEj;a.rU@(VE4FY=b%!:)j
%>aCH>m':_MY/<0NJgfF*.5bL07a;K:37ck&\uFiiB#@jQDIYT]Cf:I,XG,Z$`K.!$YT9U%^T4?':lPm<hHoe)Z5!PI.^BUC!N4kt
%Q:XN_g[o2HJRUOcf7Egl'e!Q793!FG)LFiKQ+g=k"4G]XU(8!%@f7*o:R">Bgj.^3jV[Y_.W\4H?c?I0`l%F_r[*c]4q7^mOAF<7
%ALVB1:ohheRF'q(8`rH(=l.RnCdlUtVq<iM;A*A8Q]"P^6M&8>VpaZ)%K%DccR?pZ""CsFRA)g`4Mm8@gQ@egocQgXMg8PV@7V2`
%[oJAH*ZT,sEHZD5`2lF-5]uOY*1SG3l/>6kfMG./,b^Y`nH.&GZFR!O\&[DZ7S-u]7d2Y9-lbVOS^l3]R,1(&JNqJQ"U.<FruGj;
%3_$JTN&f-Wnn+-m3n%`BH9ia1g00cOkT1759\X,So/_u;\ZE8IH^]'03&dq5jFD0*bDm:p[8*9K=_e-N1Worb$HR7[&)2XpinpgA
%R&.sHJ,g1lKr_)`Zf8!p:1s$b=eMfMOb$q,,khBG.a=HL.GSZ]9'LV/ED8cs&uL+/-$2Z]Yn=p)g6Hos^p8-E=2H&M.\Pc,-TFGq
%Klb9o!5+hRJ&H1Ya>$<6W"G`8?4`KPSLZ#C%frf8jh6+*55*&uM>52kpe-V"*(^8V'VOKI0q4_?")J*jL[cWb)$+9O[kku4,A@*q
%_H+tt")gYg>6k4JgR*.cV%B.Q>?23Z;$2V*FDhTA8DV]f+[LFg5Tl14P`o[e]cX,t=HWG^D[5\tiXVi[a2AqW!3/sn+bWBWE\P0?
%-Wh[GSS^r?1\.8P%=IYMo:@F9](-'blkhk4YJ[>&`d?MB&>%tl*ibFe4f'_GSO*!L%hgO,R'+guj4n1bA?9Rbm8_ddAa'D3K8Z)k
%(OifIW?)d,n=][:Yiue!`cVe&JHkW&-_o[n5%`-l+[NgpV5$SV<40?#Ts$nuQ_>Eee1;g+q[Xu18Omn(%bR4%lYS08hmA>#`<ZZ.
%.[\_*id(!De?S7lHL+?ok:CSOqoi4R=aM"fHGJXFO9V0&ASHDj\uem<MO>ain$Z7I6[+[Q+1/)UMTM'U59lud#fD[#G!B.[74f6)
%mTIg-3\].un5=7UMmW+5nl0H9Mbkl)-"L2hGVH?KCE&[=WjTCLA]4hKd'u):U/RJGY6m5&ISP3FlX>Zl=7>S_.X!F&l%Z$&I%EX9
%_J]X-8p$:_D?j(0Fj/Y:KHL7&L@@UcV@N8/VBS_RdEAu^S"sA`68mC=e0oMr;gbrQU+trVkkWbci'H;%^nnNAd*MsIl*cU)KF(:W
%M(tI<j0))-N2(Dr!>bfb1[Y>K<MQX62CR9="W.W[P"hjn6"k-:fU=Y!%/DO=e="i``2f,u0AS'/MXk0PCPsoH\&m65<VITdL%qb=
%<\'dqCcHW&b07m?%s!ok*sYir2f4.%9I==uCl7Wp]n@$538-&OC8Llt1tBD"4jWa[R"eAunebRdr]47<^br]jJ8N4]c,C%=S1=J;
%O-uq)B(=Lq-]qV,l"OjR7M9Y2-R7T:#8c8fa<J?_&cgh,l4'%k5V[M/.`fMlc.5\BG<[00csM`h'!=q7#f))GU;u1h!FT[<cf\76
%Qg3'-Gs_7iD*pGtJ58T<UfsoH7u0&6K>4uT5E.2]jr8qFU%l.#]W@M"F*:($Y\#XZ]"[LH>@0[bHmd7-lG6\+FchPGTknpBN$bhc
%]V-7a5`c8T(7&n=6aU'O,(fXreL-XQ3G\hGZ;g^?'&$og;p3f`9u1*X,c0\/F9=O5(?(%oo96l/kB<d"Vhg-[cGAZ`mM_QV`M9Sg
%!-HdYf-!p>,ktt$`l..g#i+Y9E)n$p*Y@CG??fl9:4]a1Fb/7Yo"!5d-HuBggM+_+1A:\I0nr%UI(cR#e:rt[f3Yb?KGa3Z15>Cr
%Nr#GeBeNm7m?^DI9a?R5D+\D75$"U[5Z<hU%;Rhu*LtXkG9g52?u.96XtYta!>f>cm$<=:Z\.+F#\mJ<fOeeom?YSgC27/&#3:jR
%gQAS\-G%8A.jd[p2UKSBB)"6\1HkDA9<J#t,Mlf5h>N6_0C%Q:!U)9/0\_0[LILCS3>-b:_UFq.($:BkKO.Zl!n1ObbCjKPAQn4M
%pbY*/c/UB#.)T5cre4WpP2m<(6PM7Hk2J2DNNL-M>>Y\)"sSOL&AI`;J4$>SEujN3J"55H"DndnAQmN:U#^PN__$UR1jV+D3K8T@
%kasptIG<0:'a1a3]hNh<b=K)maI"mQ'+aX$?WI3_(V+difBL(^;\t4a9I$?/!1><BJp#M]a7+0-5V"tZoe$YreJ4b4MB71Bj%0\\
%X[)j<5@i/W@1Z8C93ejk:nS3]ENn5(CsWU2!Am5Q>ZDFSb5D-bZ@)PiEu[EE"fZ6gK7/m?e`B.IH+sYU:33L.>+<I8@f7apOQ'>3
%E`oFb/O4'g@U*/85QF!G`:1]PUKIRaLM53];QJ3).Q"u1*dlT>Q3U6pOP[:<eQc6X"'kJ3gCKJr,62>aCs^'lT!3:eEJk\e?st/I
%&aRZg+/LB7gU[uM=#6.#,MYjt`Am%V2&t'rd>9eYjqZos!EI**WK'GNLsqj*Xi*N#VbL`g',,S@gNbBF,6/lMb\9.->bZ\e/Tu;0
%\YmP@.DQSfVbg<c5AU$XWX(Y;KLLod^7Pr`<#6]&o=%Q+1iLN5:8WjfA"3C-$`+tE&-1A8?cM"%aZP_X@e=D1P6o[r2p"<sEKEFo
%U$&Vs7*M:sQcYl$L9=>gKt;p^JKh=*(.)"O2@ih\0FEn\h=`AR!KmH:<IPjOB=1A03(!XqNV3<5&+fhrRg=+[9)n/KS,`/rrg1sW
%s8MtHr]gG;s3AGfR"kW(0#U/83JiSo>f8L4)DJ7Q,b`(F4`B,k:L)WgWWO"b1>LbsE>3`4Wr4K_Njh"o`FHn;3>\PfF+aaJ"QNZf
%PGT_PbB;LfZoEpo[J+1"G@/QFY24b?*:@b%>NL$>^mUf/hSjV*L:YqAP7$PPJYJh([\=]$,k@qm8-oe<9ii^B<rI>4]S)./p&Tdu
%-o$-,/WPP5M.nNjgSjp$^65g(;lIpo\D0+pMW\(oldDp@>gEcOFLOH"cpQk!)[-_Fh'>G0<<r0?C/5F3'olbI?lBV__MH`cdl$?<
%#gFcn>mQi-ne64rObujEX,)FWgH+*j11R*!7913'*o.p-GQBt%#QSEK>q(S$LasrFJ%HaHW=)#QW:deQf@^jVPT??=C.kIb7u&2g
%mUj$#SBk'7e2nG-VO=MS^&+K#eYRmI.;YoK0O*7S\@jkr[47-I"Aar3Jfno5frK-oZf$G2c#K0JT\%#F="h`7?jI!T2&nGCM=-\_
%orM'ughO&@6+Eq$+>)iZT1#SOBcg#C)rciqf%m06Ukuqh^a;.orf(P8DAX"T^slfkU!%730E[3_b8l4O,5l:$FA_IS&7$Qh"^cWV
%^CcnbR[?tuXJg\^%qhtDh,RQ=j5/<:bt2E$g;f7<j,\;LQW*e-fDkE^s.mHjg2UgsEP8iU!d0tNNM9o5g4%i!`f[ZW\i1T.iSa^Q
%_>T.Aq[Wr+7le)4:Z>PN`,j/6c0+k>CX1Wj,Z*"0)n9]aW'o_\4up3ZeDc(ZXltj8@U#AJ=9le[hJJ.L4]$^lh9l`J42;kQRd(Fu
%eJV^`U(_qO^!HEd8J@uN4hBkMh"S<M9,e2QVW*km=gECT&#aEYj%OS`NNSeHs,DOjCRur60kR49,)ahK>-c]9l=J!m=oaCf5%s,p
%V*6n)aZ5C9Hc3?d#mM_Jm%SI>Cco@1b;m4OWfaMNW*,U`2+KX-(38[+^leqF_(1pJ/b\-lWH.*tLIf@JeX5:qOjWOYpI8$Q7ZK(/
%O[TqDG(].:&qOJ]>G@k7HZ&n<E-G5p5Ggdq6SJ:u<8q-NI7cQC6,fKnHRhh$b#Td&4N1<g2EX4F"4jEn#k)c7U-0C`\*5+ab,HUZ
%ePhb3G/uH!4/\Tbi]26?EIN-\;TSAt2>9):g^J@b8mR\;C\#M;gX!i4:c%D01<%;aP'2WXjJL/k;E)/OkZXN];ihc7dj2g%_p"s:
%4KmN&Wld!\bWCtiJhLV3hZ6)>h5`=(&u:[9VaQufV_u#TK+Q$!T&.0(0lM>m/Z#Z/UEo6gCJ=>7&3i"VUK4@_j6D?<_<&g:Q0>$1
%[=ksI)ARTE_[=r'DpD-M.p(thp7!&/+i>pJDp->G>(-go?m6m#1ma-hA>Pa`eOfEEh4L]*;kD2DOb#4oR*f-*e7%n3LhA2qbj4"/
%_TYA'i^<.2e42;c8>!MgU(Sb=-W!BAU%RhoTV!<0XlLYfDJ:_rLuL#lmW10hbu4:!*j,(5/t*?%(Qd('ZneTmLg[2\SCMa.0#eea
%<BhZ6UH\NH""ANUn.fN2@V_\U*Rb`]C"_.Cc#&mHhSgZYH(GUjQjQWhpm"8?bTm1X[8!s[!Y--%BlVCtbR@P>giXR1[K,MK@5CiO
%WN)Z/Ie?5\j4h0(eI./uMi%L0.T]Wb7eL!$C%Tg5_kN"qrIV,a.]7tlcR%AlG&)K1oG@k.&k%ErpQM9/&di-]e)W182k,CrFR=6H
%?*A1Q,5CTA\Q.cdRdP6bf1\:uRYki%3.q<72*S;)+DfbOi:L#"I-GY#I%8ruDX/$-;7h1d>7/`S0u>.6UiXE`n!BuL4E;o3A:<]b
%9M'm[N/2d@X;S9;r<!Er+n5niF*2^.jTb&n4MSBK2<=&5A%5p";r84`G6u$#O3QZj)^>FNAb]_i54u4Y&i6@Vq]&"S4sQZ#)\0*4
%mi4@F-a'9;WmH^Z#HG&P@2R7b@[0"2^;cT+bOgZL%JOt0dub(?0(,-r\'p[C/9[-6;#<qk5q-SQj1M"9"mK5)MY<utN"\1gSLKR"
%@L)T#8:Z.Ja"RgK+M)oh`BUOppR2rdCoEdL[C/lRUm>T2]&*K^$5LM`RQJ[eX=Iatd4*T_F\CVrM3(';#iJa'M=Zu"/H$IL:,-dS
%A*pONeCIA1B54ms?\$Uia!!O3re)Ht:6*oKoX8lGIfp00eLh*p_:'UCrJb=:Z&ljQTThMbOZ4!L<[E_CLt=8jSnQrl0mQ]tYXIf(
%Xr(L`hQ3=P`X\L<oDeCQ$H(bRRJZIA=jOiao2Jh-DcB%*0d(X2W0CN8'\pH0g9#]/FARB]&$8D'hP.m#'e.+;Rs^f-.q,In?2ddV
%P%IAk5.:S?n9&m#h'/9&hR#a8[58h&;Y<*l[7tULJqMp;S3fQFnh/^S;.\'Xhm3UphB*Z/rpf\7]82U(^Vq'Fe;&Dr,Zf?c2j$TB
%NNW3k0*R<Wl>l3[@UL;Q<'`A`F*WS<$>@KNGRLMQ.8X:C'P!Do*KKD6`nCPlhTp8N+^>P_f;I`]KRF`!F=\13poQ0,!BeVr#d*<"
%GCO;V!bZ8\S"jR'?;li::WZfI%&o2,P]:uh%bm%jmLS@OT25ai_k^%]/"+eePn1#4D'WB0d5A&spRj1":aTbFr\3iIZFY5Uj/=Mh
%GgB\(DVg\W0'@)ajZBGa2uMbhnOZN^-M14C'RFWDhRj>&JM=W'7=fM1-1XkRKh5@\FjruKEb^5I/"$>9QuPW1p&B<_l)=8O?YprR
%pJP\Toh'KGEYUY6U%V)cN.`0g7G+4A5(79?531:]A_%7PI;@4/nDXBr't4,q;F;/,KhcLCp5tu0U7N-^ZYmuc5C:nfam(??,5&n`
%#P3/?6*FObeuFc^0Tkk?oV@]jRWT(4((DZpC*mp;-0-NWMC+-$O:GI9^rRE;FubXr)7\B&/9tB,iMVr3\^E3LiXr5%-X(t%FCkoZ
%_gRoBAWLVm,*Xt!a&#5h]*1?NA2XUZ(cIlRcFqGSAkYC2WprZBgNl]ICb8:Fe+QDJll$+K-3dM>K:F9O^s=hWdEOr]a^2^kqR\6!
%,&j>g;hcj(j?SimEDA)EBM*k==U,9?,#a7u[=SH\Vc$BQd<SI.0Kd&^^&PJjW9-dB&)`W0L'8FlXbaT(g^i_s$3?>k=!Z7jg35tu
%@W,\P`MbdDq&9UoeMdCfORe/\@gfl17CsEFO-QHe%>q>VEI3S[%Lt_Mo5oRCiJ+0M6haH?E72Xu1G`ko:MV8S^\nR>le`HH_u7N?
%h>tHSB,+&i:UYg_<t<1!Bld&I5C%u71-.-e<-l@?>W$JYZ6FIUr9$8G6e>%\a)t)[J"(QJ2Se?m+C]`sW:s"ARQPG$g;IP7jMg/r
%?)7bN/:Q-K"%S]ab0no.1A0c[W!U<79IW7qM3ZRJo14I_hSq'VY("QBRPOr9&fhk*TpiE58qbSM=6O'<#u\iriH`sHB_FZ"qJ=+U
%5-BPLY&h/N9cF\DpnI(L],T#7-4>?ue*/7&c>DlPC5Rt@<tu4J3a.qM4<VZY;9bWFj0o,u#C&0V6hNR.@(+:-X@,<a(VFU?LCeVT
%&gYXUVY'.JB1COBbYZD^'(\/'o)T$,SC0p'[gi\5i/cTn7ZSi.T%.4BA`r:7gJ3ts4S4];r!uo$rr.r5?XrZD1G/3]6J9U>ZS6sB
%?A=c_:l`gZXB?6&KI`U00l_:]+P,mH>U.*3DYlJ("'X[F&]IKg4=`PhR$naeBl43&_^^gGj)QG&]\Ld]4W[:NkZPCCI*Z6toKCea
%^)T)3JaBHl>o!OaME4+P?BeL_'IrKLomZNe$(oKUR76K#7Z%r4">[LiJt%:Mem!)gI2Pj=@k,Xe],)_NAa3<Q:(h+fFP6&*K#VS@
%+$]Q`J*(/9]Ak!k?tP.Hl[Z@[pL'do_q-W[\R?E#)AKWak%+3`X':\+n"O=@;)G:YY7m1oi-<Q($V<9j7TZ\.qbN>NFj4hi^(\jD
%i'7\:_D@&V*K-i$4LaE5nQNB$<.8^09sT*MIqjS1Hdg++lBRAr;Nf=O:cb'?0hM<q\g0)2-cd!eJeH8mE[Mm?.-WRcZ$R1?V"jWN
%fCd$crKeKD<`OTs@dE>t\%%u[^n0KOiG!'Iek16OHl[+cIMm\rG5&iK23nm>qWH&IjRD>YI$9N?9J);9<ta&gpATUNd:Ai0ESq#5
%4iU)+3r==ng%IPnrt%bVPR(Sb[8*fKO')2>>T\3NCS\T5+f!TWa)1JFS0D<IniqPuS7-G$U!u4uO\1`q0iO$o7]r1J5m^#C/qH.d
%EsNtrout!iO/\oGR?g95a;Mg@6n-o=P2gI!Cbc17+EBP=Qcg:6GOu%n1^M\a.)GHsIM"nEo=0^+c`/>r9Z5<&^_iRmUncC55>"h$
%*8<0^]6#A<[o;(DktYdQCC@CaZNe>j5sEU8k#+OdTsN2<(.QS>g4A6i!Lmn*]OTC"<#MLg<lBX6h^jOPh$Kst;FFKogeKKaePGKB
%:J3ICIPrK6S5#b=PhKu;-Jk%Q5\DY%W?l!.c&4O)Vp-58Wut<oMJ)_T-%C%krd#PP[()lb[XpTG^,$YA,#&d9@:pF^80mps3s(JV
%2K1fLGAmj&GEI\KM\b3/O>?erSIX_\^&Y#-7AS%;HlM%\-F%,T)+iEHEao^u<BiE1"6/Ge1tupqcD>_u]cTe"AKL4rs.!VSdb!g%
%aJ:<IlNXD5?01SjOL:Kpo(fX];Ps9c>08teDYM=)V_EG3jVY%8b*@lpT5KB7GGPE#!b#Pj#I6fp$QbMXk_*%g,eMQIC(BeL3_`N"
%U]"YT!%*:!YB*@a7A)Z='IkGYMeA2W,FQ\sVa+o>pDr5-1ZSNfk*IpG\ECPdRS&>>k&PFZ_SH;db%k=A?\9g\HR*mAi$KT#eX>e(
%7nh0)*A_0,g\4%`n$O9G.O#n]Cb8R%D9Hr^]_>i/Bf=*\mR6bhGC(_8c3j$94D.N\8VmO*mHsIqedS?J(gVGiS*=nu[cgf5Zdj4@
%84tY6Psu`nV@sGEf?p#?NY*AY[tYb-3[J+Kh#8'Us*:hZ*/f;#^KaG<&.^d?]9m`JL>$h24?p?'HR*B["QKTd_]dd%&\>GZi?_D6
%1<[<ZV;Od,]6#[[e8<C1eIPm\;2ah\8khLp>d$EfiYoXq$C[m3Lj+'!AJTVt<ce2#L%ONXCe(j'hILi6$>ft@8Bi`@kR>st]41lF
%A[Gikpu_uq2<UDC7RG`"]]6803:.'tVQOYk[&ukPO1^_:T\qp%;oE]-4Y)MK+9j/<X+#'1U8HpPc=]Jg30(tcHD+%"M"W^sJJq9q
%AsX-1ZpWqiOU4)M3cjuR9M_jProU\sP@AMEN_pa*%8><J;%d9I/cpTtH).5;IZ:+#<Afi`hm28pX<Han)_#PLr\E(2$l3A==Ft=Y
%+*3a_<49ds3(pDNU<-%eLM13GoE)hC#5:s&67ClNN_PLMJJXGkn&"X[3,[t[3Xj!IF%fgSl_s-mJR+[H?\;.Oo&;d/Z0k&[Ql-*E
%W/)iF<`C6Z_U!?rc[OR3o=2U=c!&bGg#oao(<th$Nd#]\`TqSC"^,2=Z;NB3aOacd4S87EAiO[dMQAHQ(Go+WcU!)qM*0*I;RY;j
%pQm$,kb6fXgDYF.R*]@$N6j-foQhV$q\Jh87m'b]hG)es!_Co5o=q.542GY=j>4ufo$D;rEGJMNA^41g0B0LQV`&h*<o4ksW6c(b
%Is;;QS'uhtPhh@ana1Sn&A*G^:uFe-ECU`nX<L'e;:f[m_1?.Q3n6C#Q??T,i>F#Fq3\J`d,\j<mUiKrMa-(8)a=3YW8gq0e%>'`
%WS.#WJA$:XZc-siadmc55ASDQ>3W<eoQ/QSboC'FJZ7CFL>lO_,b.i[13hA40nklPY^kt=id6`5$"XUNgU*'DYWF0Ga4fg)Y0">S
%p9npu'5Tj6Gb*Lu-eSe1IeRn#O)tU9)`"Ai$nSWi'9q8aa;,<(I"j,<"=SU#1fEWf?fR`[cLq)DOEfQ$2D:O2^.OX2mtilD0K<+>
%C;/[_ZKQH+`CKQTa_ZQi.'Et'Xm"\rK,g5ZnofW)$DtjsIF%*ifO-f3gIVkr6shPYRnM&f-[UVUh9`*/5$`ffM3QM/pgS`J9WYo_
%D=M@R3F+2"KM&I#.U$O2:e2:?^Y@I"0C+KiZAKU]@+>klKpm^!)G%*1CIb9H!aAmF]Kj&b#6E;V4uN.qaV9.YgGqtC>XGM1r*BK]
%W>^DnqdOmTe'07[#`NI1=)_:V^*J51BB[D9m_LSVkI@Wn"d8)0W"d<YX*u8f"_bl[bQWPTb=uHj8Rmi8.N3&0`7gq@0u\Yh;tWf1
%!\df.*G7*ZNCJ'Xj^FG3aaP);ZWNighYdQb<kOZ8(jj[hnoB?W_W9V\;\u3C!_a:5ocV^l*,aAIABeRN<2$K7//D89M9=cBb):Fp
%!XLMWL/LA.%g&L<^(8m\MEMC7).5A2B[(&#UmB>.DtZtW<K4aWA)VY#Su!V/Z>)*!6=Wt@i/aVpD@N%7XH:CS:2(fgJITRo,)1)T
%H;eQ(fVh]`'!,u=-PEH`iai:CaN_M<T$GU%=pS:Gk&QGV91>8P6&j`$G.Io":'5u;Yea"k85)eSgs!1:/ok?,DWS1KITt.##isat
%D?XZ&Sopf&)4&.jcN':=8#p!m?<,u:<:UEm#+>NFRWWFP</``FeFJS23)V0[B6nm>Lj$]]:c=SKHiXl*\/&g*[I#qcTCF,>UBAA5
%Y/PcS.F<bTEFV>fP$8?-SA.f6;l<@GP?O6!nSR)_dE0mj<-I+"8HrV:WZ%XA)G/c;^Bc:D2+>LGdfn<&[g8rABlRqT$!loCD1Nhp
%N2b["EZR;EUpq-os'a'X`,JB^873u/Yh=0;WOX)!^pD0?%ZkoGMn]u!nHjrNJOUbc8NGO>j+jX/eVsY]`*X``;g&V3E/.'qe(h8I
%S%6@dF+p"ki)S@KQXu[egD3c@76i=E(?/rKq6UnX;nGLe/<HTgo8Eo4pRl4(,nVC>&m6h@Mq\a+SaZR9d,AS\FX9sJ'e)e75RFK=
%/!E:K3^rm:7oiUEKQEmpMYIg7Qb/*IBMjMi<\&1u3F#M;kH_oCTgas.R#P@mDQt'1eQB,5_Z9c#1G!4>SF4@iMAR;Cd1.1MW(<.,
%',.B,-"f>V%gW\JjQ))Ma3+?V>@^;$@&o@#;6l]F/&??#'NJ0K5%>IJMhD4afX)!sZ/"`VU03_F?56V;aA\JT%)#g"5M72gA.i.j
%[op0JJST'NJV/hqf%09EFjjZ?5HMYJ`XEcL%Aoo9^*s(bDW^]uO?@q\\("FjKH6Gc^:kD,:JEn75MQY+AaZUFg^>`Em'h=m#\gYZ
%qQ*)?+qC).\l%`&OTQB7*-<8/nlZrtGB\Gj:$X%L`iR0SH&We=Nr;k8cH&U^TXhsn>:6"o(pLMGF[^(NNX[eIYDsHJ%A4I(CXog'
%ZFouRFMZH?c&gLN&OW.UEOY_Jl&uUh7W.K\5DbWJ/Qpn53hJUdKlphkC&/CK*ge/qX[-C\CH-C/#mhI1]_^knT^@C]5IY)cZWT;c
%dhu*e/qn:<.MJFOkQAUWWj(X>8hbrAFrguo2K;,iQ@66AqmXL4HsdmD9Sj<P5;u&^m8G)#S!qO8#]]5_HHF.l5<VcKIVC*J$Re9A
%Gs5$\/K,V]hZ?"2F(X-LMsEkp9L'fjA^B:XX=[I+&-Hu;XFXabJ%8_&MR6c7FGI8HU'k]M/ZuDb3G8&Uc+[6&bZWmiMe4bK+sJ:t
%G$;#g3pltmn+&.FLl><m#HPQiXZJ\7g`.:IeVFp^hk(E;;nOBq$-3O,VPVG3/CU'E7H,/%/6+I_!?ceRh7\>I<E6sVN\)FiVgYX^
%Y.%:;4XVen5'#Fc)?`)t4O"To8tEF6X1e"\`B<-"+sWq\Cc/7%0ksR`kA;O+:"#h<Nsi'#7*G*P`[s$.0q.q_d7OUX:NqR#Z;7"(
%mN/ZZM\fhSla6Xs_oh_ZP8f<a<eHc/1oAO#A;qLk@^`A.@Rk>q/#,"YhPpCLJaDC@85qQ*_),Y5ikW2#BBABZa`d:)<^5nhl=4"o
%!,.=bDmIq.[lh#-D$bAS8'h=bXG!(\4U1>Fk98lK@N6qf*L3cGmcZ:KouRoLD9X5&jL#[BfZTCno3TR#$XKo+Bs#'dIl[DZ>r>Q\
%+U^I+8sAG/j+OBWOVCungH!'+(pDjNg>=]b5"pBq7\PddV"SQRXAPXg@m2PV3aXBD9,1$Ni'\6$HBTdlk%[o]8)Ic3et\/<pH.@'
%$7C('>&rm7-e*rrL>"iIbo9tD[Y)h%9S&A$CZ$foHRZhQ.8E<^]#DPN%g47`'=/aX&t'R+$&BClW/00Q^+m0t)XDNaSo(k-m\c<V
%Qt?n!9UHdO+I:H.hk>/81LdaUUT>"m(,b6Nkd<$jR%bVc$L4^uXMTZE\H9eL&StgE414j<8T8_JS;3?oOmYc+5HO]t^gWq<ju@AY
%ME34#Earii<!`iBX<"ikIS^WEj?2G;/RR3[\ge#DHaSS6i0A1$#lULm7pA%_2Et832?<n;Z"/t>WpU@Cl5j))khWQ\Hg%=U9CoYn
%OW8b:;^m"KU>G&fIG/0]"nt-`\l@!%(>2+rGUIp5Hd_upZs2Ef;5uU^Q+El%?@D,20+_f;ONOt[fK%6V_pK[Q#WsWl1C&K_etKCo
%jWgXKGl([k-n6Hl<g-(d)H](t%YF'u=dWMGJpZ^^qRb%/neR0+XSN^><D/EMgji4j.,,n)Pt]qi_+O-`(Ces1AAqUr9@fRIe!)>e
%:*5p@@)C@N#+Vs(+n=@\;RKZ%4V!??3G*NdZJsstKohs2.nnW7p.NR`-._"HQ@Cd>a0Cem13I@7lq;dra\4W%;5>DZ*BEmE>dpf9
%\<qTjd)@7EeQ2)a+4G56!+tiu`TiE!QLefD,K[L-rP0Od5Y7iJ@0__ELoQiDe]ql2W#S_lN?72Z/ONiW:XaTM9'_V6f)9;m!d$@1
%LF4Eg;<(=gVs!6J5>Zqkoq6-"!d,m\F2jN>Ou#sQg&:3?Bu\3q5:q;%;-$M8#J"1<Tluek.@?S&1.;:4m]fKuJ+g?.m%eL["h"f0
%%$FH=*g(0+0fO-X3LRo%H60IH0q$2C0h$fVQ&B49C]Ra:/lqB.ljbp/RN0u2%,M/]c?+-42hsOXH;8SM@:NuDnOOb"EagMa?!6lW
%=D::&"KQ0H[7DRX<Vq`V6Xrp3IAD=<n>5Oo(YoZPAN+.``kGLAkX4_OrI0purm_GTT8CZBA.-n76W40(X7*K#%n9Ub7oe'*1V,6X
%GUl^Ti/E?^N6Y:aJjG6/>"VpL"d7:XDTF[$X/3Up4Y&GVT>'`p1E&mneAlZnA80T@Ub6mK/^n/t<4l7+"cF*^/mC9R020!WFbc\q
%Fd%]5/n*[#26N/s#Do*E"uV_nk;C.4mge$HZ67`A,>U2[WT^"%=R;2^;R$U.#nADT]:s(pFf*$BWUt.lhG(=[e!D`ZB8j/ePN=[e
%<>hgg9^PR.CZ;!%djj-c%(>JSMtr;apgVHaOeP:$`(#:nq7Ec.U`^g5i]@c:X@4DIaHRI]^m9UPOs6"h+P@GHZfi&Q(@-c%ReV&`
%KQBVMH?Z]+ET;/F#&PYFBOi1#(o0hF8ZI/:$a&L`=miJ1dofOb-Z#"C=-%,Jea>-u_(AUOO_SX.eFI/o/&Kf,iAud]@bHe70R]No
%ok)2(;E1Pq:)-]g`*[^5;k,AROEUuT=gT5,#I'J!$cu2YclXsmrk4'B^O%L4a&$N@5]VUh+8^FcSJF7^jAX]A9XA`CQ;c4_YV$8V
%#dLqd?,%a:B6E;)<VZUIC%^`O*7H_Jj%#J#?2lDGc)Np'2o!0O>FQXNAJ:gI1Vq)fbOeH_EmHbM#L0f+n-7>iOK@7E8'MU<.Fq.P
%?PLFN28js8,&%:m$ki+m$+<!u_k\Xe$j-Xj`YDbp.O5bOV65O:%cW1S),Widg*eM7]'*B68'Ap`hrcXRNZ9F8NDS=GmeA,A)/L:s
%(D*lCT<?2R?>AKLFc-n5UabIhYI6C10refe^h2B$>#dR)VT8U`=GOHOo]a9DY_s8f6N*A7@>aC5\]<HU&s4&M5PHorYPYV'Rr<c2
%bJhG1=@<O/'ka$MZi`TF6#U"66!U]16'>%b@HhT00pP^iF>'OgTu>[/j"emW_69sH%+3KgD!]1qoG8N@GgEY=XX%2MFk4%#j3i!;
%()-r)gk15..7K)+2_WQFC-KE`\7:*="J-`5TPLoSAld;o8\JJ&jeYW'Z\T*%`IV0'I^.cIAjI*/.M/8eeK@I#0$p4dkF;@SlXN_D
%fBg?jeYeU0lWX2F$qX(#GH]\4"B+f<Zs-oV;2lVtI#E'TGR3B3Q289qO!C&mL>Kgf[CcD<Nhi6JB_2,V/&eEbJBE?3FoE!5kjOA1
%?=^?k9JG@iAF(!oB2_TSJ$Vn,K$9:Q3j>'sBN$4WC=KcLN$`p`;aph(;*[c(St3PGb,Sj<CuJoFJ)t5[h<RKSKAP*$9Kic&Vm`D7
%5,/j9ctXj8k6c?rdN!NhB]J9<"_uOlR]pEN)J1?3dDjfYQ62f*W\_7$a.nK2DB23&->EU7ZE>:Ee5fdeps`im?)+c6;`UDI%8COT
%7ZYDX!MW$jbPAX%`48K&q2V_S/A4ik]&^<B#Pksr-ccQGK\/+mJ#S[4lDF8(!lS?g6I;&oV+"YV_T/Hn!O8$1i'*5`S^jqm[U"eI
%%.h/9*<pnuRs(5GOa$GN&hJp6Imnj$h)`lVYKZbVq@t3_[h]YE8<>h\lf/K3U"oFm_iNrWB/D#A/E$d!/[6=qD!?obVT?LU#\k"P
%)`^U*a,0/51eIt[ff&duh!-6WYf3eC(t-GcVKgIVor[Zb$cEirV%j4XG=#FkWVL[mWQ2oKN/YQ6cGa*CL&H`;=A!<@.6gPl@JBYI
%=LXE!/A6@3#i%t@YrqcWa't$AAms2l6&g,bq#nK15[R57K-]GkD^Ng[*rR`:W=Gs*P"Uq='"j?4hj*m?D=3HVYGhaaf@tjDc,s-Z
%)dum]SQ"JNqrTi-LP?s3$o0RH__,s9!f@I4$t%&=?]0>P9soi/CrCnl>,9AfWq?Ou/e[hd2\*h-qOB\[.9`[+/rg$aWas9URO2%3
%eo-%'Z)/hEU[(%>K%B3WZA9PXeKTsBTrh^98=\PIgSFRs><*r@E?MUsWXP%0]&#",W=;i<`F%r%-Y^OPUk58$RH)5AV&oda_dm5d
%C:eF93YS$8p+H)Z2&ef`McNq'aFP[&'d%>3I(fLp[tr*\VWOD#ZelnTi+Bfk8i+Ns)ocTUQT+;=&NJ%Ld+MWC=?rnA6oV/Sj-]V=
%ZMFpS".t<tZ`@Cqn$g3C)DZ`k!N)lR0i?+Q-'`5fcpe$^qd+l,n_.ebSjBt(A6"H6g/QZto,C7M^7\(/3BfgNQ-85<DA(umcS`6N
%$/.Q%D=WU"d)%9p;+uD0!s`*HR%![>Ph[8`Wp!]5>c`''9dVtCB&HM&gp`FTDSQsCYm);MaO^Q$Ko;]X*327S;[bA3b9VU]p0R?)
%(!,O+MZcOUCb:kdl(r/>*&B5UKH>-Z9,sqIiPN%^).Nq32*QI%G'q"pWLK9&Em0PqN$^iIg.hF]fN8h6fnLphs0*W(nN`E*.X(u'
%U)#,XM5IE44^<\SnVgrs_NI"a"B/bGr^1D>LsER=!FnT"XZ;P.jcua@`>_(35`LVn]lpMu<KJb*.>fAj\AZ4bZ@M?]m]C2qK;[7W
%^4Z%`;kD+3Mf(3R_9$4769eH0+U0M9`&OT]C*lW3<+b@<4:^007Pq-KLMUXG`XBT>'OQ!eeN!kPd*hjI1o6t^7eui$=8RA#-N:^S
%C8tWFU8t,@I8F`A2_H!\i=KJa7h+T!R1MNQbYLtkifeNJI`V:4#Mm?I*>RPc&32N4gGn8W*!J[2"E&;:Hq26LklT^ZNe?a%c.NqE
%)+mm9&NbSWUQ.0<rBi)E6g:LaouCj9hZG9hl@s&P?rrP<5e&3tX6M1KOK%"I`Tn9",@VNiGqg>%^g?.(Tk':-(5YMuQ8uG%MY]1t
%i3"cI/Ou8fMUGeLhS),r4hJ>&;N9U:Um70Lh5l'p:4Y9*>4XpSYlFJhKgi8&EqD&pjD']]78N;_6;dWW9L7I>&BOFA4!&m1ql4Kn
%[%p=3H^^\E>Rh9k"uHeNW*%RR:oa3f5,3I#,(OR[$Vc4;#sbUu.Vt'\9,96_qG[ZW2W,ERP]09KL7'=$$FO?()9N+'`5;4dd=+g/
%R167'dX#<:Z@^>jM?XdDMMr2!koEn/:[TFqZC%fas13^.c7P(1/_u\&2<h*cNXt&.gFQtb#K/q7DQO:FIHKS&U=<C`gQ^+F?/ClX
%W0Xk\`K*&n5PXB7jPWtDT)6=/p+eq%l5@jFY&qPQ-+qE_bNoa<THpsYna!u9`YVj=>`C=6GG?]FcKp+;.oHU!OeFurs1uHKo&Kp3
%gA^`&*NID]7\=0<YQUW\5\o[Pa942b+6gqo'a5KJ^2D3pA9^hS+B!_km>GQiC5L_c<<[u`,=1aBg8Oc8\[S7W<P<TFbQ%9o>04P!
%,6eEjLh@qb]@>S(':Q.i]^E57F$>?9o,U?^^VuG!io=Vo4^0$gokc-bL_!&BK0E6@KNAtW@E6RmS0\X&iLQY4cq\o3Fm/%";?;Q.
%'j9CA?jXAT?N_WQ3GJSH#1gj2+`(P`-+)SqN#-6MQ>7ea+]K\t(<]s+5g@o_AQVV9V90`ORPL/,fr:<DkGfIf=kLeeL_F/(SXQpS
%RS"gQmR]I.oG__V90Gt=9?D5#q)f3l6gGA'j=u0l[hWbFJu@^L"!)cdpPkD(VpV9a$GFAcoEo8+*%&^!/pMbb68,st8C=IVBI^8]
%XVp+Z:^=/\'ZL(0Rd!ER:N'T?TP%_-:Lt$;_N(qIMJYu^QgLBRbL,ELA85rDFaMj,(?;V9W]Nje)h6V:>m%nH2'CS`_i%@/Qqsct
%[+PVhV'Z?5>T10FNoY@:E.)II?iceN.*uj?@Gj?Y'E-<QOU-WPqu,It],#j<PY`?&jW6b1,ilJnWb-1Oc7@d;c=@]oqiM':;>lp6
%-@l:9X-mjZ!+cDQ`M2%Z7fC"Vo%a^#QNh:@O@V5q.>sm;l?N,,Ms_)op82t(ki4(Y9<lR%68+u1Yn>g1/78g)_,a/i6BP5iZ!H>&
%@=8nU\4og0]>EIuFs-`IVf(A'TMTTYoU'JELV%/+4)"rB6;83q)pQ]C%3_L2HM0T=s*m5ra_>t<h5aN`i6p0XUU!i/oV=K:[>q^E
%LZK)4<T&TMP$XTeCc&pM8`2#%>KaYP;hF/CbMJ;^7!1Mk,o,t7&f!7ga.W+[5IcOL<%Ik=PVN^4-Lu`_M1G<3N-1&p$6s+$WmPZR
%pU?Nj)PrUCqSn0P?-6J6qTq/F6HTtAT@YZ$*D>k`3RH>L'dK`Tme[KgHh`&*3`J\P0<h(0'&D\sR\NLq1aP2q'-53!N;%I@c&4>0
%:`SPO72t[4Lj"_f0W)CP]#>YR9oXoGg"_PIVRKdP.=b_ZBeP%TQbEr$*0(o2Y>OlDDS?L]Fl"R,r1/7lkT(ouc\Xl6N'@CVnjaEF
%>&[LIZ%-U)1kCZC5Y,gmbIO2FdM)ND&-:5[M1HuDMBLp4]LP7Fb]8E?(<j\WQGcTbAiXg7N3$3W`I*jBeQ<1`*i0>aC8u/B]-O$l
%ZtOY>iM_:3)1P)5O-E(t.S8b1IT_'X>[jhH&'L$"p-m:eI8a_o)#^<HLM0g5BD(^<WClPsjho#'P*`ag2Ur18<.e=B7t4k;^i;<t
%p=O>d&>Vq4IZ&^;JOKXjSb]pk^0CfI._':e(UADB6*SaFDe\;&b%]@d652LIpZ+!:iO'ZY-])TbXoal5nTj%*%1[;5bE&<L+aRTO
%fW@$9<t-^e"r2s@4hdM=n6$HqUdW%$QLLu.Ll<V,392$"O/TM7"b%Gq-4Zm'HDZ@9h!A8:e"Z3eTmaH^;nI%nY=UdT8XV<9fMXgT
%/,9JISIMoo*krcR#K6Y_:[p)#Y3*R$h('DVU83@_4<NVSo2N/A4&270%Mm144l&"))5_eDF8pc,@uU?Ts(l=`C1irR2%*0lTLrWM
%.:OB)q[@>D3:(bMmdCMsc!1#+`aefg8RW[_Zc#.m3o:^dlU1gFg@k-BAs/>/U.T?Oc/jB@<Fse*>V+99SHWk(/E8!n9TSaJm+#-B
%o,SJ5lUKGbC:Kkua%u6/4Kd?&V1."%/@*B#/<8hY!,J4651=ReA7M7WM.3:Ue::dR]\0i&D_I>_O8GQTR'>q^8gld_81>=<q-onQ
%"\02A3PVajlE[AKZ$_]);2XpNifpJ\m<p:NW/[qPIb9:pKgg-a'O'DG?4EZNU6]IDlFOZ1EKp1H[esCsVt^:Ec:nplHM<3'N*=5^
%+6-^RA:`U\rNS,G$$hrF<"%@O<LEL&.G]p;4Di-"V9n"+os%o1n#>o'GOCC-eiq;ViU2KL]>m.@.LZX%f#Ppa<)>WOWFpcZ?Ea(C
%3^iNlcfY@!VI>_PlG\V'.Z]Y.aO$gW=<30i)"i:h<SB?la'-Z@YI4%*O4A!phcFZLGL_4+CV0.[F2!t?+$[_/I9_%oIAi'HLcr:U
%n\K?D8QD-h5b#Cig_gMCrKe$+E<"\mFmUa1AJQ;W&[9_^.T2Kb5lm6P1g^qB#h]"*e%Jq_`B98Ce2GG)VUqD/9":aB&D;+$;#4BB
%\7<'U)2SsWoC'TB2@7P.3Cmjrb\5kioIO6KUj[%9*SmODC#;!(+DP9#+bd.5=R7ghq"m%01t_&Wc!(+f\;fIV+@OR8&#S4CJk^7#
%#hh6qUuSY6;Q[j&0eJQ7q'JfC5N;?GE1I/p7WIW>ZM>,?,%W-l6s^tMScQH=aSK,FRPaCof3CVjZ#`)j:Y-hk&foR`-F%=h`g5+^
%`?M[\D]r6E0tM+UO`0'tZHRWdLFP/5jZ@eSG<ha5r@$%tS3WIkZP5suPG#Lq@('.#D('C'pRPF)R]SN#AHF?NY9N;XKq&d#"8(,&
%h</sBCdBcLEYlDka\S3lko*$GC?CGY`+E><aRcVn%i[t_/7Nt0Fu'+dbCJas]&::1\Bjea:4HB@6HCN*8'uMrf=(3Nadm"M-!`aO
%[l=6kJ-\cr5U=j<Ea'M!G5(VLUT.Yjo*sM&r34O1l9$SOmSF2QC/N:)-8$j"2+UC6hrp;;d<?rRg4n,dYN/7+BcU7.L"WihZ3J#!
%p"#LMmLDAqjtDZ\XZVP-&^o'%gb`Z-36`rlh-)S4KXM`bT-S4]BrlX==&>\$6=BFF]%L*#Ea<\:i*X*U>:R8dX\JkS5upVeNo'%>
%<"T,2/LcAcLn5aG;D6%qA["ZeL/2LX76iS6`[q)unVO'dRPs%sR__2Z(u=5T;pUN\%ecq:rmc/0Bu2U_ih-@dZP_P&;ocE3hai^t
%+31()l_`<a/J0Ft#]6mOe()rS=sJ>J`:@IBUq)*qBJSjj".WiN"I1WE2$^q_G>,U;n[_m@lm+]`NX`hk<l0!%TS9jDC@:<t,p+?f
%'`?&N923\;Ls!9bD>AQAh/,85Xp/9i[VeI#1_-VMe&`tg!.XqW,p\5ulZ1&*N2D<ENt&[m4JSCD%`pjSbN&C>7TbdRrA_Q6J!D*?
%hB*<(ln?%_+98_.pM(?!%Z&$H$?KQ?m8PYa#uG+L9kuaCib2A1l&a19l[(mu0\rX!(Z4ntls&#CS\tS-Zjla;V?YW]It0CV9miHi
%kfTV-I[WHX]d9UD3[4E79lQB-L$GeP67=LLnYmtk@Q/^;*$^QQ#^CYWh_3:f`W:Cb+YVN#Ve=D-dnX?E[eN7)*^:.0rA=g;eH-cm
%#[):9=gAF4,S#O,ji/)"HQIJ:QVXCN+8WHTg%8]bU=f5oGCm&u^Kd^0*e*_-hG%.S^E^oUM_<8\on]hjg`=jk*1cd5DN@U]$mbCn
%[2eFp^<O&_m:j&kOCbqR2-o^pa8Z7]keG^`nuJONiacfO[B,CmCU?tj2=/Ykb`eF%h)b-65QqnWIb7@u#`=2uR3HDXPKDp_`)C.`
%@m9&J9sBQkN$WmsfGW3o@T3G]T#'&tWjD$*W0tYe*ekO.]\USV(pW]s^0%`uI%D`Ce(]_0s4][];is?lf-UL$rKN7&``OT,?0RG4
%cuK6q(En8kKMi+A3@COu'!Fs4FNJ's+;i6./:R@0J+:?BL8R#0@Y<P_j/>.`fb0)b/0k'+E(NVZO*K%uC7UG\VB")DP?=."bRajI
%.BsgGTQN_!8R>4"&Yk$fM3,nh#q3*2*NUDdU';,?%)?+E9l_FUOqAjbK@LH:a)GG,/QUc?'MFm@q2N1Zam6Y9E7boq7(&XN29$,e
%Zcme.(8iR<T\6NdT[:nCI_U"Oc/oR="XNTbX"jig%]2G/`aG&-+\8!-8,Vj.ro.DmM,"X!.@AoUDe/=`o9fTo).9gHVQ]!_bKF:U
%C:WTE]^<Flj2bj@7fnt=0&bhHfq>Kg8;V=!N(S%6LU.PD6^ub3NY;C_6/.GmZl6'q$r@em3(>r$7,4ANW3Dt9T0fC1(8&()fD%%O
%G2;J-I+LKk/2\1XYbOZ&!gfoE7X8FO-ublgP/++i!Pm=CEq#]\l*T*a2_3N=#SEg"14r8:6'(iZVt`ajSM.8!8KgiCZ%DEp>H1d3
%7M@^<mXr")`<48W81L@=dkt&8Ct3c+Tsio30L]2JJR^Y3iF#hS-e'taOqTl>6B1a16R^BA[fblh+6DnQ^oH%4L$@'G6_gHd"(<#%
%,<fU(o_<.S_HQ6SgB\07?"gW-%rP96FLmnY;@e$Q=8HN6GS2B-:^X-_.@GMh$\>'HC*8l-!49R"+B.8/nqqlMiFCB]"<WV,^XS\(
%'E^f8&%"B4s1u9]p19/mTnr27ai)]QXjohZIj<X;N#+?LNJhVV(Wa4g9nkhg':9ii2e1!cl8?$c>WjC)niRUZ*V4O_.2-II4n")m
%hV[`=b::gClQYNkncE']T$K@GV0\c+YHtE?`Hut#@QdE\q14W69<CFm+r1h#l"car'O6$VLL@7%oF6=7B4m`Dm(=m1+ndU]Th#c,
%Vstb25L-2lZaB4Gqh=Xq`KL^3bBJHAG12l^ajrt(VZdo]HKt1.:&5=*Enft&-E>lm5ae2OR?Su6PglqS&?Erb6Gcn!4iF?;;mH24
%bOnh=`4Daa/O$i%oZ\GRN]eH7heg&=r6qYp29qKSAjga-^YB3<<%7k!9l&H4-G:L\EtqE_]`VM,o:%`n$Q.AGrUE?q7ruH@\83p5
%.b:a<:u'V_#LYDDs45LnGe.h@)WkQk\9LP;?f'3fj`EUK9UZc)ga]t`):"J5P?-BS./(iRhkn_5/W1A754C*5QmD"k>".^OhEHF1
%pQ(Z1f7@+icFNqbH`k%fpR[VQ"7N5dHAmXDn[oCuGqj=Vc^-#od_EG*\Y%<A?UJQQl41JAfoOVI+71&^hup5hr1JA'5^+Ttn#l-a
%Vm*[:=bQ*6Mn2bjYHPl6hE2_KH<*rX*:)'A\Tda+'904kSj0@/r#qSYRb2u6AG*HMR.QZDHa"Or5"t/&*i?u#+4bLc&(>f_+.r;R
%oA\9jAu21CFLRW>U6^#U.]/Imm(&rYq=.ZAjL)Qe#O+2u(5&F_(Toj@&keC:;LoUM6kbbiZ5OSbpLn_JVeT(K[&HtSWtVonf@*<?
%/[t=Hm1^t[cQEOh6+2Fn(%iU$oq5;!S<@U<jgE/b=Y>SEWjeb*g6uU;_oP8`1rOJY"?]qtAM\O'6.Mq<q&QS870tu99jK2dn@<Yc
%n^=dbFgX^]P=>d&-iu$Y#?%sQ58=L1VXOS[<Ag0iG&G\_cb;I;p'09]%kL^sk?0[\\mu`1m\9`e)r41dX(7#=.kHcs&=*:CX+N-X
%4SXT]:'-iLl1M#0W7hMkknMa$(8gCrD"i74I_g0r+o)/28U&KX]@dl,+`j#t#A.Mp?GKF<Z;U=d6-mt%cE*<u"(4'0Kl.KpK'\:;
%ZEGMC:TB-/HU/f0H\Pg1\JFmeFG+j:9k5kkiud_N_X'+;Ar1UeXEqc60tUbU?>MCo6n?-idETZhO9KEXnM/Lt0ET)ue3_hgP][-Q
%K50D'^c2m''fE?SYD+AEX5XIA#88pNO/GQ>@<9#,HVOugIuN=uVT64LN3qM.oEbNABEE#7:-'?$qXKcirRGgUk"\3S9ppkLbfEde
%%&$ksVQY2n[tJ)Zs7-YKpL7Kr97\CnHd.*Z+s#Xp"s0Pe(M2e_%>sAj@qp`g5qb&=oU#)ZS`dM.S(>X[b(4[(>MXB]h9UH)g.c12
%8%:4[R&fZk!TZ^AjjSE:\'Wl0`Vpj(k8#E6&7WPbCq-hhapASo&YQ=B0B6C"&=Wb@-n5\gRfQc/64((%AUKg,pIO!uk*WW*8Lh>H
%iiV0OgKB6`^m6[7j(4Q4,'(_,.n)?_h$/kuAA+#d6/CH9ap5FQ9N.L"qX#97.*<jaOjW@qkY80IFV%fPaJLq>)$MB@=X/Bmk0s9"
%mdn`r1lZbH<SY=E7Z!sUUjOgBf>6#:9'i<h=-Gl^]^8#:/+[_9(^>i_2.D3m6krPrRFUMqY3@S:Y*a0l\%#SKA^4#4:Lbkl:GF,!
%*-\gn70f#,H3cd1[09)]V0WA,eV^4:j)u+UWj-dYD4#*P"D"4.i]Tla5ckOCR8EG$!iV&ISp[,ApJeRq1tVsr#abp0!q9\?L+0Yk
%7G4*:Auh,C=CatcMV@";cEd);h:UqRjd(i$b;!S$oM+_?K&2]PXaAr6ffm/1Q)tpgp>dYM3l-IVUBXeZ7+HXu6b9+",M)2;Q:&6G
%,4JDm"2E7MZcA(&`[Mh@9fFmW(HmG*nYYICNa8Vj!5o+ZhE0GU,*9pA3P$l_0"+pJO'a\L>Q)/]HpnWD#\nN-]@ggUK88\bWnTOi
%AfY%<8E6FX?&ErmW$i$$h@HD3Me0X.Rt/qj=iKm'q>`up'I<6VF*RSmeU"2B@n4dMDCk*gZ<?F99Jq3IlL1k/b,+5K!uR_`FUF0N
%GJ)PC\i5J0ks27phX[XF.nda7EN6#.UpSbVm=&2BW)BXHUZo(b];oA@SqX#-,HeX^]5P1q]*?(Ebh>OE:(?!XqO5B[+sK:uP^KAP
%X$nY-$5]rhn61M:6p$4oVG/_M&3m_QQ8Q'1iWUP3.uC]hL/s3u>LS2b[%cYlMK.%4r4qV`RZCAE>[`73TAkEG?+5gGoYPRS*?*]8
%#S=O/g_.W4kdjfJ@"aQsmWg>"QRiK+QipV.k%rKEY#C8O<iNU":+nf1Fe$9V5Q`T!$Hl/l:ehTlUg@NU_3A!Io5MlVH4d/UZNdJ8
%J@dZ"dB8F>W3W(q>pFItP1Y,J=Y8KgWEQu6V&s&cq\UJlkAeR[=Ta#?7tO6%jW<om(ek!P7E2>b)=\q9-q54;9K@1lDjT&\2k.2?
%8"Eh%*KR[E4`7Z2rtk'QV+!fCI1`>X?h]>3k77j5Y/h6!6WHJfr.=(E`n#M+HO!s1$r&?+YoiG'oLNEXW!u!#[^7gpUIdX;FR*f]
%Ahe,a4&TI^?E>9@;D3Q:M2?s1\M7O'90gEe;Q;tjlXXP5H15%9qcfjh:8]=+h.I9T[I3YW$?'!B+]Uc_OVdBDr[MXbKl(,c")pR]
%cX`/h`I8U)B=UUm^m5I'DQ;@Mm*-E5PT;\F-_D'Q.FToET!'(43/e&O-f'^`7I@23]O`EuPr`mRZ\@BZmW+2Y/K#`OQ3d;D8F)n'
%2%qpr$JfMalN0E]-=#rQ9a",X@l9+0g0(WVN9B"f@q=JB^fA?5V]7(<ead.uPIPKq!'B,Of#D:=$5aEgg(*-g"I/8,&-L?;Mu6DD
%`P4Q6/9FnjPffZ9k#N5m>!/*-75iQG<Xr6K$2^5NGIC@Zdoag6;k&#oIiR"R3l`k6C7[YN^ZnQN>aST^0Zl0FD<\JGC`aG[X_BT#
%"$),o8!KGk,$Dh3F[aP/T1>+orkE"d8"(X&fp&%`BERdDFiC+Ge:o`7R/)"nl5PtdLdnORU(#ip$bbhKcI4+Dh]m]Adi'_82SL'R
%BgW`7'qb3\=@&I7'M8^b^<r'Q"O%o)Q=/uE$MCW&VP?Bj4Fp+fSCp7W",<Ic;n)Hafp-EB0.$mCZQ/a"1TCsgWX7t-U(`GFQ/<'U
%efSJ717m1eO)u`A8]aMg7MA!JXcf0clQ[P^/4WY\:Br)FN]c=k1Rr+Zk2V@ja*dP^Q@Bnca!Tr$hB1&3LGAW1X=Sk9QnZ3%7N^iJ
%:=CuiGOfsPk'/mRrXci%9us#0^`L\ppFom6;FO&0T>qC48Mui8B^h9^]YuoD(q8Eo,oH(sKK_IkRaig+kD_nQ=_[Z0`i2=VAE5Gq
%/9X'NC($nq9%ukWP?#q89Wd-dVA19h=B3&N\qpTk4&#f.>Z_@fmBcqr<L2g!&$,fb];BuK7Ei%J3f*]kYM0Qc11d.=GGH/P7I_+&
%>%r\iZ8^sgP%^>,Kk_;^Fg/GiPZS_EZ3jH0Dh42@4&"<W+ZP3j4k2"p=)=ZX&JLis90B#gjVa)\9'8S_@2a\KiQL@h_`HJQ@@C'l
%T&bg1qL$`?Ubf7_'E3HR?ms(fDqBQUe]%@T3fl7]DJ?(],oeB8XeZM8bgkrt`lQPX,G@PA\JX7c.W!*>s(&qFlMNH\2Cfs<i,0sL
%\OCh3T"(KY<hBMCjUhX[bJ];OXff%)1BU&ZjSBS$&<pf'?/&k<e8#(s*(Wd_1jQ4.7AVeQ<Au(W,'_(+N_Hok'NI\h?fqL99QGiQ
%FXtlNA2pp)&g)%'o)p,CMHE6pT%n"bbH,G1PL_E>.(#^J6a!hg_/p&L3IMcS$Ght=WD'O.Ok!EWXdPR3MAk2$'DVV2aN<EWh;'f6
%HKq]9($e&F/aSS/Ea.*)`AFB\U0!Xj`6dg%i<UL-0L.-+?j3T2A6@IF.`u&)`lfkoPZ+CUl`MC1`0"/1QAs@LY\;bLkJW-bD#+VJ
%'K4siF0ur@Y$/:`g+-H5lHp38E]d%cEPGUmP%rE"rL6#`%[!^e^h0OqD^HphZ>>54nf#KK:&:/VN3,^AI8j).8Kg^nXr[bsqQ/G]
%g%/UXLTEpu`6^m$bm7>J!V/2&HK*?u$Kja=-,^9C'dYEKK,1C7P6',@6`MZ&%=EGXV?AW0<\dA1e9`R5_&Oa*50\qi][,1UbknRB
%<VZ>\#\]PL%=*8\IPO:jN"Y1Z960i0(qT5]iWEiV?f:%/a:_g0bT[=U,RG0Y)65]`->^bYPA45e:kT9,Uj94Ggo"U4/WF4.U'+1"
%Y*n':WN4,*;OJIN*n!"p?S]JUM$cc^2$5$WOZS1tNtfor*NE4kkQ;CHX9^-R%1n#!fc`TpV?hNiqf3g;MJ/MF^lrM0.'-.=0$k-B
%.ncX.aERm8LmT^KHqM%\U2@`dlO6^POrL?3NCsRL((i9_F&;CJX.it?q!P8a.$e%9qA@>nKN,J1DB@FF-8qOA5PP/*rdaP4mpM?.
%Gru\\k$Zk7F@n6Y17Kh74Wsn-C<37agfl5.(B^Xn*Fr%ka+2Q(Sg*YJTU(UM>@CEY>0&NHg.\9lK@!!!U"(]%qA&`(Zd6OC`X%eJ
%1R/c(?nG:6W'p<"Isn9bPA(?*ES[^%3eOo$LFLLh]?`,8DDP=rT[<>&HcFBsPNo?j3E<aBM4+g';>\UCQG(W%.\2B9ClLMl+jE^.
%UU<LA0N4OG_*Zb.8BJVqTtgAY!^EN)/[<mCYQ*FHO-0+STlq,RN24tYLLsKB[PUo<RSP\-C6d;5H.>BW0em7e!K0fSBrDqAc>rX.
%Ohf+d"nQD?(SEt@i'\%)(*,97[BN4ueoOuN+pL=ZSq3\t5:r^XnH&6k\V=g7pD;"VE]qu_RUdpg^RKo+^.kNNV@`QCi3b:\<_S@0
%@IjFuo`bE0*Mih=m1<dYdK;rd5]!Y1#))aL'E-J%'Wk3+1'Lq!bP?$kP,+7tK*<6tPZWNJ;<\.Mg'X#tHr1*U"Bof7m1OH[9jFE%
%`+/&C@iZ6TOPc!#>kr>`[uh)+1^==#Hl<B;%Ciscf?BCRWHc]+bHe@B.f'X=nrY]_XrcbKGW+#7V/:HB&%uAg-g:P'e@a3"(sY4S
%dp0QJV]egXJE@K'bcaDd`82dt/a?b"(%Lq$+mT0N_4!et#pb;sT70PK,%CKjTn$R>#V7LfF4m+FU-^20L*J+cM`R_QNuf"!a7SUF
%ZrB87*4V]'c[Gt#NLA;:-(J,65+eUU%dp:83hKAh"uX(>=<c^omPgb2M.LSdcsd$E)3IiUI3lANPWKX0ZI4=hNl]!1'E[>1"Ms0O
%Y0$7jem]9[0qGT$)]^4u@WB1?p7X1c#HEKcZuFT%'j/D,[6qDUnoAlW.CgVMg`U@n"'lDOg0-bGX4ZVpHC8Bne.?&6&G+b12[uc3
%^\Zs&MTV8ELNAU?"%Tc:#X(Y6@OP%t)0q<QW,Pa[<<T0-)SU'0XJ9\Q:]eO0c5.SEg%:C;V5s1X/4,+[G&X;<CP#o[qL(5E=JAjT
%=L,-ag[RfiI>6o(Aq#.L\E83IJ.=0$-W=3R(pG`8>XR9KU^%=gg3:Ws#*`q!BZWcbAX-EAZ1cSsU#PGNmIZW`V^_DI\oG\L*3,L@
%ii_:He6u``<qh5V(hdVK0)fB@rl+%r5?)Qq>W/@FJ0$d#SAc!Q(&d)ggtB,."NdIogDnW2Q>.GV,qTjB9\HN35TVAdlDRg`P?AC@
%)\sQJ:E_PP_n'S*_F16C3ne1U4Y/=1b#ZIV4Karl:)+15Zg%De!EOb42a9&e;;K'CdX-@UdD6+7@I5?A3Ff>Uh3ClITWii$r]@fb
%Ig!u*LBFKk-RC0tadQ44%Z&37]WO*F:Ku)ufD2J.-?=BX<&Jm/di"<#r@;\p0g9'3'"%'Q$e:'9cjg]_Ytm.dGor)/Eoqp+C=TDt
%PuaY+dk2rRU"UBB=Npk/`7/7l?4q-J6;Z\.A=dOu"urj9^/G"^W6$j_H<=eLMS`a71i"!3o.ljV5^^QJ^n[>C'.qt=RTY/T8AOg\
%G?5I-UUC^=DDS"WmRJ#%k/E/9>!@1fknO187j!1U>KskX)![(UqK;esUM8Rgb"KBBc3hg4qCNRjpL;ZI5n2[AR`^l-@ZdFVqpati
%GMQZR,guj%V1pEBc%AU^@aeM);CDik<K-MVV'>SS&ngUECiWNA][Ag7<'5]k/-oI12+lpX77928+K2oJ9'(A_jt676;Yi'f2\&1l
%T4Ss//D&WZ8o4/+.DljD4DU@'#;0efRrI4,f5:=tRHb,-N#2XS!O/<8-uC7Dc>tA6]:^'?g.Jm3E:p>.5ZqMQo(UP"P`olGT;UCB
%;[d,!cT%`tjuL[]5021%bTRK],5,nahD`):*7onIS&qI_2Ke6h!paR/N&9tS<()SCM[G)kQ`p`<"@*"o!mu#AD7jtu8.aPCCaZF&
%$gk&-9=V09P[h-++Ier:A_E2OZaD\WmRI5GGb&(H6rZAgs*s\JMc-KS5=/J^9Foi#.kAaI4s*9uKhaT-#iVW;q@0PIe/S9kq(N.L
%$M?%#27]/M)q'50@HE9B[$UYM[:Kf()=pF%d,`s`jUUd(UP6/)D$k2b4=Qj,eoF)n;8()IQ?\l#J#:l;@6>GM!d>36k6U)a4rMfT
%3>(gOi@'A0CLM'qLTmXD^3P!.+<[8rlL^gN$r8UC;@GDqD>5iN&/i:jN^/lBJ"aXROFi'`m?gd79C&Y[7>tc_)Fl3dfPXUlPH73X
%Wp6O(o=\+0f8Xi[J'b^XkL?U:/T`tHO:j@l6!^s5,F0BUfeE]4_NcIJks_K"XS`j23-WX@og#V[[K+7]U'dqPl!AYDC)"6omY8/T
%%liRa/cjO>/WXu@NG]UY`DrsF$K'\,Yt=18YFi?I]t&==Unr%YihZnm/4PTMRqjp1q)j/snRNQPZU6n9#q!uoPT+nNWnd^tHA&4b
%cM]RkeG=.3Oo%aOhHC&bHlk1>a%>_Q>(!.P='S%".t9<]>HEik"L?@tO^t@F3^TofS-48pZ/sqNU.,7&P.N8GoriLrEO%lIdTX@Z
%g@@oM%;uJLL5f@@h0fVGBfqhm'"`G-j0Po0/JUSTU<:i45q]DI6rr*JWc#1O]ct6f1H+h<6@V[/*@B&k<qf47q*'<$!N#]_KNT0`
%bBG<P(c&iLFKXI:5#5?_#p`"KUpm>FFrXGkgMXSG&$h3dS7]A5&hM1kLsRRB;#Ap2?r]T=h*EQCZ<tp6An\ACKr&&J_\@C"PjS)!
%%\2peWVh!QNCUmTgt%]nMZ[`47r[/0XGQ=gi61)n47O\s'EP+QG857iot3jLj+Nlci'7I9<i1nm19%kdp<Rbgc+2XLroF7\eOL<9
%fA/1B@L>RsAiU#D#2&@XKBC[;'Pg6F1sp`j:8=BhHb6-$!/@!XA54p9lpW_6TrMEDR!kfP[&=Q0=uMjLbOS)W"'_TuL4aU4]?QOS
%;pV7,@4b\h,#<2#&p[Qf<2oD/-(RN#iVn/lKm*4I<Fkn6StV+T>"D0-PJ64\`D2j/ROZZ.@+t&'B<'2Bp/=Vt;OEB%$b2pRX?/F8
%@:^?[J7.TqlolJf\DNhIGWTlKk7:k&\V%_oNtD_,4UA+4F<UV<6t9GFo3f`d2CbO5hobh`poBHaVRY-ekR/We-a1&9rp)>2p?qQ;
%=rWTET3D3o-^:PN?>grY+#G4FW'!g`VRs@\@`sj54[d#4fl2,]1q]gd;+=iBroJ7o&sr@nfT<^Q0[ZPOXeF7A+utaS)Hb(`Ph;/d
%X]F:qJ[<,mbW@acRPWC?([E,ah?Jf#]"0%QlEDb$[1ONp4I5oEJJq^&6))Y'q,'l"#D'Q#0),.%Pdmg,C,gckcH\uq%kuMSdX%:t
%SX-PHQNM#PSXZ/jXZ%)oe5ue%<H\p%?,2%EONG=tFRAVJb!$ejoMbN-"mB5&OiC4E+.h;l$IUu$NtGV=g22gig'[B@/%.sK\=6>t
%#CYC?QTP,[%*$'YltNA%KT%A0#SEl8m*)2Mnr&AudhuhAKM%u.`\/.*aG!*p\P_H;O[neFafA&pas/6PoU+cakmJ":]EaG`O_n<L
%@C1W4A1>J0W"qY'LYaAKaSr6i0*eXjPtt*K@SC:&'^(?S'G88CbKK0NU@3N]G_RYqB6DcU0(<AqZNfdUjJjuR%VGG@91%ZBVU2<<
%-[si:lK)uOX]`VV<g8\t"m`(Yqr.F"qo@'orGu(,OpRK>5j0275R:$#.#bs/H8DQ5g8h+T^V6I(G8hub[,E(#/:Jculk"3AnIZ`'
%Df@\-`]^%e_;]&`/t4nX*V*1]ON6]#NefeeNB1V!VZ#Pa-,'u3-s9Melu)n"g;;Pr/]/\aOcbnFnO>fg#]<I*a3rIs8dE([W1T&(
%PpK//2/((VY!0/[q[HU["Ps#KO!TNlemA/p(g,C0I]@YYUoj`*YWTqdNk62S`bo\WcLVpuj8B!iA7jZd6%,a0nZ&agYY0'$q*J5r
%"CpK*Wt7G$c0$c<Qo\5%P[5SO=^UEJVJ2pLc'QFuBDf(cB_uLh%[u-sO"JL0@WT9(h[dWs%rgNX+(`N5g"0W/X^4Dm!4^pBdr\E5
%rP;I.$TWq91dsm#>I-ljEi:-_8leK@<$f&ME"1SK\+#D-nUUGLI#a-m1GML1.17eH2b?Ks)AG)`APQmAASbd+/=fq8=Bg;._7M!l
%*EmO65j]-iNPVub1lFIH;5Q.TQFOOM$`_o0!\ZG$EGC's@g1Xe)PV0Zom&Ht<PKl^R(=1l^>*:Ap_gXK]k`anFoKH/@,Thg&Y?LM
%=d)IbBue0&<8Q,fr]6,di_5J:CMY*3CQK`b)V_P@U(c2!71GV-3Gns3J?fl2gPIr+0ICMX3pD4G]5K4Z?=,Oi>,)X,RE3S?r+&q-
%lIa\-*Rl`j:"KT+Q!dk2=$mYpfW5)njF/t<Oa<5h=iNq1,MZ>/e4YOh@q][Ul([&>nd9)f>:UVr(oAL7'WIr&(iN+8IBr=$VG(9k
%8'ihs!QP(A&XfPY_Nf-(fH_^Z"u'o[1R%3<"Mf]<e^6u\FU&k]oS$b:=*"n2"KgSO$qN9M]c%.*+oh-V-S&Hi\:gYE<nl8cirD#G
%C!#IH-BIm@=`U_u0&,TkVJ09,=X`%rbZU#PrB-Tl6!'2.+La'[_K;NkI&2D4:nt>*<7keUfh@t]p874u=iLYE!AXhl346B:K_b1E
%Is%^#fr3j;),`j36U%c-'W%RLOBPA#OsU@K5BVrQHpgh+ak<,BU2AO=Aee9G=F.4rqQb@Z9J1.>$Jf-kXG5Dd,YK5J:.'[(H#\2S
%>?q/4Sjj`Te*#/cV^t0#:/CD2h1eLL+%(6B@Rerr:6Y`H[c9tj2Peda_?;2`b*^c/&-Gpi<KEoL]i>lYG.^PHTja!2W$AY/fB/u/
%X.dJVL'=ciEDSEuo7"*td(+84S4ZjE055\OW>nq8a%sFo5CMpIcsm%G:daj"S\_;2<l@f:pO?`.;qBl7q_4f'1Q1B+%Xgg+AhQYX
%=n!hPMO$[BZ;P?#AP]%V=Y_Rmc_kUmiE1jm2.^X<%UGm?4Z1'#_It19Ao4GUMX/D2]H9,XE%+`Y4g0%3H^K=/.I"k;lNWiK7<3=:
%W]O4H,#)t:F`WT7^n9[9q.*mE$=N<"FGGo0.u+l(Y8As68(+9r]h@EFb8Ya:L?,9)O.UfjJ*k(l$6X)8,lCg:?ph6Dq93:HKe-s$
%;ja&M8MH8Bn6jE?HIgfZ?%uU]1r<5#]bn:&Kn8==o[,Jlju?H,2YBCL+>A0+^h,&o#kHXi@T&@dVHR7aZJ=7C=4uMDf6.%[Tg[C/
%-pb:KQ8irA3q.E^>20![I8<"Be1RE^+!HG.L<N=$RDM#.+,'i];C%OeRjMkg*iWV](rqQt'uk#=XuJ;ZCEHKArSdYO9+NsZCaVp_
%^u2hAmT`aUOUjR=S*CT>n*ojkF-u2^=@'ta&k_Lr91s+r.8l?3,_8VnBr_39hWNI=g@*%:q3SI)/#V2DM06Y>.W!c".`+0/$V(c<
%Yns,M06XKJ*mYmYQlD*I8`p_FBc$S-E"oG/R+SrA+&i4Q9Wd[ffn(_Zem,S<`a51R]QF(W@_<bmqOm<>m@)$_5m=q]rWoFt0S<I*
%iOf#'%l.TqUXE7$4NN2NR^QLAJj8&=o#Wh_n?*G*b^Oj^6qe1)biS3'?f@m^=\Q*\^pc'>%XQMcJ6J[%3!"u]o\9f./fe#SM/OjR
%dhQQ&<K&iZ,)b6#R;mCun]UA)OD^g,CX0lsYXGG'gO))!=_>Wa9K"D1%@cPT=,YU-Osi2LFV2o;:l,E37qEO$;9l1NY)(VOn:'X3
%,6=>ei#J"+JVSaM2ZM2-9s#rJ`'TXpB?U$Z>u.LqqJu&%0cqb067!(?O0oL:<t1CI)PrN6OK$3*23lhFfm:MC@N\N,]!5+L[VRWJ
%Qj3^>WOB7frR)(`U<DeY)m:3^fuPgj3Dh3_gltS*dV^kD9=+GSD$qUm=P>J"E0r6bPF@kFVDqR<;ifs0J4J3i+hGNg9Rsd2f`s_>
%P.,*E<CiPc.EEEfG^cU/_PAe;?;usX?<1u/Gb\j6CQ)0b%j1$&j8Na1]dkF-![M'FrK&ACojt>qC\%("\tfmDjQDBo_$DX^[ZE<h
%_)Y(-Hk3"G9>nt`p3]uN!>"3X(cYWlMO"9%#U2Q,)`8g!nS38?NrCt-:>H9r^e"d^"oc,ONhiJ$.'&s($]5`=$a^#MK@p.EQGPW,
%5qNLcVQuG2P&[*?`]bH3lD-";#*!HtRpZ<8FBa/1B,KelD)s\i^fu8m=Ht.jnai4Z^TU_V6AEr)?W!i\EM=u*s*&TudrNKK7,bhq
%s$7TB$nk<Ko]Iu,*!fe?(("LfKHcpOA-^d5ptt8+k>]dOIH<"h)2B#:C`cBtSa#C"lDdd\jBof[R\h=+:F9iR<`PtaKnN,Q2l"0=
%U;AAnMD@4q6AkW^WITVenjJ+HZ=RtBp:&66dUi)BkCV@)OL6+[&g^0eJsT;F]X4@PQRU7<S8kgGj>B<kQMRbQHO?8t@)PE3f-#rm
%s(RIn9qPK>GeE*r1_cT.MOA;<)Uq*ko/%!!7d4D+@UL(9DZHQYc;6GNmaE^M+:ub5+nr#;n6MgblLb[l7T]r<cg4PIDO7a0J0;JI
%pUW1,5HWr"M>KX]`bi<Lde'*=h1U?HEUiS,bSjWH.J\@Mm-YdK/?TfMX?ntnrEBOF>Jr4-MqL3jb^^Rr$Ou58oHW4*O@U_Z^*Uh5
%A"L&Lra%D5`D-acQ4t@e5$hb`2;IukL#nLT'N&,$P9`jhe,h.t$qDsN\]qb4PX;/L7\l[hNQ5HH;bm1F-jchk10^soGT2P1MA7Y[
%?3[sdp,F-$g^Qj;;=T>Ck>sNJ.a<&bM;bc2e,]%'2i8(@YmP4PLjj'Mb;tpP%:u,kppjq=T!0j;Dk<0BYbnUp*"$CYLJam!<L[@t
%#A^+:ono?i1G[s]@&hE-UAE:4+rBf.]!UW!GaZH<f3:uF!?Q_fRtAjlZ@0*5A4\]%pm/"\JoMpoVQ#MLKFO()=.+Ue3?XRmG<a8A
%HG8lkRc!Z2fDc`$aC!g(8[!T<d4'C%-*'!6;I*CeCg$A!7*9&i\9;ChI[8'CHR_;m_c#jLMX;dY9Vosd+*Y[j:IN(._kh`U:c0,d
%7r[<WhIQFTc<jht1=FS95;!U(+9(5=Wrop3iW1)2G22A-plF:Z]tUJpcG*=6WmZg_gW>4+n,X.q+WEpakXX_13%$+S!.K=O8fj2g
%n2Lf4ZWneYF'M1D*K.eGeVRO[nGnUT4)T1)r:>,S#CQ?FT5=E':K30%VBHfl<%W0s\ZE5OaZ[<.(i9_U^J%($G;83nA@69LL".O@
%)4Fq_C+lnbQ-4?s`j0"`Bn$H<VhN?Y_:$5c/*jJQL^c?f/K1boUqdu$>o/pPa:(F.K!0(USS\KObuj[>1N2fZftU&%U3P$&HYY-%
%4).q**',^K&NP[n`GY3mb9BS(+/\&[$(:OlmPYmn6=uU%)sO\2/)f7t34lZkI>"<X3i1ImpItVjION/[9mB4Y\Y&l?.ea\a$k$0R
%_p>R-S?8P-mAtA5.FmP7mpqV^C8Uh>G-V6:@[.L<l_""TeX#I6PsAs6Wp&hMm,-h<CC4#'DIKCr@,n)g%;`aJDtQpR!*iQ.cgcl%
%L)$%45=6skNgOq9YZ&Y1i9o>MI-qq2>Pgd&lULU.%5$!8(nYVjYF2PR#r9BYls\;!+&J`E\s.6fW`*$`%>WkkgX1()HW+rD!91&E
%oLB#R^,6NDL$`FI@fA;nFZ8[CXQmcYPT7TN7&^s;ScY],7!p2%bNPFEng^o#(o1k'X>M&Jcg*=i6];^D3XWS(fcsacQWQ[FDk_72
%+1k0T=nS#`-+8U8<c`Q-jJ(9nGur*^W]*0E[IaiK9]aVD9/#/4/UMZq_u,:bmB]7RBGGq$KZG[mA314YKGifQiVTMbL4,8YN=_#C
%=(J6?;a6<[853'"+kFMC1aLi*44,FqN#a\U98Ud>[GhHX0cQple''l:JZM3?2U_9(O^mB\%h"e0N<-f'j)d$)RQPqe$"cAUpM*5K
%M^MX)U?phj7^Fjh6)&/5iRe+-/[)Q*Vq!?KGb;SO[W>U.imDQ)TXXhYAgH!Yn<aAZS-4op=61.`d)US0qKL\Waq5QLK@c6n)%0.f
%Hrf?7k-_d,)D^))GkK6Hb%eGah9U!/'MaIE\HDPmApN.e1M+R8RcN44s4q/afKqaXRrWlab-?N!*HLG0DBo^7Td^<1j\C.C-VIa1
%eok0nm.WGTCWgPW%u.ioD`M\G`R0^1B_YsaI&_bAB-J7pYcJ1`Kr8Y[FKBd_.E@Z]II?hQRac'BIQ*m+oA[`^6`WdNZ'9&c<2[4E
%_A5:@O]]e98ej.;YDLCY>1=fF."4jQn2FQrn!4%,.4MB!2+9.$(9dh/*`it%_>>uHiu"o8csB\"'[HAR/e^jDI_kO+:h2g^Z-t+J
%W2b;V4)KO.1%./I@;(`+K#<S=Gm)+=?DMJ2d81jUE"_@K0;Q'ZWqIEUg;pPIf9Z,Am#2Mim=*,PS=2M)ZT<1DXM@6"8H,;r7fJVF
%]-0O9(.q$DeR#&N;Vh,,MPf`,_Io)^[<Z"(&gdD\4OMtKUVTRXLMJ6q1EmjR_6_sD&*G4<bc7V8FDF\*YSO2&\gHXp&GA:tK#2]i
%#tm*Kn`=nbI-l)J*&.2KBoHZ:%,Dfmo5SaL%-L3<8U&oj_Sb@KEsVJ:E]ZE'iS5I*n.rD9]KpGh1#GKOYe$p?Z@u5q(+fWj_P#_$
%0Vh&DAICVp'Pm@SP+84n1KXo/:g.Zg&X$_MdafVcNbjR=;`?eTMDcXuU4Ir^d1d`_YS#qs4p>s?dOJ$nmM"p5]Z\/EiJ15^(T#g&
%=-bC,iYT[Qpo*o=(]VO#dSK\)<8qIQ2m^k``n9XT,4ISU%5btGGFK*%KIlIUP]KG_>\Vo/`CJiMK,,WeH=D6M(`%aXH=u%UY"O/0
%?jc_jEc9e$E'B*gKlqWSlggP&inVddkq4cUN\m@8l#qYX(kG]"F0?c;Fd[NsZ0NAR15UFMU8:WBkHQ6qeVEomIn9)8E,7&(3Tp&Y
%':&<\dd?JkHh.JV'S0sAg+T659U9"tjQsD]PnG&CAZRQ<Z+EH/,g`4Q`\CX/?^3e5(K&-e0=(deY_[2+),(D"0Z#L^6,X'X+U74d
%fs=SH(BPJQ?f^>mO>Lf1hRn]+;-C#_2WY%r+PnA:YcB]pNKkLbFW!%$,$_!9Mp%hAa(dF$fSqP$(l24jJ_a:;Y1_&iXu`^bZ/gMf
%M-2HADX`%l9VW-1.IAhnHTok"[^)c<7<1b(8P-[<RC%O:E7/TpK:Fi"luXkkO]E3b"d\[4;^j<ABJaBVE[;OZWGH!ae.sq!(`KY!
%O[/4%3?1W%Du"k[Xhi;0h@hPYAX7PD<6r"SjI5hZ";(f8082`U2EXUWBeoEp@&N_0/no<cDoY,0.*UiP[%inCQ<.A)<d3eM[1!=(
%R#[>%BsE,C(S6SN\X=5=&Um$R"kTj:C3>onJ1-<j,5o)^E/8]e&MM'i!LiIfM)X-?O/W8#p9:14E/K1`TY4P:Q>7mYWe:FF\%_jH
%*k]1f&`CgLQ&i@*1J9ANpP\V2,^'cSb!r?DffCRoCCA6<>1b[ZKk*U&7#)h)*3:c%EfIZ=[V'c:XX,RKTbZ)`Y)0;\gH9L?C5a53
%Cc@";#RDB/,Eotl]D!%obt.u!F,c/k\?%DF+BsfL/q];Y&PDdSp`+;l5O42n[OUTQ<Ek;3=?=q^-%$m)O8#a(.1.5T0JB.>e4X'Z
%Ou9>TLm^h-'ls^D.4uQK^N3+h+UN-!4dQm26o7/@YC%WTK=0Z)aH6IrSH0g8V<Fh$L'_EkG';BoeEWKkj'+O-A0;6OQ3/#ek;PJh
%eLigJ;F;U]<b?a4Jci4d,6buVdM6^Ue.I0)B-$cqAob/"U<bf9XqOaOl;HD-?CmY&N4,fKb3Q@e:*[0e\sXNZdde1o#rQ8=<$[O;
%"P@Q`[S<8lbTH%h^8tq!!qO2T,X5",gg-ZJm/T4*STK_R@)W1tMO3=l>-W";aJnr]mg9dch5cSKnlp,8`Cp$VC\g[fM78UdTt$)Q
%4O*uU`Ie*!s*jM6s(V-jIaXZ.4aSY4>lqJ*l(i+-QC=eta6mfAnqbdm_iS2tN%k'0D@`CP(WW8[I8sg?XIf(r$[M%c)dBBhELC'p
%D-l[Q+Rt(H`<+Ydh4B2f#4)9?_!Y]>]J*PbSuitBGVmZtVR^Q=S`%bDopUIs"S`OXYB%OOLj07_-LqnQ,C#]lQ&Ipf36tr:aQr/u
%/MM!g+9,A?m6uj6gUd=u3M,41O,%"b3o9%p^3F@=\_P.:'#^M:NcA!^T&b9Q>#KT=<'pdE(&q-XF[6][O=U*B-t9r6=I&G&(5]7]
%S<dF@5UKO"e;3U8/L9%-ZCS1c9sRR@>;_a"4aumCGZj?Q$.N)&+g^MmX>##R#9r7OnQa@od2?l9=jP>$M?sY-#>sB^aR`/SBnJ[f
%e%6&lG`Ioa:@cWG[%(T1Oc\;g"cuo1C27Mf'9uR.]A"PgK%Ii0YM:&rrfp\ddJeI%Cb"K*HD:k`YJme`E';e>!B_EPh>Vf:kIpB%
%QK8>$4>@2,39fl@[QT?u!XqE(L26'>G3<W\%5F]X;eU</1<Ct.OCeR[V.!:o,)[-XcDs3dd_T-IT;<oO0+3JTVXs>_\N5!\4%OqL
%Z&lG4fHFO*0:QL,S@;B"Krpo\84-sjD>qK_)<=2kMlBr"8cjLdjX#0<`g:;.2u/\j^af<E3,!N!;&?_d!aC>r!3r0*#_(%h#`Q`s
%=;Z>#]A449%iO!<OTkd?6=+"@Ck3!'73-BFY-nQmm^W:^6$GH1(%egR[lRjYUTSiMlgh<m.7Lb%'3oE%MP+]?b]ud6bU^!-iFquZ
%\pZ*<3'V6:AU-JcG+AX0l`5T0AG6\5[SH=RT92F,h@jPm<HtHr1^Y9V,kfZ;9_Wh#_NMiAO'A_\3.CAaFn8WPo8\1V5SS>QcfJu@
%E+T6iT(h/9S')KMC(CE>_7IqTHeo1n*/nWVa,-lM3uab3Wti9P5GY"b<7!bAOE=.bls)cN@\8Hi>VBkEn(1dGd1j@ig<9;flq<;A
%Roa?>0V@Cp7+PI'gRTQmElZZ_?Gg*=9Mac-4R9`uER9a9dUptr//kd@RFEZ`lLY9,#dK^AiSFJXs7(?p<g7UIOc$<'4moKRaTsh6
%VaUO-M,5VcbU!LY=<("nj&RdNEBRY^,_h[g6cVVpEK2H7Dfd,Rh`J[I=E1+r_*<7\?eeslUgj<Kri#!;YP1<^r58+$LR5?GTP"Bl
%\r&F0'e-!qCN88fcpY[eF8uqhggf!/TJTPM9Je%X3BW+u8j+rmM(i;Tk\0p@fmP5$H$S*YHdo402/g4Y.VI0>I>U]ghbBk\j,LWL
%"\!k:fcFMj;lA@:fCsdpl?DnS?[_OtgRB;AI<^(L"(1ubc.DF`pu0KTs7,NpkF[2$h4&o-HhHNjDnc2Lc1g]+H2jpH?[m=ph=ofU
%Gk^L8^O>ut+_l*Upu748IfJ0K5Pkt'Rk\m~>
%AI9_PrivateDataEnd
